Namespace(ac_loss_weight=0.1, activation='leakyrelu-0.2', batch_size=32, bbox_pred_loss_weight=10, checkpoint_every=10000, checkpoint_name='checkpoint', checkpoint_start_from=None, coco_include_other=False, coco_stuff_only=True, coco_train_image_dir='datasets/coco/images/train2017', coco_train_instances_json='datasets/coco/annotations/instances_train2017.json', coco_train_sg_json='datasets/coco/annotations/sg_train2017.json', coco_train_stuff_json='datasets/coco/annotations/stuff_train2017.json', coco_val_image_dir='datasets/coco/images/val2017', coco_val_instances_json='datasets/coco/annotations/instances_val2017.json', coco_val_sg_json='datasets/coco/annotations/sg_val2017.json', coco_val_stuff_json='datasets/coco/annotations/stuff_val2017.json', crop_size=32, d_activation='leakyrelu-0.2', d_clip=None, d_img_arch='C4-64-2,C4-128-2,C4-256-2', d_img_weight=1.0, d_normalization='batch', d_obj_arch='C4-64-2,C4-128-2,C4-256-2', d_obj_weight=1.0, d_padding='valid', dataset='coco_sg', discriminator_loss_weight=0.01, embedding_dim=128, eval_mode_after=100000, gan_loss_type='gan', gconv_dim=128, gconv_hidden_dim=512, gconv_num_layers=5, image_size=(64, 64), include_relationships=True, instance_whitelist=None, l1_pixel_loss_weight=1.0, layout_noise_dim=32, learning_rate=0.0001, loader_num_workers=4, mask_loss_weight=0, mask_size=16, max_objects_per_image=10, min_object_size=0.02, min_objects_per_image=3, mlp_normalization='none', normalization='batch', num_iterations=1000000, num_train_samples=None, num_val_samples=1024, output_dir='/data/home/cs224n/sg2im', predicate_pred_loss_weight=0, print_every=10, refinement_network_dims=(1024, 512, 256, 128, 64), restore_from_checkpoint=False, shuffle_val=True, stuff_whitelist=None, timing=False, train_h5='datasets/vg/train.h5', use_boxes_pred_after=-1, use_sg_cache=False, val_h5='datasets/vg/val.h5', vg_image_dir='datasets/vg/images', vg_use_orphaned_objects=True, vocab_json='datasets/vg/vocab.json')
WARNING: Got stuff_only=True but stuff_json=None.
Falling back to stuff_only=False.
called set_image_size (64, 64)
Total inital images 591435
Found 81 object categories.
Found 3334 relationship types
Dumped 555510 images to sg object to json
Dumped 40469 images to relationships to json
Dumped 3334 pred name to idx to json
Dumped 3334 pred idx to name to file
Read 325 error images ids.
After pruning, 325 images left.
Training dataset has 325 images and 1750 objects
(5.38 objects per image)
called set_image_size (64, 64)
Total inital images 25000
Found 81 object categories.
Found 455 relationship types
Read 325 error images ids.
After pruning, 0 images left.
91
3334
['__in_image__', 'left of', 'right of', 'above', 'below', 'inside', 'surrounding', 'with', 'on', 'of', 'sit on', 'in', 'have', 'hold', 'next to', 'lay on', 'sit on top of', 'sit in', 'ride', 'near', 'sit to', 'at', 'sit next to', 'fill with', 'look at', 'in front of', 'lay on top of', 'behind', 'stand on', 'stand to', 'lay in', 'lie on', 'travel down', 'wear', 'sleep on', 'top with', 'sit at', 'stand next to', 'use', 'sit in front of', 'on top of', 'stop at', 'park to', 'sit with', 'eat', 'carry', 'lay next to', 'under', 'pull into', 'watch', 'park at', 'pull', 'by', 'cut', 'stand by', 'rest on', 'play with', 'sit under', 'ride on', 'hold up', 'around', 'over', 'lay down on', 'attach to', 'lay to', 'fly', 'stand with', 'fly in', 'sit by', 'sit beside', 'stand on top of', 'beside', 'sleep on top of', 'contain', 'feed', 'stand near', 'park in front of', 'paint on', 'park next to', 'surround by', 'read', 'drink from', 'walk with', 'write on', 'stand in front of', 'park with', 'go down', 'sniff', 'sleep in', 'sit of', 'cut with', 'travel on', 'work on', 'stand in', 'between', 'underneath', 'stand behind', 'perch on', 'lie in', 'sit behind', 'tow', 'ride on top of', 'fly through', 'cover', 'cover with', 'walk', 'walk by', 'to', 'pass', 'set with', 'sit underneath', 'stand beside', 'do on', 'sit near', 'place on', 'draw', 'curl up on', 'as', 'hold with', 'park in', 'from', 'travel past', 'lay with', 'park by', 'pull up to', 'eat from', 'jump', 'cover in', 'out of', 'park', 'have on', 'stand under', 'stick in', 'lay down in', 'park near', 'make', 'stand over', 'swing', 'for', 'set on', 'relax on', 'surround', 'lean on', 'park on', 'lie next to', 'brush', 'approach', 'curl up in', 'drive', 'lie on top of', 'cut into', 'herd', 'sit atop', 'follow', 'sit between', 'catch', 'track at', 'slice', 'drive past', 'walk to', 'pet', 'lay of', 'drink out of', 'sit inside', 'park behind', 'lick', 'wait at', 'lie to', 'feature', 'play on', 'lay by', 'following', 'fill next to', 'park beside', 'track to', 'hang from', 'lay under', 'pose with', 'stare at', 'lounge on', 'stick out of', 'walk behind', 'pass by', 'put on', 'sit', 'sleep to', 'lean against', 'hold on', 'draw on', 'show', 'eat out of', 'wait for', 'travel along', 'hit', 'chase', 'including', 'rest in', 'sleep next to', 'leave', 'eat with', 'hold next to', 'walk beside', 'clean', 'type on', 'look down at', 'walk next to', 'chew on', 'bear on', 'track with', 'seat on', 'fill on', 'hold onto', 'stick into', 'drive on', 'cut up', 'grab', 'inside of', 'fill on top of', 'fly over', 'walk past', 'size', 'display on', 'shape like', 'drive down', 'lie down on', 'sit around', 'take out of', 'lay in front of', 'jump on', 'come out of', 'leave on', 'lead', 'walk near', 'hold in front of', 'look up at', 'wear with', 'lay down on top of', 'relax in', 'connect to', 'hold to', 'travel through', 'stretch out on', 'pour into', 'hook up to', 'move along', 'run with', 'face', 'sit above', 'walk in front of', 'lay across', 'stand', 'bear next to', 'touch', 'bear with', 'pour', 'put into', 'haul', 'onto', 'rest on top of', 'top on', 'stop with', 'display', 'tie to', 'wear on', 'cut on', 'bite into', 'drive in front of', 'give', 'ride in', 'pull with', 'push', 'perch on top of', 'stand of', 'make with', 'like', 'look in', 'play', 'jump over', 'stop next to', 'hang on', 'look with', 'pose on', 'track near', 'feed from', 'open on', 'talk on', 'operate on', 'decorate with', 'beneath', 'stop on', 'atop', 'pan on', 'look out of', 'complete with', 'drive by', 'cover by', 'cut out of', 'ride down', 'put in', 'close to', 'pull behind', 'go on', 'have beside', 'lie beside', 'pull by', 'eat at', 'do with', 'line with', 'lounge in', 'nap on', 'stick', 'sit across from', 'stand underneath', 'flip', 'stand between', 'look into', 'operate', 'serve on', 'follow by', 'towards', 'cook in', 'look behind', 'cover on', 'take on', 'besides', 'board', 'arrange on', 'shape', 'hide under', 'sit down with', 'enjoy', 'lay near', 'smell', 'sleep with', 'ride with', 'fight over', 'wrap around', 'glass on', 'look out', 'walk on', 'bowl on', 'lean up against', 'run on', 'hug', 'reach for', 'load with', 'lay beside', 'make out of', 'sit upon', 'lay down by', 'lie down in', 'look', 'sit down on', 'face on', 'move down', 'serve with', 'hang over', 'lay inside', 'make on', 'walk across', 'prepare', 'watch on', 'wash', 'play in', 'bowl with', 'drive to', 'hold out', 'hang out of', 'while', 'cross with', 'set up with', 'slice with', 'balance on', 'include', 'stuff on', 'peel', 'handle', 'site on', 'fall off', 'top in', 'drive behind', 'stick out', 'share', 'take from', 'examine', 'fill', 'slice into', 'among', 'park between', 'get on', 'top next to', 'stop by', 'pull out of', 'cook', 'pull to', 'drag', 'lay behind', 'top', 'lay underneath', 'do', 'along', 'drive through', 'hit with', 'print on', 'observe', 'enter', 'stand around', 'sit close to', 'throw', 'outside', 'arrive at', 'graffiti on', 'take off in', 'feed to', 'balance', 'top on top of', 'lay', 'walk in', 'bite', 'feed with', 'ride in front of', 'turn', 'lie with', 'decorate', 'jump with', 'guide', 'stick to', 'groom', 'design on', 'stare on', 'go through', 'park around', 'rest next to', 'surf on', 'hydrant with', 'have next to', 'take with', 'line up on', 'pick up', 'scratch', 'dock with', 'cross', 'take', 'use with', 'climb on top of', 'make at', 'pull next to', 'bake in', 'alongside', 'bear in', 'drive next to', 'spray', 'hydrant on', 'lay down with', 'remove from', 'slice on', 'hold by', 'perform on', 'grow on', 'park of', 'have to', 'lie under', 'meter on', 'eat next to', 'take off into', 'see', 'slice up', 'point to', 'leave in', 'stuff', 'pass on', 'sleep under', 'walk around', 'mount above', 'lean over', 'have by', 'fly with', 'rise in', 'get', 'come from', 'drive with', 'lounge on top of', 'cover next to', 'look over', 'rest inside', 'such as', 'kick', 'pass through', 'carry on', 'hide behind', 'chop up', 'put', 'wait on', 'occupy', 'pull away from', 'adjust', 'lay out on', 'look on', 'tie', 'inspect', 'eat by', 'lay down under', 'walk under', 'hold in', 'place in', 'bear', 'against', 'stand up on', 'walk along with', 'graze', 'drive down with', 'cross in front of', 'fall off of', 'make of', 'get from', 'asleep on', 'sit on of', 'investigate', 'come into', 'plate on', 'lock to', 'kiss', 'come down', 'sit over', 'display with', 'pose in', 'mount', 'stall with', 'add to', 'adorn with', 'serve at', 'look like', 'pull on', 'ride through', 'cook on', 'set in', 'bow', 'eat to', 'ride to', 'rest against', 'drape over', 'stand outside', 'next', 'walk towards', 'sit up on', 'roll down', 'give to', 'dress in', 'rid', 'gather around', 'sprinkle on', 'sill to', 'strap to', 'snuggle on', 'bear on top of', 'lie behind', 'kneel on', 'hydrant to', 'mount on', 'climb into', 'move on', 'cut from', 'pile on', 'stand from', 'use on', 'feeder with', 'top to', 'hang off of', 'sleep beside', 'lie atop', 'overlook', 'serve', 'lie inside', 'sit beneath', 'hang above', 'check out', 'swing at', 'hold up to', 'about', 'set to', 'flip on', 'lean next to', 'walk underneath', 'cover to', 'decorate on', 'paint with', 'open', 'phone on', 'ride next to', 'stand at', 'peek out of', 'ha', 'fly up in', 'snuggle with', 'cut to', 'have in', 'graze with', 'paint over', 'drink on', 'go with', 'prop up', 'cross as', 'stand among', 'fix', 'stop to', 'move across', 'sniff on', 'stretch on', 'park on top of', 'kneel in', 'attach with', 'stack on', 'move', 'roll around on', 'lay down behind', 'off of', 'curl on', 'sit up', 'nudge', 'stop in', 'load onto', 'npmod', 'fly near', 'lie of', 'stop', 'sit in between', 'jump in', 'lie in front of', 'track next to', 'place', 'paint', 'dock at', 'walk down with', 'mix in', 'fill in', 'perform', 'carve into', 'view', 'reach into', 'drink', 'pan on top of', 'sit below', 'stretch out in', 'line up at', 'look under', 'walk through', 'step on', 'wear next to', 'make down', 'sit down in', 'ride by', 'spread', 'drive in', 'leave with', 'figurine on', 'lay down next to', 'mirror of', 'contain with', 'rest to', 'lean out of', 'float next to', 'mirror with', 'nuzzle', 'contain on', 'pot on top of', 'ride past', 'cut through', 'look inside', 'ride up', 'walk between', 'hand on', 'rub on', 'round up', 'lean into', 'turn on', 'point at', 'light on', 'help', 'run around', 'drive beside', 'toward', 'sleep by', 'stop in front of', 'stare into', 'make into', 'shine on', 'open with', 'transport', 'travel', 'empty', 'jump off', 'chain to', 'go past', 'surround with', 'lie by', 'tuck into', 'hide underneath', 'bend over', 'sign next to', 'look as', 'wear on top of', 'match', 'drive near', 'moor with', 'flank', 'miss from', 'dip into', 'wrap on', 'stand close to', 'lay down underneath', 'skate on', 'paw on', 'look by', 'sniff at', 'arrange in', 'slice of', 'hold at', 'hang next to', 'rest beside', 'block', 'lay over', 'walk on top of', 'rest near', 'stand outside of', 'seat at', 'chair with', 'brush with', 'sleep behind', 'write beneath', 'travel by', 'squat by', 'cut in', 'site on top of', 'shake', 'walk down', 'mirror on', 'walk toward', 'hydrant next to', 'fall in', 'sign on', 'site next to', 'eat on', 'hang near', 'strip', 'track in', 'pull over', 'extend', 'bath', 'bring', 'monitor on', 'crouch with', 'eat off', 'lay down inside', 'draw with', 'head down', 'walk away from', 'fly next to', 'star at', 'run', 'mount to', 'perch atop', 'set around', 'chop', 'text on', 'expire on', 'hang off', 'prop against', 'stand atop', 'travel to', 'fill up', 'sit alongside', 'see in', 'grow in', 'drive over', 'feature with', 'site at', 'run to', 'across', 'graze by', 'depict', 'stand away from', 'run through', 'throw to', 'hang out on', 'pull in', 'ice on', 'accompany', 'take next to', 'curl up inside', 'poke out of', 'ascend into', 'cover on top of', 'print', 'launch', 'sheer', 'sit up with', 'walk over to', 'consist of', 'lay among', 'pizza on', 'park outside', 'miss', 'play on top of', 'press on', 'play by', 'sleep in front of', 'dip', 'load', 'lie between', 'tape to', 'walk up to', 'speed down', 'snowboard on', 'phone in', 'reach in', 'travel behind', 'eat beside', 'stand in between', 'pan with', 'sit along with', 'pull at', 'turn below', 'attach', 'stand as', 'come to', 'bowl next to', 'bear to', 'pick up at', 'wait with', 'mirror above', 'jump to', 'read with', 'place behind', 'show with', 'check', 'outdoor next to', 'fly to', 'look next to', 'write below', 'theme', 'stand above', 'gear on', 'fight with', 'get off', 'park along with', 'float in', 'design', 'leave over', 'squeeze onto', 'frost', 'crash into', 'look around', 'grow from', 'look of', 'race', 'stick of', 'say', 'hold down', 'clean on', 'run by', 'love', 'walk along', 'wrap', 'offer', 'run next to', 'drive away from', 'lie down on top of', 'row', 'hover over', 'walk alongside', 'float on', 'foot on', 'fall into', 'curl up with', 'open to', 'past', 'have out', 'make next to', 'remote on', 'put up to', 'side', 'pierce', 'lift', 'run towards', 'go by', 'ride along', 'feed on', 'jump into', 'site in', 'sit up against', 'sleep of', 'place on top of', 'bear in front of', 'blanket on', 'play in front of', 'ride behind', 'lay against', 'lay out in front of', 'signal with', 'ride beside', 'attack', 'arrange', 'topping on', 'lick on', 'attend to', 'go along', 'spread on', 'post on', 'stick on', 'oven with', 'lean on top of', 'open in', 'peer into', 'pull from', 'cut off of', 'pause at', 'look from', 'travel into', 'smile with', 'jump above', 'follow behind', 'meter next to', 'lean towards', 'roll with', 'write under', 'set out on', 'sill next to', 'have over', 'line', 'balance on top of', 'cut by', 'adorn', 'lay down near', 'wait in', 'hang', 'lie', 'chew', 'position in front of', 'wipe out on', 'crouch on', 'cut next to', 'sit before', 'cut up with', 'shear', 'look down on', 'run behind', 'light up', 'fly above', 'stack on top of', 'seat in', 'rest', 'frame', 'roll through', 'travel with', 'stop near', 'hand from', 'into', 'write underneath', 'set in front of', 'read on', 'strap on', 'attach in', 'pack on', 'lay on of', 'bowl in', 'hang at', 'pile on top of', 'pack with', 'recline on', 'plate', 'see through', 'race on', 'fly below', 'perch with', 'pose on top of', 'sleep against', 'peck on', 'keep', 'sprawl on', 'write on top of', 'headphone on', 'catch at', 'drive alongside', 'soar through', 'train', 'prop up in', 'rub up against', 'return', 'dine', 'dress as', 'have through', 'pour on', 'place next to', 'travel towards', 'comb', 'post above', 'go across', 'crouch under', 'sit up in', 'rub against', 'eat off of', 'fly on top of', 'chop with', 'carry out', 'stir with', 'layer', 'sprawl out on', 'stick down in', 'flipping', 'sit from', 'eat in', 'cut on top of', 'peek out under', 'graze to', 'cuddle with', 'light', 'open near', 'raise', 'swing with', 'lie underneath', 'strew on', 'tie up', 'dress on', 'cuddle up to', 'lay down in front of', 'reflect in', 'do by', 'grind', 'jump on top of', 'come towards', 'play around', 'look up with', 'post near', 'hand', 'tower above', 'jump up with', 'boil on', 'kick up', 'sleep near', 'peer out from', 'tie with', 'shape as', 'watch from', 'out', 'park outside of', 'sit down at', 'wash in', 'pass in front of', 'hold out to', 'doze on', 'perform with', 'lay below', 'pose beside', 'move by', 'garnish with', 'sign with', 'cuddle on', 'deliver to', 'gather on', 'toast on', 'spill out of', 'ride inside', 'manipulate', 'hydrant around', 'dangle in front of', 'curl next to', 'wrap next to', 'smile in', 'write above', 'nibble on', 'feed next to', 'drive towards', 'travel next to', 'ramp', 'bear behind', 'tie up to', 'spray onto', 'paw at', 'lie down with', 'player up to', 'pile in', 'lay before', 'roll next to', 'carry in', 'drape', 'decorate in', 'stop inside', 'place with', 'load up', 'shake with', 'set', 'let', 'race down', 'jump off of', 'drive of', 'use as', 'tmod', 'fold on', 'sit outside', 'separate by', 'open on top of', 'drape on', 'obscure', 'snack on', 'hang outside', 'nap in', 'move along on', 'pull past', 'have in front of', 'hang with', 'hammer below', 'meet on', 'grow around', 'jump at', 'smoke behind', 'park inside', 'cover up with', 'pull up in', 'tape on', 'through', 'travel beside', 'drive along', 'sneak up behind', 'tuck under', 'stand next', 'share with', 'fill to', 'graze next to', 'curl in', 'head with', 'sit across', 'set by', 'sit out with', 'cover behind', 'touch to', 'curl up on top of', 'tell', 'amidst', 'look for', 'fly beside', 'stand beneath', 'leave above', 'pass with', 'confront', 'bend down to', 'take on top of', 'store with', 'make for', 'track by', 'take out', 'pack in', 'present', 'hitch to', 'i', 'hook up with', 'peek out behind', 'drive under', 'chase after', 'have around', 'smile at', 'open next to', 'place beside', 'shade', 'plate with', 'glass with', 'fly behind', 'huddle under', 'hold out of', 'quote on', 'look to', 'meter to', 'put to', 'hide in', 'outside of', 'stop behind', 'place to', 'sun', 'come off', 'lean up on', 'park besides', 'say on', 'fall with', 'eat out', 'hydrant', 'look beside', 'prop on', 'sniff in', 'point', 'stick next to', 'wedge in', 'ready', 'frost on', 'dock to', 'watch with', 'set on top of', 'play underneath', 'chase by', 'pull up at', 'head to', 'peak out inside', 'stare next to', 'stir', 'watch over', 'stick from', 'dress with', 'sit out in', 'load on', 'snowboard down', 'glide with', 'reflect', 'sit out on', 'rub', 'use beside', 'post below', 'sleep underneath', 'cross on', 'lift from', 'pack', 'nap to', 'touch with', 'carry with', 'tend to', 'face down on', 'sit among', 'work with', 'hold as', 'bath with', 'celebrate with', 'platter on', 'aim at', 'fly towards', 'meet', 'kneel next to', 'wrap to', 'lay around', 'stuff in', 'relax with', 'buffet with', 'get out of', 'bow on', 'design as', 'miss to', 'sit down under', 'move towards', 'rest upon', 'milk', 'sleep close to', 'peer over', 'walk as', 'pepper on', 'mount on top of', 'lay atop', 'light to', 'pass next to', 'slice next to', 'dot', 'crust on', 'milk from', 'up', 'site to', 'snowboard in', 'meter by', 'donut on top of', 'drag behind', 'pass beside', 'post with', 'slice in', 'practice on', 'drive on top of', 'walk in between', 'strike with', 'rest behind', 'make like', 'leap over', 'run beside', 'guard', 'glaze', 'cutter on', 'rest atop', 'reveal', 'prepare on', 'wait behind', 'round', 'outdoor to', 'shade by', 'smile to', 'hang around', 'lay out to', 'lick from', 'open at', 'run away from', 'sip from', 'walk around on', 'phone on top of', 'direct', 'put on top of', 'travel on top of', 'before', 'clean on top of', 'reach out to', 'focus on', 'stand inside', 'use next to', 'repurpose as', 'light around', 'protect by', 'tie up next to', 'locate in', 'crash on', 'pose in front of', 'watch by', 'look through', 'set up on', 'counter with', 'hang in', 'lap', 'get into', 'rid on', 'have above', 'peak out of', 'sink', 'nestle between', 'tow on', 'travel down with', 'walk among', 'stud to', 'fascinate', 'stab with', 'wait by', 'drive into', 'bury in', 'stock with', 'hydrant in front of', 'accompany by', 'banana on', 'idle at', 'sit into', 'press against', 'leave around', 'attach in front of', 'color', 'leave under', 'instead of', 'apply to', 'object on top of', 'poke into', 'lie down next to', 'preen', 'drink in', 'hold over', 'rest with', 'reach up by', 'reach up to', 'seat near', 'keep on', 'spread out on', 'leave in front of', 'bark at', 'hoagie on', 'see on', 'face toward', 'stoop down beside', 'syrup beside', 'crawl between', 'hang up by', 'range behind', 'watch in', 'slice across from', 'crouch down beside', 'mattress near', 'place near', 'hydrant beside', 'float past', 'pore into', 'contain tmod', 'bite around', 'wale away from', 'work on in', 'cross next to', 'lap with', 'spear by', 'paint around', 'pour to', 'wake towards', 'drive around', 'go into', 'sail away from', 'wait outside', 'dote', 'stnade close to', 'coast along on', 'view inside', 'cross past', 'feed in front of', 'olly', 'hunch over on', 'arrive next to', 'roll by', 'pet in front of', 'seat with', 'cozy up in', 'lay out under', 'allow above', 'throw up into', 'carry around', 'carry at', 'cut under', 'halfway into', 'graffiti over', 'cap on', 'drive at', 'rub up', 'leave on top of', 'murder', 'rise around', 'descend out of', 'lower near', 'mess with', 'half-submerge in', 'curl with', 'pie to', 'bedspread in', 'dance in', 'put next to', 'heard', 'laze on', 'claw', 'fin in', 'highlight', 'fly on', 'crouch down on', 'climb with', 'contain next to', 'bathe', 'mount between', 'lean over into', 'wait alongside', 'upon', 'have below', 'walk of', 'arch with', 'furnish with', 'wear in', 'sittie on', 'look up', 'pose for', 'slice on top of', 'display in', 'feature next to', 'broccoli on', 'move from', 'stick with', 'via', 'run past', 'yawn on', 'peek from', 'paddle', 'oven above', 'position in', 'head for', 'tilt up toward', 'along with', 'tow behind', 'peer in', 'push on', 'an', 'broccoli next to', 'cuddle', 'bend over to', 'remove', 'squeeze against', 'bedspread on', 'bowl beside', 'scoop out from', 'rest across', 'meter around', 'lead around', 'live to', 'bend down with', 'come at', 'position behind', 'come up next to', 'have beneath', 'throw up', 'structure next to', 'pick up by', 'astride', 'grace', 'sit up like', 'tilt on', 'paint in', 'touch at', 'doughnut on', 'nestle beside', 'repair with', 'navigate', 'laze against', 'ski down behind', 'perch up', 'cage with', 'stretch out over', 'wheel on', 'drink next to', 'ready for', 'ball up in', 'mirror over', 'twist in', 'support', 'goose', 'crouch', 'indicate', 'enjoy in', 'tip over on', 'skillet on', 'turn down', 'frolic with', 'store on top of', 'sit close by', 'smile behind', 'feed at', 'pull out over', 'flutter to', 'streak behind', 'pull in at', 'pose under', 'come up on', 'hover', 'balance over', 'screw to', 'trim', 'converse with', 'have on top of', 'cat on', 'glass in front of', 'lay between', 'seat to', 'draw near', 'hold down with', 'drink near', 'sheer off of', 'skiboard on top of', 'look underneath', 'nestle against', 'surf in', 'appear with', 'go down behind', 'set under', 'crow into', 'squint into', 'frame by', 'rest alongside', 'talk with', 'pull out under', 'do around', 'cloth with', 'jump through', 'travel near', 'wrangle', 'ofa', 'sprout in', 'lean out', 'hand out', 'change', 'knock off', 'sit than', 'ride alongside', 'film', 'stitt at', 'command by', 'chain', 'poke out from', 'self', 'post underneath', 'show in', 'pull out next to', 'play inside', 'stand up near', 'splash', 'holdie', 'dress in front of', 'play near', 'touch on', 'pad on', 'climb up', 'leave by', 'pass behind', 'stand about', 'bend over on', 'relax next to', 'place above', 'splash in', 'veggie', 'give next to', 'floor', 'grab on', 'watch against', 'radical on', 'jump up', 'poise over', 'whirlpool on', 'run along', 'modify onto', 'foil on', 'tackle', 'mower on', 'hold on behind', 'locate near', 'paw with', 'ride as', 'pool with', 'squat tmod', 'sharpen on', 'set at', 'provide by', 'contain within', 'pile around', 'do off', 'break', 'deice', 'lounge next to', 'foot off', 'mark on', 'sniff by', 'prop up against', 'view up with', 'inspire on top of', 'mess up', 'stack to', 'set behind', 'smell in', 'close behind', 'that', 'arch in front of', 'gaze up at', 'ship next to', 'walk down behind', 'move along at', 'fire on', 'charge near', 'nap next to', 'there on', 'cart with', 'perch to', 'pin on', 'mitt to', 'drive along next to', 'weigh in', 'glass up on', 'attach on', 'flip over', 'melt down', 'wetsuit on', 'keyboard next to', 'stand out with', 'submerge with', 'upright', 'contain to', 'stitch on', 'crouch before', 'chew up', 'shake on', 'pizza on top of', 'store to', 'float among', 'nap alongside', 'stand into', 'foot behind', 'howl in', 'dump onto', 'counter on', 'pull in to', 'check on', 'swing for', 'skateboard down with', 'signal by', 'name on top of', 'asleep in', 'site in front of', 'pull up across from', 'set up against', 'sign around', 'hock up to', 'during', 'admire in', 'travel down behind', 'trail behind', 'look out at', 'layer on top of', 'kill', 'hand next to', 'lean with', 'graze around', 'hold on top of', 'teach', 'swing in front of', 'jump inside', 'make up above', 'corral', 'block on', 'mingle near', 'carry down', 'go', 'cross for', 'spread with', 'suspend behind', 'pass down', 'wale near', 'situate near', 'stack by', 'stop along at', 'pet to', 'line to', 'lick in', 'lay around in', 'fall on', 'draw in', 'finish up at', 'track behind', 'case with', 'kneel in front of', 'write into', 'overlook from', 'ride around', 'go up to', 'back up into', 'glass of', 'link around', 'cover over', 'remaining on', 'retrieve', 'stand up in', 'kneel down under', 'peel off of', 'center around', 'bowl to', 'collide in', 'cat in', 'can by', 'run up behind', 'burner on', 'snuggle up in', 'bear between', 'near to', 'prepare with', 'cut up in', 'pant next to', 'browse at', 'bouquet in', 'fly over with', 'scissor over', 'cross at', 'shield by', 'interact under', 'eat near', 'pull off', 'sill above', 'stop for', 'puke into', 'pause in front of', 'cross by', 'pillow on', 'hear on', 'stare down at', 'move between', 'see of', 'make beside', 'rack next to', 'heap with', 'stem on', 'pull in front of', 'fill into', 'carry in front of', 'cushion around', 'stop under', 'point toward', 'wade by', 'stick through', 'bell on', 'stick outside', 'mat on', 'board past', 'foot above', 'seat', 'emerge from', 'tow next to', 'monitor to', 'cover around', 'position to', 'accompany with', 'push over', 'tape up', 'tide', 'look up next to', 'put over at', 'form', 'add beneath', 'tow by', 'unload from', 'sleep above', 'peek into', 'park against', 'hydrant under', 'follow next to', 'select', 'curl to', 'enclosure around', 'pass at', 'snuggle up inside', 'paw', 'slice atop', 'come out underneath', 'face beside', 'sniff around', 'peer from', 'position on', 'make up in', 'wrap beside', 'zip up', 'stare out at', 'finish', 'break up in', 'leap to', 'follow beside', 'stick out in front of', 'hog', 'tuck on', 'grab at', 'dough on top of', 'chase along behind', 'chair in', 'rest up against', 'handle from', 'spill on', 'sculpture around', 'grow inside', 'appoint with', 'look toward', 'dump into', 'freezer to', 'rest in front of', 'motorcycle down with', 'leave over on', 'view with', 'jump off onto', 'ivy', 'push under', 'outdoor on', 'lean over with', 'hydrant near', 'rope', 'hold up on', 'stationary to', 'grip', 'turn by', 'wake next to', 'candy', 'drawer in', 'tint to', 'kick up at', 'drink out', 'relax atop', 'make up', 'puncture by', 'drool at', 'make up of', 'surprise in front of', 'eat under', 'cart in', 'fight near', 'scoop', 'rack at', 'meditate in front of', 'stare', 'back', 'staple', 'hand in', 'look off of', 'hold up by', 'remainder of', 'help out', 'kneel to', 'll over', 'connect with', 'hay next to', 'chowder with', 'tie down to', 'harness behind', 'work underneath', 'kneel over in', 'leave behind', 'elevate to', 'bend over in front of', 'look down next to', 'accept', 'hang under', 'etching on', 'notice', 'excite in front of', 'snooze on', 'bear inside', 'bowl for', 'prop up by', 'bet by', 'amongst', 'cross under', 'pass between', "stand 's", 'grow out with', 'after', 'display before', 'peer around', 'paw on top of', 'go than', 'cart next to', 'leap on', 'glue on top of', 'stand beyond', 'jump atop', 'drawer above', 'step into', 'pay for', 'top inside', 'walk around in', "sit 's", 'pass in', 'pull towards', 'cuddle up with', 'obscure with', 'sleep beneath', 'shave on', 'leave beside', 'drive off to', 'join', 'sit against', 'turn in front of', 'board before', 'litter with', 'face on top of', 'fence in', 'peer at', 'lean', 'investigate beside', 'adorn on top of', 'decorate to', 'circle', 'surround on', 'fly into', 'hydrant on top of', 'eye-ball with', 'engage in', 'read at', 'squate over', 'peel at', 'curl up behind', 'tip over', 'pour in', 'chill in', 'stop below', 'sauvignon', 'hook inside', 'because', 'garage on', 'scribble on', 'go to', 'scratch to', 'pour up', 'taxi down behind', 'stack', 'place upon', 'sew to', 'standing', 'crouch in', 'sleep on of', 'scatter around', 'grill on', 'descend down', 'offer to', 'fold out', 'sticker on', 'place in front of', 'macaroni on', 'gear in', 'bowl in front of', 'look out underneath', 'jump in between', 'smile by', 'spray in', 'drive down to', 'anchor at', 'picture with', 'wipe out in', 'bow before', 'support next to', 'hold beside', 'lay out around', 'rise', 'bye', 'crouch beneath', 'fall over by', 'take off to', 'place alongside', 'curl atop', 'vegetable in', 'pan next to', 'nestle to', 'light if', 'smash in', 'run at', 'hang out', 'oven inside', 'log on', 'locate within', 'squish in between', 'entertain', 'turn in', 'vegetable on', 'warn of', 'peek out inside', 'relax on top of', 'sit alongside of', 'vein on top of', 'frame under', 'play behind', 'yawn to', 'face towards', 'travel alongside', 'wrestle with', 'vertical in front of', 'haul around', 'sniff next to', 'run toward', 'silverware', 'prop to', 'rail above', 'do at', 'throw up in', 'plate at', 'order', 'off', 'lean back on', 'halve with', 'come across', 'start to', 'adrift aboard', 'lay on next to', 'stand around beside', 'hook up in', 'rest besides', 'kneel beside', 'claim as', 'pull over at', 'relax under', 'iwth', 'bruise', 'kneel behind', 'size on', 'follow close to', 'battle over', 'plate around', 'ready to', 'use at', 'incision around', 'prop up in front of', 'pail next to', 'lick on top of', 'etch into', 'look out under', 'hang out over', 'dot by', 'stare with', 'compare to', 'slice in front of', 'store in', 'knock over', 'drive near to', 'add on', 'text ON', 'climb up to', 'move over', 'line up with', 'run near', 'sneak up on', 'rail by', 'clementine', 'outdoor with', 'toss to', 'pick on', 'roll up by', 'signal over', 'mash', 'wedge', 'rust on', 'swipe', 'stem in', 'leave out on', 'flash below', 'smile on', 'kneel down on', 'saucer on', 'bunch of', 'far from', 'track on', 'quarter with', 'look off to', 'logo', 'tot on', 'read next to', 'mount behind', 'yarn on', 'collect off to', 'ledge behind', 'take over', 'dish in', 'pant beside', 'set up over', 'take down up', 'reach forward with', 'station on', 'stare off with', 'dispenser to', 'headlight out', 'sprinlkle on', 'hang out in', 'look down in', 'light behind', 'top including', 'brown around', 'maneuver', 'boarder on', 'float beside', 'boarder', 'rack beneath', 'pave with', 'tog on', 'bring in', 'pierce with', 'green in', 'scratch on top of', 'contrast with', 'comfortable on', 'smile next to', 'throw on top of', 'plate to', 'turn with', 'fly at', 'find on', 'hook to', 'scatter on top of', 'squat on', 'pile in front of', 'track outside', 'sign under', 'bogey at', 'mug on', 'sniff near', 'drive down beside', 'smell with', 'sink on', 'hide on', 'pull together', 'care under', 'mitt on', 'walk down past', 'perch under', 'contain in', 'seat under', 'back up on', 'strip to', 'head towards', 'supply on', 'name with', 'cross over', 'control to', 'light up with', 'get down to', 'attach behind', 'bowl by', 'hand beside', 'wear beside', 'perform off', 'sit out next to', 'descend from', 'deface on', 'add with', 'jump up on', 'stroke', 'spoon over', 'miss with', 'lift behind', 'stretch out', 'open up', 'across from', 'lay down above', 'look down with', 'go of', 'crash off', 'ride across', 'head down on', 'float in front of', 'point as', 'peel with', 'extend out towards', 'tow away', 'hold up in front of', 'line up', 'picture on', 'pull out from', 'dive off', 'fly up into', 'lie down by', 'attach above', 'go around', 'douse', 'tie up by', 'attract', 'phone in front of', 'look on away from', 'wipe out from', 'set out with', 'mix', 'roost in', 'shadow next to', 'head on', 'look down toward', 'sit tmod', 'bedside', 'lounge in front of', 'sleep atop', 'counter in front of', 'splash under', 'stick up out of', 'perch in', 'cart in front of', 'lie down around', 'picture above', 'pass under', 'feed underneath', 'let from', 'bundle up with', 'lock', 'knock', 'hide next to', 'fling', 'wear in front of', 'mellow on top of', 'find', 'stack against', 'produce', 'bear around', 'o', 'hold along with', 'lay upon', 'roll to', 'wing next to', 'dump', 'pile into', 'signal below', 'speed on', 'kneel down behind', 'run as', 'come off of', 'setup in between', 'travel in front of', 'oak on', 'jump up into', 'head down in', 'pull along', 'propeller on', 'monitor in', 'sniff along', 'snuggle in', 'stop outside of', 'glide through', 'numeral on', 'seem on', 'condiment on', 'have under', 'drink inside', 'park along next to', 'cut out', 'pilot through', 'observe for', 'climb out of', 'splice on', 'lift up', 'bridesmaid on', 'ride up above', 'scottish next to', 'ice over', 'pose next to', 'go in of', 'bowl', 'lay out with', 'mess up on', 'set up', 'poss with', 'reach down off', 'set for', 'grow out of', 'lengthwise on', 'peek around', 'sprinkle', 'pot on', 'park down', 'boad over', 'spoon in', 'stand out in', 'chug along', 'kneel on top of', 'supply around', 'play at', 'hide on top of', 'rip up', 'crown around', 'lay about', 'tug at', 'park for', 'look forward underneath', 'pin of', 'admire', 'quilt in', 'harper below', 'hiss at', 'perform between', 'wear at', 'hang outside of', 'rest at', 'collaborate on', "reach 's", 'get onto', 'melt on', 'climb in', 'fasten', 'size in', 'counter across from', 'station in', 'flush with', 'gesture towards', 'rejoice in', 'spread out across', 'chain down with', 'feet up on', 'figure', 'perform at', "'s", 'throw at', 'stare behind', 'parrot on', 'ski on', 'pair', 'make through', 'lap on top of', 'nurse off', 'array with', 'graze near', 'appear close to', 'climb onto', 'stuff around', 'paw over', 'wrestle from', 'drop on', 'lean around', 'stand before', 'cake on', 'photograph', 'start', 'carve', 'rise on', 'stand across from', 'hol up in front of', 'lick with', 'pick in', 'face by', 'waste with', 'mirror in', 'perch next to', 'travel across', 'harness to', 'climb on', 'set over', 'dock in front of', 'cover up', 'collect from', 'hold toward', 'besdie', 'rub with', 'sleep inside', 'topping with', 'climb down', 'why', 'curl up beside', 'pane as', 'park across from', 'travel down beside', 'call', 'rack behind', 'paw to', 'stab', 'lounge with', 'jump up from', 'jump during', 'sit around in', 'suspend over', 'see inside', 'la down on', 'shower', 'batter up to', 'eat while', 'ride along on', 'locomotive behind', 'touch behind', 'feed by', 'jump for', 'carry under', 'snip with', 'hold up above', 'sand next to', 'hurdle', 'unwrap from', 'stuff on top of', 'locate on', 'indoor on', 'suspend on', 'type next to', 'cord of', 'lay up on', 'walk amongst', 'move through', 'set among', 'curl into', 'plug into', 'sit down', 'perch underneath', 'block next to', 'walk along next to', 'peak behind', 'pose at', 'put from', 'watch at', 'hockey on', 'store above', 'block by', 'peer out behind', 'surf with', 'fork on', 'shop behind', 'push in', 'face next to', 'hide among', 'counter by', 'lick beside', 'move at', 'prop up with', 'wield', 'nuzzle with', 'reflect below', 'cut behind', 'look up over', 'can between', 'come up to', 'trip off of', 'lie around on', 'smile in front of', 'hover near', 'descend in', 'sit down in front of', 'grow over', 'loll about on', 'boil in', 'lean forward in front of', 'strap onto', 'stick out toward', 'extract from', 'lean down in', 'peek over', 'rack underneath', 'light in', 'bowl on top of', 'sprout from', 'pour from', 'hold under', 'slice up with', 'slow down in', 'rise off', 'pull up inside', 'drink with', 'stationary in', 'lean by', 'steam down', 'stop past', 'disperse out', 'spread on top of', 'walk close to', 'cart on', 'lounge beside', 'work at', 'chew next to', 'hug by', 'can next to', 'lean over on', 'wave at', 'figurine to', 'shoot of', 'coordinate on', 'have across', 'remove by', 'spin', 'kneel down in', 'arrange behind', 'fink', 'separate from', 'post behind', 'double next to', 'herd behind', 'wrap up next to', 'lighten on', 'pose to', 'roll on top of', 'hump on', 'walk down in front of', 'lean through', 'print on top of', 'cover in front of', 'lodge in', 'leg on', 'enter into', 'rake', 'stomach with', 'guard on', 'attack on', 'mat near', 'blow on', 'feed off of', 'stand up', 'perch upon', 'pour at', 'linen in', 'split', 'move behind', 'stuff to', 'face between', 'look on at', 'reach', 'cushion on', 'brake for', 'style', 'relax by', 'fall from', 'can on', 'faucet above', 'line up against', 'wait next to', 'designate for', 'dip tmod', 'land in', 'scare', 'slice open', 'pull out to', 'mirror by', 'grass behind', 'walk up behind', 'both in', 'load up on', 'hand out of', 'marking on', 'fold on top of', 'front', 'call on', 'let on', 'slip off of', 'spray over', 'come up', 'drive down on', 'scatter about', 'position over', 'placard on', 'hide near', 'hole in front of', 'bring back', 'park alongside', 'come down past', 'drive up to', 'stalk', 'jump by', 'fall out of', 'wreck against', 'cut in by', 'eat underneath', 'strip off of', 'head', 'give from', 'lay alongside', 'compare', 'peep out of', 'view below', 'face atop', 'hook up', 'walk after', 'dress of', 'arrive to', 'ride near', 'set near', 'hang below', 'cloud behind', 'work down', 'cover underneath', 'laugh in', 'collar in front of', 'look out near', 'huddle around', 'look over at', 'fly in front of', 'play around in', 'stretch over', 'store beside', 'stuff into', 'swim with', 'meter with', 'take in', 'fall down', 'walk away next to', 'perch above', 'curve', 'pass to', 'walk around by', 'prepare on top of', 'set beside', 'huddle to', 'spinach to', 'wine', 'perk in front of', 'brush in', 'board at', 'pan', 'leg with', 'stage on', 'cup on', 'boarder with', 'groom in', 'step up onto', 'bite at', 'jump off with', 'overflow with', 'rush towards', 'lean down to', 'run down', 'lap near', 'eat out as', 'paint on top of', 'display next to', 'ride together', 'bark to', 'pull down in', 'atv', 'lap next to', 'glass next to', 'can behind', 'look down from', 'ski next to', 'dress to', 'split in', 'chair around', 'steer', 'group in', 'fit in', 'swipe at', 'jump over over', 'sit open', 'travel toward', 'fall off into', 'stand up by', 'take by', 'react to', 'fit on', 'fry on', 'float underneath', 'scottish on', 'peak into', 'exit', 'sit on with', 'look in at', 'read by', 'water', 'curl up next to', 'paint to', 'pear in', 'goof off in', 'halve next to', 'lead up behind', 'stick out in', 'stand up with', 'listen to', 'strap into', 'travel in', 'defecate in front of', 'rise next to', 'park below', 'open in front of', 'load into', 'rub beside', 'speaker on', 'lean in', 'abandon with', 'step on top of', 'clean in', 'pan in', 'snoop into', 'fom', 'train on', 'tag on', 'miss beside', 'center on', 'speak about', 'open behind', 'come next to', 'pull open', 'evangelize on', 'approach behind', 'tub in', 'pile beside', 'bath on', 'fold up', 'go in', 'cornbread to', 'enjoy with', 'date on', 'look towards', 'twenty on', 'pepperoni on', 'relax inside', 'stand while', 'click', 'cut off', 'stationary at', 'rally with', 'display along with', 'unload', 'engage next to', 'muffin on', 'bend down on', 'hold above', 'look about', 'cutting in', 'sunbathe on top of', 'letter on', 'compartment on', 'fuel', 'rest between', 'cub by', 'flip off', 'halve in', 'bask on', 'fly than', 'and', 'bush in', 'reat on', 'carry tmod', 'groom on', 'decapitate on', 'elephant behind', 'flip up', 'aim', 'sail on', 'peek out from', 'rub up on top of', 'attach next to', 'squat in front of', 'immerse inside', 'group together with', 'top under', 'attach under', 'obama under', 'stand against', 'swing as', 'hole with', 'nestle in', 'push against', 'bear up in front of', 'nail', 'handle inside', 'crouch on top of', 'fall of', 'mark beside', 'move besides', 'stem inside', 'read in', 'rubber on', 'tug', 'peer out over', 'poke through', 'graze in', 'tilt up', 'back of', 'cover above', 'ptich by', 'see out of', 'blueberry', 'sink in', 'mount with', 'sit on as', 'hold out for', 'burn in', 'soak on top of', 'shoot in front of', 'huddle beneath', 'pass near', 'handle on', 'than', 'press out', 'track beside', 'peer through', 'hydrant in', 'loll around beside', 'bend over in', 'grab from', 'checker', 'say under', 'pull near', 'arrange around', 'enjoy from', 'trail on', 'jump in front of', 'spark underneath', 'peck at', 'label', 'print next to', 'neld on', 'slap on', 'fry', 'grind along', 'loll around on', 'perch beneath', 'stretch in front of', 'fille like', 'bow around', 'jump up near', 'extend to', 'beneath with', 'dry in', 'design like', 'study on', 'pick at', 'pot in front of', 'banner down below', 'monitor with', 'peek up inside', 'put near', 'turn to', 'lie on on', 'bath on top of', 'lift near', 'decoration around to', 'tilt up against', 'lock in', 'talk in', 'headboard in', 'stratch', 'state with', 'relax to', 'load next to', 'neara', 'sit up inside', 'shin on', 'boarder in', 'destroy', 'calmly on', 'eat atop', 'look up to', 'anchor to', 'ignore', 'look out over', 'pass over', 'curl up under', 'have from', 'have off', 'fence in front of', 'tilt', 'signal', 'decide', 'trough', 'wear around', 'blanket on top of', 'investigate by', 'dry on', 'take up', 'boil with', 'lose behind', 'perform in', 'glide on', 'lounge near', 'sterilize on', 'stick by', 'shave', 'run after', 'peer out of', 'crawl into', 'sprig in', 'stack up on', 'turn down with', 'hand over', 'fasten to', 'title next to', 'traffic with', 'nap behind', 'cram in', 'lounge across', 'lean over at', 'grow of', 'plant with', 'empty into', 'look outside of', 'build in', 'fly by', 'eat on top of', 'travel over', 'rest over', 'roll of', 'walk up towards', 'dock next to', 'wear atop', 'touch in', 'illuminate', 'smell on', 'hump', 'hard at', 'transport on top of', 'sneak around', 'relax in front of', 'fill over', 'greet', 'put out', 'nthe', 'stick near', 'show near', 'paint as', 'bite on', 'wrestle over', 'drive underneath', 'drive down past', 'skateboard down on', 'place below', 'prop at', 'sit on next to', 'pull apart', 'figurine next to', 'point into', 'ride out', 'push into', 'offer from', 'lead on', 'fille with', 'wit on', 'hay near', 'hog by', 'dock in', 'dumple in front of', 'walk at', 'crowd with', 'travel down under', 'miss on', 'asleep with', 'go behind', 'cube in', 'participate in', 'release', 'shapp like', 'fresh out of', 'lie around', 'pick', 'protect', 'crouch over on', 'stretch next to', 'compete with', 'recline in', 'show to', 'wear to', 'ride of', 'preform on', 'scratch on', 'sit down next to', 'cake around', 'ride under', 'log with', 'tile', 'fight over with', 'light up on top of', 'stack beside', 'pot with', 'blaze near', 'drag in', 'carrot to', 'design next to', 'turn away from', 'decoration in', 'collar', 'load at', 'perch', 'stick out at', 'topper on top of', 'bear beside', 'run underneath', 'hate', 'overflow onto', 'nestle up on top of', 'close', 'light on top of', 'suitcase with', 'halfway in', 'candle on', 'pole on', 'toss in', 'look behind in', 'indicate on', 'hold into', 'muffin out of', 'run into', 'tape with', 'ducky in', 'spoon', 'gesture toward', 'top up', 'display near', 'eat out beside', 'let off', 'get off of', 'overtake', 'mount on to', 'draw to', 'remaining in front of', 'decker', 'stuff behind', 'lie out', 'juice on', 'look back at', 'run alongside', 'witb in', 'stack behind', 'oven to', 'heat in', 'scatter on', 'await on', 'tape around', 'stitt to', 'hold near', 'sit together in', 'eat around', 'cola', 'file on', 'stand up against', 'impose on', 'cut up near', 'hay with', 'lie down under', 'pare with', 'stick out from', 'rail in', 'place into', 'walk into', 'bundle up in', 'write to', 'rap next to', 'catch by', 'stare down', 'sin below', 'skate', 'snowshoe with', 'bottle if', 'kneel down with', 'spoon into', 'walk onto', 'look up underneath', 'double as', 'interact on', 'line up across', 'spray on', 'surf on top of', 'soak', 'go toward', 'assemble', 'sit amongst', 'roll on', 'attempt on', 'go over on', 'frond', 'carve on', 'hydrant below', 'hold beyond', 'read in front of', 'dive from', 'clutter with', 'lay at', 'fly toward', 'sleep', 'set next to', 'slope with', 'look onto', 'bend', 'sprinkle over', 'take off on', 'post next to', 'ha to', 'lock onto', 'erect behind', 'writeen on', 'snuggle up against', 'romp on', 'bun next to', 'phone next to', 'carrot with', 'catch with', 'flower in', 'cook from', 'kneel by', 'mash with', 'hover above', 'swing from', 'motionless at', 'snow', 'curl under', 'clean near', 'block in front of', 'bag by', 'snuggle into', 'do before', 'cut around', 'use under', 'pile to', 'dig to', 'chair under', 'wrestle', 'grow', 'perch at', 'arrive in', 'raise with', 'walk aside', 'fashion out of', 'tape at', 'runnig along', 'flake with', 'overlook in', 'guide along with', 'eat out with', 'attend with', 'store underneath', 'barrel down', 'chair', 'pull through', 'pizza from', 'drive along with', 'hug on', 'attempt with', 'pile with', 'cornbread on', 'ride into', 'watch as', 'cut at', 'write about', 'wit in front of', 'glue to', 'pull up in front of', 'tie up on', 'stop along', 'run in front of', 'shake next to', 'stop beside', 'squint at', 'watch out', 'try on', 'try to', 'make up with', 'comfortable in', 'pull alongside', 'bear atop', 'pare on', 'lie beneath', 'plow with', 'snowboard with', 'perch by', 'stationary under', 'scowl beside', 'carry away', 'read on top of', 'onion next to', 'scratch next to', 'pull up behind', 'carrots.with', 'propeller near', 'bark on', 'line by', 'track under', 'rest by', 'nap on top of', 'twenty at', 'hold up before', 'hold back', 'lie above', 'cute', 'pigeon in', 'sate in', 'communicate with', 'visit', 'chain on', 'hold along', 'glare at', 'ride away on', 'point with', 'clock on', 'monitor next to', 'stack between', 'track past', 'flower on', 'design for', 'break in front of', 'park from', 'tuck underneath', 'wear under', 'lock on', 'aboard', 'control on', 'lap to', 'peal', 'counter near', 'travel between', 'splash behind', 'smoke to', 'cook of', 'nibble at', 'make out with', 'smile for', 'cuddle next to', 'lead with', 'bat at', 'label on top of', 'windsurf on', 'collide with', 'green on', 'arrange in front of', 'kitty on', 'pail to', 'drive off', 'nose around in', 'cool', 'sidewalk with', 'line up including', 'drive through on', 'climb', 'position between', 'position over next to', 'stand up behind', 'glass to', 'sign by', 'curl around', 'counter', 'call to', 'enclosure with', 'fly around', 'depart', 'tie up at', 'proceed down', 'poke out inside', 'wait inside', 'nestle with', 'paddle-board between', 'lock up on', 'frost on on', 'face of', 'wear by', 'zebra under', 'walk over', 'roll around', 'note on', 'hydrant along with', 'suitcase on', 'sight on', 'contain beside', 'look out atop', 'kneel down in front of', 'decoration on top of', 'gear', 'run around by', 'nestle up in', 'serve to', 'decoration around', 'name', 'fly up after', 'lean over near', 'gaze at', 'press above', 'park out by', 'press to', 'zero on', 'read from', 'shelter over', 'someone with', 'lap at', 'print across', 'sittig to', 'player up at', 'dock beside', 'but into', 'lie ON', 'curl up', 'encompass', 'cage up', 'okay with', 'face in', 'rack in', 'pet on', 'climb up onto', 'nurse from', 'seventy on', 'curl up around', 'cry in front of', 'sit outside of', 'peek behind', 'carry by', 'star on', 'draw by', 'four with', 'foot', 'write in front of', 'hide of', 'play beneath', 'complete on', 'figurine on top of', 'bristle on', 'pull out', 'scoop out', 'pat', 'face up', 'skyline behind', 'screw on', 'carrot on top of', 'open by']
Sg2ImModel(
  (obj_embeddings): Embedding(92, 128)
  (pred_embeddings): Embedding(3334, 128)
  (gconv): GraphTripleConv(
    (net1): Sequential(
      (0): Linear(in_features=384, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=1152, bias=True)
      (3): ReLU()
    )
    (net2): Sequential(
      (0): Linear(in_features=512, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=128, bias=True)
      (3): ReLU()
    )
  )
  (gconv_net): GraphTripleConvNet(
    (gconvs): ModuleList(
      (0): GraphTripleConv(
        (net1): Sequential(
          (0): Linear(in_features=384, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=1152, bias=True)
          (3): ReLU()
        )
        (net2): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=128, bias=True)
          (3): ReLU()
        )
      )
      (1): GraphTripleConv(
        (net1): Sequential(
          (0): Linear(in_features=384, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=1152, bias=True)
          (3): ReLU()
        )
        (net2): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=128, bias=True)
          (3): ReLU()
        )
      )
      (2): GraphTripleConv(
        (net1): Sequential(
          (0): Linear(in_features=384, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=1152, bias=True)
          (3): ReLU()
        )
        (net2): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=128, bias=True)
          (3): ReLU()
        )
      )
      (3): GraphTripleConv(
        (net1): Sequential(
          (0): Linear(in_features=384, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=1152, bias=True)
          (3): ReLU()
        )
        (net2): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=128, bias=True)
          (3): ReLU()
        )
      )
    )
  )
  (box_net): Sequential(
    (0): Linear(in_features=128, out_features=512, bias=True)
    (1): ReLU()
    (2): Linear(in_features=512, out_features=4, bias=True)
    (3): ReLU()
  )
  (mask_net): Sequential(
    (0): Upsample(scale_factor=2, mode=nearest)
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): ReLU()
    (4): Upsample(scale_factor=2, mode=nearest)
    (5): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU()
    (8): Upsample(scale_factor=2, mode=nearest)
    (9): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU()
    (12): Upsample(scale_factor=2, mode=nearest)
    (13): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): ReLU()
    (16): Conv2d(128, 1, kernel_size=(1, 1), stride=(1, 1))
  )
  (rel_aux_net): Sequential(
    (0): Linear(in_features=264, out_features=512, bias=True)
    (1): ReLU()
    (2): Linear(in_features=512, out_features=3334, bias=True)
    (3): ReLU()
  )
  (refinement_net): RefinementNetwork(
    (refinement_modules): ModuleList(
      (0): RefinementModule(
        (net): Sequential(
          (0): Conv2d(161, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): LeakyReLU(negative_slope=0.2)
          (3): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): LeakyReLU(negative_slope=0.2)
        )
      )
      (1): RefinementModule(
        (net): Sequential(
          (0): Conv2d(1184, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): LeakyReLU(negative_slope=0.2)
          (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): LeakyReLU(negative_slope=0.2)
        )
      )
      (2): RefinementModule(
        (net): Sequential(
          (0): Conv2d(672, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): LeakyReLU(negative_slope=0.2)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): LeakyReLU(negative_slope=0.2)
        )
      )
      (3): RefinementModule(
        (net): Sequential(
          (0): Conv2d(416, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): LeakyReLU(negative_slope=0.2)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): LeakyReLU(negative_slope=0.2)
        )
      )
      (4): RefinementModule(
        (net): Sequential(
          (0): Conv2d(288, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): LeakyReLU(negative_slope=0.2)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): LeakyReLU(negative_slope=0.2)
        )
      )
    )
    (output_conv): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): LeakyReLU(negative_slope=0.2)
      (2): Conv2d(64, 3, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2))
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
LeakyReLU(negative_slope=0.2)
Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2))
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
LeakyReLU(negative_slope=0.2)
Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2))
Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2))
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
LeakyReLU(negative_slope=0.2)
Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2))
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
LeakyReLU(negative_slope=0.2)
Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2))
AcCropDiscriminator(
  (discriminator): AcDiscriminator(
    (cnn): Sequential(
      (0): Sequential(
        (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.2)
        (3): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): LeakyReLU(negative_slope=0.2)
        (6): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2))
      )
      (1): GlobalAvgPool()
      (2): Linear(in_features=256, out_features=1024, bias=True)
    )
    (real_classifier): Linear(in_features=1024, out_features=1, bias=True)
    (obj_classifier): Linear(in_features=1024, out_features=91, bias=True)
  )
)
PatchDiscriminator(
  (cnn): Sequential(
    (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.2)
    (3): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2))
    (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): LeakyReLU(negative_slope=0.2)
    (6): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2))
  )
  (classifier): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
)
Starting epoch 1
cur_s_vecs
torch.Size([221, 128])
pred_vecs
torch.Size([221, 128])
cur_o_vecs
torch.Size([221, 128])
cur_t_vecs
torch.Size([221, 384])
tensor([[-6.4353e-01,  5.3491e-01,  1.3952e-01,  ...,  1.0690e+00,
          1.8250e-01, -6.0424e-01],
        [ 4.0543e-01,  3.2403e-01, -1.9949e+00,  ..., -1.7428e+00,
         -9.4818e-01,  2.7754e-01],
        [ 4.0543e-01,  3.2403e-01, -1.9949e+00,  ..., -2.8326e+00,
          1.8435e-01, -8.5815e-01],
        ...,
        [-2.3044e+00, -1.1124e+00,  2.5528e-01,  ..., -1.4429e+00,
          1.1550e+00, -3.8309e-01],
        [-1.0150e-01, -4.2203e-01, -8.4701e-02,  ..., -1.4429e+00,
          1.1550e+00, -3.8309e-01],
        [-8.6607e-01, -1.6725e-01,  2.3692e-01,  ..., -1.4429e+00,
          1.1550e+00, -3.8309e-01]], device='cuda:0')
cur_s_vecs
torch.Size([221, 128])
pred_vecs
torch.Size([221, 128])
cur_o_vecs
torch.Size([221, 128])
cur_t_vecs
torch.Size([221, 384])
tensor([[ 0.4817,  0.0000,  2.4136,  ...,  0.2295,  1.4195,  0.0000],
        [ 0.0000,  0.0000,  2.1903,  ...,  0.0000,  2.1844,  0.0000],
        [ 0.0000,  0.0000,  2.1903,  ...,  0.0000,  3.1861,  0.0000],
        ...,
        [ 0.0000,  0.4497,  1.7127,  ...,  2.1883,  1.6534,  0.0000],
        [ 0.2514,  0.0000,  2.4016,  ...,  2.1883,  1.6534,  0.0000],
        [ 0.0000,  0.0000,  2.5595,  ...,  2.1883,  1.6534,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([221, 128])
pred_vecs
torch.Size([221, 128])
cur_o_vecs
torch.Size([221, 128])
cur_t_vecs
torch.Size([221, 384])
tensor([[ 0.0000,  0.0366,  0.0000,  ...,  0.2829,  1.2102,  0.0000],
        [ 0.0000,  0.5367,  0.0000,  ...,  0.7208,  0.9290,  0.0000],
        [ 0.0000,  0.5367,  0.0000,  ...,  0.2202,  0.9285,  0.0000],
        ...,
        [ 0.4635,  0.8229,  0.0000,  ...,  0.6833,  1.3208,  0.0000],
        [ 0.0000,  0.7556,  0.0000,  ...,  0.6833,  1.3208,  0.0000],
        [ 0.0000,  1.3470,  0.0000,  ...,  0.6833,  1.3208,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([221, 128])
pred_vecs
torch.Size([221, 128])
cur_o_vecs
torch.Size([221, 128])
cur_t_vecs
torch.Size([221, 384])
tensor([[ 0.0000,  1.1877,  1.2554,  ...,  0.7592,  0.6911,  0.0000],
        [ 0.0000,  0.9378,  1.4053,  ...,  0.0000,  0.1516,  0.0000],
        [ 0.0000,  0.9378,  1.4053,  ...,  0.3714,  0.5404,  0.0000],
        ...,
        [ 0.0000,  1.3343,  1.5607,  ...,  0.0000,  1.0272,  0.0000],
        [ 0.0000,  0.5643,  1.3143,  ...,  0.0000,  1.0272,  0.0000],
        [ 0.0000,  0.2724,  0.8757,  ...,  0.0000,  1.0272,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([221, 128])
pred_vecs
torch.Size([221, 128])
cur_o_vecs
torch.Size([221, 128])
cur_t_vecs
torch.Size([221, 384])
tensor([[ 1.1569,  0.2275,  0.0000,  ...,  0.2307,  0.2454,  0.4096],
        [ 1.0030,  0.1970,  0.0000,  ...,  0.3146,  0.0000,  0.3433],
        [ 1.0030,  0.1970,  0.0000,  ...,  0.2966,  0.1241,  0.5090],
        ...,
        [ 1.9033,  0.4240,  0.0000,  ...,  0.0000,  0.0000,  0.2701],
        [ 1.0165,  0.8751,  0.0000,  ...,  0.0000,  0.0000,  0.2701],
        [ 1.3791,  0.4107,  0.0000,  ...,  0.0000,  0.0000,  0.2701]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[-8.6617e-01, -1.6735e-01,  2.3702e-01,  ..., -3.7252e-01,
          1.3794e-02,  6.9609e-01],
        [-6.2598e-01,  4.5244e-01,  7.7642e-01,  ..., -3.9470e-01,
         -1.1457e+00, -8.9404e-01],
        [-6.2598e-01,  4.5244e-01,  7.7642e-01,  ..., -3.9470e-01,
         -1.1457e+00, -8.9404e-01],
        ...,
        [-1.2813e+00, -7.9151e-01,  4.6973e-01,  ..., -1.4430e+00,
          1.1549e+00, -3.8299e-01],
        [-6.3064e-02, -5.1577e-01, -5.7147e-01,  ..., -1.4430e+00,
          1.1549e+00, -3.8299e-01],
        [-5.0277e-01, -2.2743e-01,  1.5251e+00,  ..., -1.4430e+00,
          1.1549e+00, -3.8299e-01]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.0000,  2.0818,  ...,  0.3998,  2.1299,  0.0000],
        [ 1.1386,  0.0000,  2.3059,  ...,  0.6801,  1.4489,  0.0000],
        [ 1.1386,  0.0000,  2.3059,  ...,  0.6801,  1.4489,  0.0000],
        ...,
        [ 0.1677,  0.7036,  2.5687,  ...,  2.7646,  2.0695,  0.0000],
        [ 0.0000,  0.0000,  1.6269,  ...,  2.7646,  2.0695,  0.0000],
        [ 0.8353,  0.0000,  2.7408,  ...,  2.7646,  2.0695,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.4900,  0.0000,  ...,  0.0594,  1.9379,  0.0000],
        [ 0.0000,  0.6373,  0.0000,  ...,  0.6363,  1.2735,  0.0000],
        [ 0.0000,  0.6373,  0.0000,  ...,  0.6363,  1.2735,  0.0000],
        ...,
        [ 0.2414,  0.7044,  0.0000,  ...,  0.9062,  0.9253,  0.0000],
        [ 0.0000,  1.1799,  0.0000,  ...,  0.9062,  0.9253,  0.0000],
        [ 0.2647,  0.4188,  0.0232,  ...,  0.9062,  0.9253,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.5488,  0.7601,  ...,  0.2485,  0.3488,  0.0000],
        [ 0.0000,  0.2468,  1.3903,  ...,  0.0000,  1.5790,  0.0000],
        [ 0.0000,  0.2468,  1.3903,  ...,  0.0000,  1.5790,  0.0000],
        ...,
        [ 0.0000,  1.0948,  1.3917,  ...,  0.0000,  0.6631,  0.0000],
        [ 0.0000,  0.7701,  1.1541,  ...,  0.0000,  0.6631,  0.0000],
        [ 0.0000,  0.4510,  1.1433,  ...,  0.0000,  0.6631,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 1.5463,  0.4626,  0.0000,  ...,  0.7905,  0.3205,  0.0000],
        [ 1.5888,  0.7810,  0.0000,  ...,  0.0000,  0.1305,  0.0378],
        [ 1.5888,  0.7810,  0.0000,  ...,  0.0000,  0.1305,  0.0378],
        ...,
        [ 2.1700,  0.3139,  0.0000,  ...,  0.0000,  0.0000,  0.0867],
        [ 1.3347,  0.9352,  0.0000,  ...,  0.0000,  0.0000,  0.0867],
        [ 1.5340,  1.0027,  0.0000,  ...,  0.0000,  0.0000,  0.0867]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[-6.4336e-01,  5.3488e-01,  1.3934e-01,  ...,  6.4908e-01,
          2.1308e+00,  7.4356e-01],
        [ 5.9613e-01, -2.6305e-01, -1.7058e+00,  ..., -1.7429e+00,
         -9.4800e-01,  2.7758e-01],
        [ 5.9613e-01, -2.6305e-01, -1.7058e+00,  ...,  6.4908e-01,
          2.1308e+00,  7.4356e-01],
        ...,
        [ 2.0417e-01, -6.2968e-01,  6.5545e-01,  ..., -1.4431e+00,
          1.1549e+00, -3.8289e-01],
        [ 7.7897e-01, -1.0545e+00, -1.0579e+00,  ..., -1.4431e+00,
          1.1549e+00, -3.8289e-01],
        [-8.6626e-01, -1.6737e-01,  2.3708e-01,  ..., -1.4431e+00,
          1.1549e+00, -3.8289e-01]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.1935,  0.0000,  2.7075,  ...,  0.7619,  1.8150,  0.0000],
        [ 0.3064,  0.0000,  2.0359,  ...,  0.0000,  2.0070,  0.0000],
        [ 0.3064,  0.0000,  2.0359,  ...,  0.7619,  1.8150,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.5605,  ...,  2.5847,  2.2553,  0.0000],
        [ 0.3245,  0.0000,  2.4360,  ...,  2.5847,  2.2553,  0.0000],
        [ 0.4785,  0.0000,  1.8525,  ...,  2.5847,  2.2553,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.2431,  0.0000,  0.5283,  ...,  1.3096,  0.9637,  0.0000],
        [ 0.0000,  0.9947,  0.0000,  ...,  1.2156,  1.2456,  0.0000],
        [ 0.0000,  0.9947,  0.0000,  ...,  1.3096,  0.9637,  0.0000],
        ...,
        [ 0.0000,  1.0307,  0.0000,  ...,  1.0344,  0.9105,  0.0306],
        [ 0.0000,  0.9887,  0.0000,  ...,  1.0344,  0.9105,  0.0306],
        [ 0.0000,  1.2574,  0.0000,  ...,  1.0344,  0.9105,  0.0306]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  1.5031,  1.5625,  ...,  0.0000,  1.1071,  0.0000],
        [ 0.0000,  0.7796,  1.3193,  ...,  0.0000,  0.7325,  0.0000],
        [ 0.0000,  0.7796,  1.3193,  ...,  0.0000,  1.1071,  0.0000],
        ...,
        [ 0.0285,  2.1892,  1.7685,  ...,  0.2075,  0.9491,  0.0000],
        [ 0.0000,  1.3095,  2.1001,  ...,  0.2075,  0.9491,  0.0000],
        [ 0.0000,  1.6907,  1.8678,  ...,  0.2075,  0.9491,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 1.9152,  0.9324,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.6923,  1.0248,  0.0000,  ...,  0.9595,  0.1735,  0.0000],
        [ 1.6923,  1.0248,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 2.2753,  1.2809,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.7170,  0.9500,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.5766,  0.9258,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[-8.6630e-01, -1.6732e-01,  2.3714e-01,  ...,  8.2307e-02,
         -1.5587e-01,  5.4718e-01],
        [-8.8941e-01,  5.5869e-01,  1.1292e-01,  ..., -1.7850e-01,
         -1.1751e+00,  4.7827e-01],
        [ 7.1084e-01,  2.5045e-01,  2.0200e-01,  ...,  8.2307e-02,
         -1.5587e-01,  5.4718e-01],
        ...,
        [ 2.7240e+00, -4.5078e-01,  3.9148e-01,  ..., -1.4431e+00,
          1.1548e+00, -3.8281e-01],
        [-2.9641e-01,  1.8388e+00,  1.0863e+00,  ..., -1.4431e+00,
          1.1548e+00, -3.8281e-01],
        [-2.7086e-01,  1.8925e-02, -8.8129e-01,  ..., -1.4431e+00,
          1.1548e+00, -3.8281e-01]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.3079,  0.0000,  1.0343,  ...,  1.0195,  2.0697,  0.0000],
        [ 0.0000,  0.0000,  2.8999,  ...,  0.0000,  1.3543,  0.0000],
        [ 0.0000,  0.0000,  2.8909,  ...,  1.0195,  2.0697,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.8107,  ...,  2.6096,  2.1871,  0.0000],
        [ 0.4690,  0.0000,  2.1517,  ...,  2.6096,  2.1871,  0.0000],
        [ 0.0000,  0.0000,  2.9953,  ...,  2.6096,  2.1871,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.0000,  0.8985,  0.0000,  ...,  1.4042,  0.9291,  0.0000],
        [ 0.0000,  0.9770,  0.0000,  ...,  0.7418,  1.3104,  0.0000],
        [ 0.0000,  0.8107,  0.0930,  ...,  1.4042,  0.9291,  0.0000],
        ...,
        [ 0.2480,  0.3982,  0.3326,  ...,  1.5921,  1.3395,  0.0302],
        [ 0.2020,  0.8826,  0.0000,  ...,  1.5921,  1.3395,  0.0302],
        [ 0.0000,  0.9105,  0.0000,  ...,  1.5921,  1.3395,  0.0302]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.0000,  0.5824,  2.5819,  ...,  0.3199,  0.9301,  0.0000],
        [ 0.0000,  1.6996,  2.3032,  ...,  0.2776,  0.5452,  0.0000],
        [ 0.0000,  1.3973,  2.3217,  ...,  0.3199,  0.9301,  0.0000],
        ...,
        [ 0.0000,  1.6292,  1.7598,  ...,  0.3687,  1.2154,  0.0000],
        [ 0.0000,  1.9794,  2.2479,  ...,  0.3687,  1.2154,  0.0000],
        [ 0.0000,  1.3895,  2.0943,  ...,  0.3687,  1.2154,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 2.2587,  1.3493,  0.0000,  ...,  0.0440,  0.1967,  0.0000],
        [ 2.2615,  1.0800,  0.0000,  ...,  0.5493,  0.2385,  0.0000],
        [ 1.7567,  1.2956,  0.0000,  ...,  0.0440,  0.1967,  0.0000],
        ...,
        [ 2.3670,  0.8705,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.3551,  1.3323,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.1520,  1.0497,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.6152, -1.9225,  0.6546,  ...,  1.6090,  1.0819,  0.5500],
        [-0.6432,  0.5349,  0.1392,  ...,  1.6090,  1.0819,  0.5500],
        [-0.6432,  0.5349,  0.1392,  ...,  1.6090,  1.0819,  0.5500],
        ...,
        [-0.8663, -0.1673,  0.2371,  ..., -1.4430,  1.1548, -0.3828],
        [ 0.9774, -1.9913,  0.5081,  ..., -1.4430,  1.1548, -0.3828],
        [ 1.2194, -0.3305,  1.6760,  ..., -1.4430,  1.1548, -0.3828]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.1683,  0.0000,  1.4339,  ...,  0.6555,  2.2986,  0.0000],
        [ 0.3898,  0.0000,  1.7062,  ...,  0.6555,  2.2986,  0.0000],
        [ 0.3898,  0.0000,  1.7062,  ...,  0.6555,  2.2986,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.9840,  ...,  2.9018,  2.5623,  0.0000],
        [ 0.0000,  0.0000,  2.0458,  ...,  2.9018,  2.5623,  0.0000],
        [ 0.8023,  0.0000,  2.5087,  ...,  2.9018,  2.5623,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.0000,  0.9001,  0.7124,  ...,  1.1617,  0.9737,  0.0000],
        [ 0.0000,  0.9764,  0.2545,  ...,  1.1617,  0.9737,  0.0000],
        [ 0.0000,  0.9764,  0.2545,  ...,  1.1617,  0.9737,  0.0000],
        ...,
        [ 0.0950,  0.7391,  0.0000,  ...,  1.3804,  0.9297,  0.1343],
        [ 1.4195,  0.3285,  0.0000,  ...,  1.3804,  0.9297,  0.1343],
        [ 0.1808,  1.5838,  0.0000,  ...,  1.3804,  0.9297,  0.1343]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.0000,  0.9662,  2.9791,  ...,  0.0000,  1.9703,  0.0000],
        [ 0.0000,  1.1539,  2.2008,  ...,  0.0000,  1.9703,  0.0000],
        [ 0.0000,  1.1539,  2.2008,  ...,  0.0000,  1.9703,  0.0000],
        ...,
        [ 0.0000,  1.5783,  2.0115,  ...,  0.6549,  1.3703,  0.0000],
        [ 0.0000,  1.7062,  2.0473,  ...,  0.6549,  1.3703,  0.0000],
        [ 0.0000,  1.2577,  2.3351,  ...,  0.6549,  1.3703,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 2.0719,  1.6162,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.7236,  1.2498,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.7236,  1.2498,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 2.3521,  1.2147,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.3617,  1.1243,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.5016,  1.5136,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[-1.2817, -0.7913,  0.4700,  ..., -1.7431, -0.9478,  0.2775],
        [-1.2817, -0.7913,  0.4700,  ..., -2.8329,  0.1847, -0.8582],
        [ 0.6152, -1.9225,  0.6547,  ..., -1.7431, -0.9478,  0.2775],
        ...,
        [-0.8664, -0.1673,  0.2371,  ..., -1.4430,  1.1547, -0.3827],
        [-2.3271, -0.8591,  0.1241,  ..., -1.4430,  1.1547, -0.3827],
        [ 0.4106,  1.4780, -2.0322,  ..., -1.4430,  1.1547, -0.3827]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[ 0.0000,  0.0000,  1.6591,  ...,  0.9320,  1.6035,  0.0000],
        [ 0.0000,  0.0000,  1.6591,  ...,  0.0000,  2.6745,  0.0000],
        [ 0.0000,  0.0000,  1.7393,  ...,  0.9320,  1.6035,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.7944,  ...,  2.9614,  2.6676,  0.0000],
        [ 0.0000,  0.0000,  1.7770,  ...,  2.9614,  2.6676,  0.0000],
        [ 0.0273,  0.0000,  2.5392,  ...,  2.9614,  2.6676,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[ 0.4963,  0.7901,  0.0000,  ...,  1.2065,  0.5221,  0.0000],
        [ 0.4963,  0.7901,  0.0000,  ...,  1.0099,  0.9679,  0.0000],
        [ 0.5101,  0.6162,  0.1005,  ...,  1.2065,  0.5221,  0.0000],
        ...,
        [ 0.0000,  1.1797,  0.0000,  ...,  1.7589,  1.5617,  0.1938],
        [ 0.0000,  0.9708,  0.0000,  ...,  1.7589,  1.5617,  0.1938],
        [ 0.0000,  1.3053,  0.1705,  ...,  1.7589,  1.5617,  0.1938]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[ 0.0000,  0.9862,  3.0600,  ...,  0.0000,  1.4290,  0.0000],
        [ 0.0000,  0.9862,  3.0600,  ...,  0.0375,  1.2402,  0.0000],
        [ 0.0000,  1.0360,  2.3838,  ...,  0.0000,  1.4290,  0.0000],
        ...,
        [ 0.0000,  1.1290,  2.3367,  ...,  0.0000,  0.7691,  0.0000],
        [ 0.0000,  0.5984,  2.7922,  ...,  0.0000,  0.7691,  0.0000],
        [ 0.1840,  1.2511,  2.3007,  ...,  0.0000,  0.7691,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[ 1.7950,  1.3658,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.7950,  1.3658,  0.0000,  ...,  0.4874,  0.0000,  0.0000],
        [ 1.5253,  1.0405,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 1.1304,  1.0693,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.9479,  1.6482,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.9158,  1.1358,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[-8.8926e-01,  5.5884e-01,  1.1277e-01,  ...,  8.2456e-02,
         -1.5572e-01,  5.4704e-01],
        [-8.8926e-01,  5.5884e-01,  1.1277e-01,  ...,  8.2456e-02,
         -1.5572e-01,  5.4704e-01],
        [-8.8926e-01,  5.5884e-01,  1.1277e-01,  ...,  8.2456e-02,
         -1.5572e-01,  5.4704e-01],
        ...,
        [ 1.3924e+00,  1.1442e+00, -1.0849e+00,  ..., -1.4430e+00,
          1.1547e+00, -3.8268e-01],
        [ 2.7241e+00, -4.5064e-01,  3.9152e-01,  ..., -1.4430e+00,
          1.1547e+00, -3.8268e-01],
        [ 6.1517e-01, -1.9225e+00,  6.5474e-01,  ..., -1.4430e+00,
          1.1547e+00, -3.8268e-01]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.1629,  0.0000,  4.0007,  ...,  0.0000,  2.2053,  0.0000],
        [ 0.1629,  0.0000,  4.0007,  ...,  2.2345,  2.3589,  0.0000],
        [ 0.1629,  0.0000,  4.0007,  ...,  2.2345,  2.3589,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.9767,  ...,  2.6327,  2.2492,  0.0000],
        [ 0.0000,  0.4375,  3.4328,  ...,  2.6327,  2.2492,  0.0000],
        [ 0.0000,  0.0000,  2.6856,  ...,  2.6327,  2.2492,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.3566,  1.1757,  0.0000,  ...,  2.0037,  1.7803,  0.0000],
        [ 0.3566,  1.1757,  0.0000,  ...,  1.2882,  0.4375,  0.0000],
        [ 0.3566,  1.1757,  0.0000,  ...,  1.2882,  0.4375,  0.0000],
        ...,
        [ 0.5628,  0.6280,  0.0000,  ...,  1.8809,  1.3633,  0.2786],
        [ 0.5250,  0.2345,  0.0000,  ...,  1.8809,  1.3633,  0.2786],
        [ 0.3533,  0.9763,  0.1544,  ...,  1.8809,  1.3633,  0.2786]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.0000,  1.2171,  3.3014,  ...,  0.2901,  0.6361,  0.1881],
        [ 0.0000,  1.2171,  3.3014,  ...,  0.0000,  1.7195,  0.0000],
        [ 0.0000,  1.2171,  3.3014,  ...,  0.0000,  1.7195,  0.0000],
        ...,
        [ 0.0000,  1.3746,  2.6152,  ...,  0.3525,  0.8884,  0.0000],
        [ 0.0650,  1.5129,  2.1761,  ...,  0.3525,  0.8884,  0.0000],
        [ 0.0000,  1.2870,  2.6602,  ...,  0.3525,  0.8884,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 1.8439,  1.3451,  0.0000,  ...,  1.4577,  0.1542,  0.6333],
        [ 1.8439,  1.3451,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.8439,  1.3451,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 1.9332,  1.0342,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.4431,  1.2767,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.5710,  1.0136,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[-6.2692e-02, -5.1570e-01, -5.7127e-01,  ..., -1.8924e+00,
          6.0505e-01, -8.8481e-01],
        [ 6.2809e-01,  7.1841e-01, -1.0825e+00,  ...,  4.2076e-01,
         -8.2565e-01,  5.6652e-01],
        [ 3.1362e-01,  4.7091e-01,  6.2754e-01,  ...,  4.2076e-01,
         -8.2565e-01,  5.6652e-01],
        ...,
        [ 2.7241e+00, -4.5064e-01,  3.9152e-01,  ..., -1.4429e+00,
          1.1547e+00, -3.8264e-01],
        [-1.1669e-01,  1.2281e+00,  6.0038e-01,  ..., -1.4429e+00,
          1.1547e+00, -3.8264e-01],
        [ 6.1515e-01, -1.9226e+00,  6.5479e-01,  ..., -1.4429e+00,
          1.1547e+00, -3.8264e-01]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.0000,  0.0000,  2.7194,  ...,  0.6096,  2.1764,  0.0000],
        [ 0.4210,  0.5610,  2.6059,  ...,  0.0000,  1.1571,  0.0000],
        [ 0.2155,  0.0000,  3.2067,  ...,  0.0000,  1.1571,  0.0000],
        ...,
        [ 1.1582,  0.2227,  2.4266,  ...,  2.4516,  1.3139,  0.0000],
        [ 0.4348,  0.0000,  3.6669,  ...,  2.4516,  1.3139,  0.0000],
        [ 0.0612,  0.0000,  1.6849,  ...,  2.4516,  1.3139,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.1621,  1.3384,  0.0352,  ...,  1.6672,  0.2866,  0.0000],
        [ 1.0205,  0.6651,  0.0000,  ...,  1.3692,  0.9948,  0.0000],
        [ 0.2011,  0.6996,  0.2560,  ...,  1.3692,  0.9948,  0.0000],
        ...,
        [ 0.0000,  0.1574,  0.1424,  ...,  2.5464,  1.5282,  0.0000],
        [ 0.2817,  0.2174,  0.0963,  ...,  2.5464,  1.5282,  0.0000],
        [ 0.3492,  0.4473,  0.2473,  ...,  2.5464,  1.5282,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.0000,  0.8207,  2.7774,  ...,  0.0901,  0.8969,  0.0000],
        [ 0.0000,  1.4920,  2.5009,  ...,  0.2660,  1.0225,  0.0000],
        [ 0.0000,  1.1015,  3.2474,  ...,  0.2660,  1.0225,  0.0000],
        ...,
        [ 0.0000,  1.3731,  2.9995,  ...,  0.5910,  0.9534,  0.0000],
        [ 0.0000,  1.0195,  2.5946,  ...,  0.5910,  0.9534,  0.0000],
        [ 0.0000,  1.4036,  2.9172,  ...,  0.5910,  0.9534,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 1.6337,  0.7863,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.9821,  0.8230,  0.0000,  ...,  0.1968,  0.0000,  0.0000],
        [ 1.4838,  1.4054,  0.0000,  ...,  0.1968,  0.0000,  0.0000],
        ...,
        [ 2.0615,  0.9846,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.6192,  0.9088,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.2943,  1.2913,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([238, 128])
pred_vecs
torch.Size([238, 128])
cur_o_vecs
torch.Size([238, 128])
cur_t_vecs
torch.Size([238, 384])
tensor([[-8.6640e-01, -1.6721e-01,  2.3703e-01,  ..., -2.8330e+00,
          1.8489e-01, -8.5817e-01],
        [-2.6904e+00,  6.3469e-01, -6.3096e-01,  ..., -2.8330e+00,
          1.8489e-01, -8.5817e-01],
        [ 6.1515e-01, -1.9226e+00,  6.5483e-01,  ...,  1.1105e-01,
          8.4166e-02, -1.6494e+00],
        ...,
        [-8.6640e-01, -1.6721e-01,  2.3703e-01,  ..., -1.4429e+00,
          1.1546e+00, -3.8259e-01],
        [-2.0930e+00,  2.3480e+00, -1.0722e+00,  ..., -1.4429e+00,
          1.1546e+00, -3.8259e-01],
        [ 1.2193e+00, -3.3034e-01,  1.6759e+00,  ..., -1.4429e+00,
          1.1546e+00, -3.8259e-01]], device='cuda:0')
cur_s_vecs
torch.Size([238, 128])
pred_vecs
torch.Size([238, 128])
cur_o_vecs
torch.Size([238, 128])
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.4239,  0.0000,  2.1515,  ...,  0.0000,  3.0202,  0.0000],
        [ 0.7049,  0.0000,  2.1257,  ...,  0.0000,  3.0202,  0.0000],
        [ 0.0000,  0.0000,  2.4020,  ...,  0.3138,  2.9065,  0.0000],
        ...,
        [ 0.1781,  0.0000,  2.4663,  ...,  2.8244,  2.6179,  0.0000],
        [ 0.0000,  0.1097,  1.7385,  ...,  2.8244,  2.6179,  0.0000],
        [ 0.5407,  0.0000,  2.7703,  ...,  2.8244,  2.6179,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([238, 128])
pred_vecs
torch.Size([238, 128])
cur_o_vecs
torch.Size([238, 128])
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.0000,  0.5540,  0.0000,  ...,  1.8844,  1.1874,  0.0000],
        [ 0.1564,  0.6706,  0.0000,  ...,  1.8844,  1.1874,  0.0000],
        [ 0.4865,  0.9514,  0.0000,  ...,  1.1190,  0.5561,  0.0000],
        ...,
        [ 0.4726,  0.8038,  0.0000,  ...,  1.8487,  1.2635,  0.0000],
        [ 0.3096,  0.4035,  0.0000,  ...,  1.8487,  1.2635,  0.0000],
        [ 0.5830,  1.4892,  0.1153,  ...,  1.8487,  1.2635,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([238, 128])
pred_vecs
torch.Size([238, 128])
cur_o_vecs
torch.Size([238, 128])
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.0000,  0.7173,  3.1842,  ...,  0.0135,  0.9415,  0.0000],
        [ 0.0000,  1.2519,  3.0852,  ...,  0.0135,  0.9415,  0.0000],
        [ 0.0000,  0.9680,  2.9420,  ...,  0.4141,  1.0219,  0.0000],
        ...,
        [ 0.0000,  1.0600,  2.8905,  ...,  0.0305,  0.5420,  0.0000],
        [ 0.0000,  0.7806,  2.5849,  ...,  0.0305,  0.5420,  0.0000],
        [ 0.0000,  0.8281,  2.8462,  ...,  0.0305,  0.5420,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([238, 128])
pred_vecs
torch.Size([238, 128])
cur_o_vecs
torch.Size([238, 128])
cur_t_vecs
torch.Size([238, 384])
tensor([[ 1.4786,  1.1136,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.7561,  0.7609,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.9341,  1.1197,  0.0000,  ...,  0.4279,  0.0000,  0.0000],
        ...,
        [ 1.7107,  0.3699,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.7700,  1.3522,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0021,  0.9415,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[-8.6639e-01, -1.6718e-01,  2.3700e-01,  ...,  1.4911e+00,
          4.0295e-01,  1.1148e+00],
        [ 6.1514e-01, -1.9226e+00,  6.5484e-01,  ..., -1.7432e+00,
         -9.4763e-01,  2.7734e-01],
        [-8.6639e-01, -1.6718e-01,  2.3700e-01,  ...,  1.4911e+00,
          4.0295e-01,  1.1148e+00],
        ...,
        [-9.4895e-02, -5.0470e-01,  1.1336e+00,  ..., -1.4429e+00,
          1.1546e+00, -3.8255e-01],
        [-1.0190e-01, -4.2213e-01, -8.4644e-02,  ..., -1.4429e+00,
          1.1546e+00, -3.8255e-01],
        [-8.6639e-01, -1.6718e-01,  2.3700e-01,  ..., -1.4429e+00,
          1.1546e+00, -3.8255e-01]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 1.1730,  0.0000,  2.0961,  ...,  0.3771,  2.4558,  0.0000],
        [ 0.0000,  0.0000,  3.0728,  ...,  0.7373,  1.4927,  0.0000],
        [ 1.1730,  0.0000,  2.0961,  ...,  0.3771,  2.4558,  0.0000],
        ...,
        [ 0.0000,  0.1917,  1.7553,  ...,  2.6101,  2.1987,  0.0000],
        [ 0.6267,  0.0000,  1.6792,  ...,  2.6101,  2.1987,  0.0000],
        [ 0.0000,  0.0000,  2.6079,  ...,  2.6101,  2.1987,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.0000,  0.4122,  0.0000,  ...,  2.3379,  0.2381,  0.0562],
        [ 0.8742,  0.7331,  0.0000,  ...,  1.1390,  0.2046,  0.0000],
        [ 0.0000,  0.4122,  0.0000,  ...,  2.3379,  0.2381,  0.0562],
        ...,
        [ 1.0693,  0.4974,  0.0000,  ...,  1.8766,  1.5133,  0.4833],
        [ 0.1460,  0.7367,  0.0000,  ...,  1.8766,  1.5133,  0.4833],
        [ 0.1527,  1.0306,  0.0000,  ...,  1.8766,  1.5133,  0.4833]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.0000,  0.7789,  2.4844,  ...,  0.0000,  1.6888,  0.0000],
        [ 0.0000,  0.8965,  2.9388,  ...,  0.0000,  0.9266,  0.0000],
        [ 0.0000,  0.7789,  2.4844,  ...,  0.0000,  1.6888,  0.0000],
        ...,
        [ 0.0000,  0.9049,  3.0140,  ...,  0.6117,  0.6540,  0.0000],
        [ 0.0000,  1.2665,  2.9696,  ...,  0.6117,  0.6540,  0.0000],
        [ 0.0000,  0.8620,  2.7286,  ...,  0.6117,  0.6540,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 2.2171,  0.6389,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.7215,  0.8228,  0.0000,  ...,  0.1845,  0.0000,  0.0000],
        [ 2.2171,  0.6389,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 2.2732,  1.1259,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0265,  0.5797,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.8117,  0.6229,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
t = 10 / 1000000
 G [bbox_pred]: 0.5317
 G [L1_pixel_loss]: 0.9562
 G [total_loss]: 1.8966
 G [g_gan_obj_loss]: 0.0071
 G [g_gan_img_loss]: 0.0071
 G [ac_loss]: 0.3944
 D_obj [d_ac_loss_real]: 3.9710
 D_obj [d_ac_loss_fake]: 3.9443
 D_obj [d_obj_gan_loss]: 1.3787
 D_img [d_img_gan_loss]: 1.3887
cur_s_vecs
torch.Size([44, 128])
pred_vecs
torch.Size([44, 128])
cur_o_vecs
torch.Size([44, 128])
cur_t_vecs
torch.Size([44, 384])
tensor([[ 6.1512e-01, -1.9225e+00,  6.5485e-01,  ..., -1.7860e-01,
         -1.1746e+00,  4.7790e-01],
        [-6.4296e-01,  5.3485e-01,  1.3890e-01,  ..., -1.7860e-01,
         -1.1746e+00,  4.7790e-01],
        [-8.6639e-01, -1.6717e-01,  2.3698e-01,  ..., -2.8329e+00,
          1.8488e-01, -8.5809e-01],
        ...,
        [ 6.1512e-01, -1.9225e+00,  6.5485e-01,  ..., -1.4428e+00,
          1.1546e+00, -3.8253e-01],
        [-8.6639e-01, -1.6717e-01,  2.3698e-01,  ..., -1.4428e+00,
          1.1546e+00, -3.8253e-01],
        [ 9.8901e-01,  4.2636e-01, -1.6331e+00,  ..., -1.4428e+00,
          1.1546e+00, -3.8253e-01]], device='cuda:0')
cur_s_vecs
torch.Size([44, 128])
pred_vecs
torch.Size([44, 128])
cur_o_vecs
torch.Size([44, 128])
cur_t_vecs
torch.Size([44, 384])
tensor([[ 0.0000,  0.0000,  1.8545,  ...,  0.1934,  2.0742,  0.0000],
        [ 0.9035,  0.0000,  2.0675,  ...,  0.1934,  2.0742,  0.0000],
        [ 0.1904,  0.0000,  3.2769,  ...,  0.0000,  2.2728,  0.0000],
        ...,
        [ 0.7750,  0.0000,  1.9661,  ...,  2.6757,  1.9466,  0.0000],
        [ 0.0681,  0.0000,  2.0927,  ...,  2.6757,  1.9466,  0.0000],
        [ 0.9216,  0.0000,  2.5036,  ...,  2.6757,  1.9466,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([44, 128])
pred_vecs
torch.Size([44, 128])
cur_o_vecs
torch.Size([44, 128])
cur_t_vecs
torch.Size([44, 384])
tensor([[ 0.5550,  1.0392,  0.0405,  ...,  1.9441,  0.3123,  0.0000],
        [ 0.5795,  0.9045,  0.0384,  ...,  1.9441,  0.3123,  0.0000],
        [ 0.1202,  0.7680,  0.0000,  ...,  1.2293,  0.2309,  0.0000],
        ...,
        [ 0.8466,  0.0675,  0.0000,  ...,  2.3347,  1.7156,  0.4440],
        [ 0.2245,  0.9290,  0.0000,  ...,  2.3347,  1.7156,  0.4440],
        [ 0.5013,  0.6029,  0.1284,  ...,  2.3347,  1.7156,  0.4440]], device='cuda:0')
cur_s_vecs
torch.Size([44, 128])
pred_vecs
torch.Size([44, 128])
cur_o_vecs
torch.Size([44, 128])
cur_t_vecs
torch.Size([44, 384])
tensor([[ 0.0000,  0.9471,  2.8920,  ...,  0.0000,  1.1926,  0.0000],
        [ 0.0000,  1.3326,  2.5090,  ...,  0.0000,  1.1926,  0.0000],
        [ 0.0000,  0.7550,  3.0754,  ...,  0.1263,  1.0594,  0.0000],
        ...,
        [ 0.0000,  1.6058,  2.8472,  ...,  0.4085,  0.6951,  0.0000],
        [ 0.0000,  0.8078,  2.5850,  ...,  0.4085,  0.6951,  0.0000],
        [ 0.0000,  1.0865,  2.6929,  ...,  0.4085,  0.6951,  0.0000]], device='cuda:0')43171d
88325e
323479a
165299d
260109a
84034b
457448d
28349d
246099a
163829e
400999a
367605a
96728b
6421c
474105b
310564d
47909e
331302b
58979c
4764e
159199a
103582a
511143a
576526e
22658d
137339b
285357c
60378b
444399d
400850e
466134b
11690a
295850e
509267e
289100a
3001a
113019c
554319c
550278a
480576d
215612c
243796d
189033e
241178a
560563d
110777e
540926b
288313e
213530e
549098e
327413b
454044a
134597e
522704b
308803a
295491a
208267a
127750c
491558e
485491e
346915c
535265c
520389c
566547e
126204e
113619d
185963c
221633e
500982b
416188a
555800d
104537e
101426a
170687a
210266a
14798d
509514e
336854d
324740d
354938e
6075a
278899b
389772d
154597e
191690d
4761e
279345a
109568a
443086d
302576c
119761c
159403e
477468a
545929c
218886e
146120b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
96067b
101877c
167126b
468751d
529944e
293576a
569602c
459110b
144371b
428304c
195894e
163412b
150354d
134849b
572147e
459208b
494795d
573149e
78286b
276694e
84815e
397938a
283809a
142587b
13576e
312359c
242167b
522489d
189187a
244122d
167995e
329151a
187803e
524924d
332292c
485368b
310518e
194050c
377278b
208347b
89707e
261664e
152245e
299643b
5383d
188498c
157356a
171309a
259853a
349153c
153574c
324611a
306127c
21531c
432627d
30958c
61202b
160152a
404271d
197029b
569174b
102834e
521995d
23176c
31442c
478805d
452459c
52324b
455877a
224629e
174303b
217135c
462929c
6710a
438899c
525273e
53464b
365027d
274424a
412384d
169395c
557434a
214873b
316353e
43742e
472320a
132516a
522235a
485064e
390298c
340897e
2477b
533452e
396369b
150594d
385540c
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
327813a
546261e
176726c
414212a
20087d
47774c
282978b
85549b
10082e
515300d
18155c
257713b
507148b
346724d
285651a
37291d
505642a
320537b
71631c
567305a
578119d
139789e
233869d
107620e
217991b
353982b
363190c
107108a
132860e
488583b
238712c
364571b
245534b
97170c
568677b
230570b
581061b
349527d
84896e
545257e
557408d
288921b
49286d
245242c
20291d
75362a
404395b
531778b
553401b
393647a
308295c
493485a
81035b
183539b
431997e
91263a
488980a
208585b
135989c
134413c
392476a
572042e
552461b
426880c
327536c
355175a
330954d
277346a
254589a
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
438267e
250724b
457086c
233112e
322121b
412992d
289172d
543224b
102609d
302397b
92107d
455902d
313608d
103575d
177381e
223420c
167074b
207573a
518918b
127450a
131374d
344025a
323129a
10138e
295693b
529352e
217720d
441816e
66309b
237859c
102421d
408946a
39716b
168417b
409754e
71737d
269015d
126808e
577712e
42704a
570579a
59582d
463168c
173565d
359164c
13595b
502557d
90869b
24026a
76802b
216026b
367442b
248591a
39360d
297009a
26747c
121172a
517417b
173814c
388923b
257951c
400848e
103558b
189648b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_s_vecs
torch.Size([44, 128])
pred_vecs
torch.Size([44, 128])
cur_o_vecs
torch.Size([44, 128])
cur_t_vecs
torch.Size([44, 384])
tensor([[ 1.9429,  0.6295,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.9147,  0.7906,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.6516,  0.3918,  0.0000,  ...,  0.4113,  0.0000,  0.0515],
        ...,
        [ 2.2477,  0.7813,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.1104,  0.7482,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0821,  0.9231,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
Starting epoch 2
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 9.7711e-01, -1.9912e+00,  5.0813e-01,  ...,  1.0869e+00,
          2.7648e-01, -1.7429e+00],
        [ 9.7711e-01, -1.9912e+00,  5.0813e-01,  ..., -4.0648e-01,
          9.7878e-01,  2.0478e+00],
        [-1.0199e-01, -4.2216e-01, -8.4580e-02,  ..., -9.6589e-01,
          4.7549e-01, -6.4542e-01],
        ...,
        [ 2.7240e+00, -4.5073e-01,  3.9163e-01,  ..., -1.4428e+00,
          1.1545e+00, -3.8251e-01],
        [-2.9661e-01,  1.8391e+00,  1.0860e+00,  ..., -1.4428e+00,
          1.1545e+00, -3.8251e-01],
        [-2.7062e-01,  1.8514e-02, -8.8133e-01,  ..., -1.4428e+00,
          1.1545e+00, -3.8251e-01]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 0.5767,  0.0000,  2.6134,  ...,  0.0000,  2.1578,  0.0000],
        [ 0.5767,  0.0000,  2.6134,  ...,  0.0000,  2.0919,  0.0000],
        [ 0.0000,  0.0000,  3.2741,  ...,  0.0000,  1.9313,  0.0000],
        ...,
        [ 0.0995,  0.5708,  2.2785,  ...,  2.3612,  2.1275,  0.0000],
        [ 0.0000,  0.0000,  3.2858,  ...,  2.3612,  2.1275,  0.0000],
        [ 0.0000,  0.0000,  2.9300,  ...,  2.3612,  2.1275,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 0.4443,  0.3308,  0.0000,  ...,  1.9887,  0.0000,  0.0000],
        [ 0.4443,  0.3308,  0.0000,  ...,  1.5030,  0.5986,  0.0000],
        [ 1.1767,  0.8692,  0.2753,  ...,  1.4764,  0.1959,  0.0000],
        ...,
        [ 0.6520,  0.6974,  0.0245,  ...,  2.3683,  1.6415,  0.0933],
        [ 1.1827,  0.8582,  0.0000,  ...,  2.3683,  1.6415,  0.0933],
        [ 0.5510,  1.2035,  0.0000,  ...,  2.3683,  1.6415,  0.0933]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 0.0000,  1.4611,  2.6049,  ...,  0.0000,  1.5773,  0.0000],
        [ 0.0000,  1.4611,  2.6049,  ...,  0.0000,  1.0221,  0.0000],
        [ 0.0000,  0.8634,  2.7977,  ...,  0.2832,  1.0924,  0.0000],
        ...,
        [ 0.0900,  0.7982,  2.5842,  ...,  0.4333,  0.5778,  0.0000],
        [ 0.0000,  0.5494,  2.3093,  ...,  0.4333,  0.5778,  0.0000],
        [ 0.0000,  0.9382,  2.7561,  ...,  0.4333,  0.5778,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 1.8275,  0.4665,  0.0000,  ...,  0.1848,  0.0000,  0.0000],
        [ 1.8275,  0.4665,  0.0000,  ...,  0.5868,  0.0000,  0.0724],
        [ 1.9829,  0.6135,  0.0000,  ...,  0.6156,  0.0000,  0.1334],
        ...,
        [ 2.5644,  0.7388,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.1525,  0.7479,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0335,  0.8831,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 6.1507e-01, -1.9226e+00,  6.5485e-01,  ..., -3.7335e-01,
          1.4163e-02,  6.9635e-01],
        [ 8.2565e-02, -2.4542e-01,  1.5329e+00,  ..., -2.8329e+00,
          1.8484e-01, -8.5806e-01],
        [ 8.2565e-02, -2.4542e-01,  1.5329e+00,  ..., -3.7335e-01,
          1.4163e-02,  6.9635e-01],
        ...,
        [ 2.6626e+00, -9.4811e-01,  1.4113e-01,  ..., -1.4427e+00,
          1.1545e+00, -3.8250e-01],
        [-9.1630e-02, -6.1269e-01,  1.5145e-01,  ..., -1.4427e+00,
          1.1545e+00, -3.8250e-01],
        [-8.6640e-01, -1.6715e-01,  2.3693e-01,  ..., -1.4427e+00,
          1.1545e+00, -3.8250e-01]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.3198,  0.0000,  2.0850,  ...,  0.9850,  1.4597,  0.0000],
        [ 0.0000,  0.0000,  2.3144,  ...,  0.0000,  1.6283,  0.0000],
        [ 0.0000,  0.0000,  2.3144,  ...,  0.9850,  1.4597,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.8437,  ...,  2.6775,  2.0430,  0.0000],
        [ 0.0000,  0.5823,  1.4418,  ...,  2.6775,  2.0430,  0.0000],
        [ 0.6123,  0.0000,  1.6642,  ...,  2.6775,  2.0430,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.6274,  0.6419,  0.0000,  ...,  1.6977,  0.5433,  0.0000],
        [ 0.6263,  0.4088,  0.1826,  ...,  1.3710,  0.7787,  0.0000],
        [ 0.6263,  0.4088,  0.1826,  ...,  1.6977,  0.5433,  0.0000],
        ...,
        [ 1.1987,  0.9604,  0.0000,  ...,  1.8772,  1.3707,  0.3349],
        [ 0.7315,  1.1933,  0.2954,  ...,  1.8772,  1.3707,  0.3349],
        [ 0.0000,  0.7965,  0.2337,  ...,  1.8772,  1.3707,  0.3349]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.0000,  1.0485,  2.8364,  ...,  0.0000,  1.4912,  0.0000],
        [ 0.0000,  1.1197,  2.5615,  ...,  0.1489,  1.1307,  0.0000],
        [ 0.0000,  1.1197,  2.5615,  ...,  0.0000,  1.4912,  0.0000],
        ...,
        [ 0.0000,  0.4461,  2.7248,  ...,  0.6783,  0.7452,  0.0000],
        [ 0.0000,  1.1835,  2.4710,  ...,  0.6783,  0.7452,  0.0000],
        [ 0.0000,  0.7265,  2.0885,  ...,  0.6783,  0.7452,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 1.9917,  0.6044,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.7460,  0.4441,  0.0000,  ...,  0.6363,  0.0000,  0.5725],
        [ 1.7460,  0.4441,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 1.8183,  0.5165,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0083,  0.6878,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.8771,  0.5162,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 6.1506e-01, -1.9226e+00,  6.5486e-01,  ...,  6.1554e-01,
          1.2161e+00,  6.1451e-01],
        [-8.6641e-01, -1.6713e-01,  2.3688e-01,  ..., -2.8329e+00,
          1.8484e-01, -8.5806e-01],
        [ 6.1506e-01, -1.9226e+00,  6.5486e-01,  ..., -2.1133e+00,
          4.5587e-01,  1.3561e-01],
        ...,
        [ 9.7706e-01, -1.9911e+00,  5.0812e-01,  ..., -1.4427e+00,
          1.1545e+00, -3.8248e-01],
        [ 6.2802e-01,  7.1852e-01, -1.0827e+00,  ..., -1.4427e+00,
          1.1545e+00, -3.8248e-01],
        [ 9.4142e-01, -1.4334e+00, -1.8574e-03,  ..., -1.4427e+00,
          1.1545e+00, -3.8248e-01]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.1949,  0.0000,  2.5180,  ...,  0.0000,  2.4165,  0.0000],
        [ 0.2286,  0.0000,  2.2442,  ...,  0.0000,  2.5753,  0.0000],
        [ 0.1949,  0.0000,  2.5180,  ...,  0.7929,  2.0721,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.7647,  ...,  2.1284,  1.7901,  0.0000],
        [ 0.8527,  0.0000,  0.8827,  ...,  2.1284,  1.7901,  0.0000],
        [ 0.0000,  0.6806,  3.7284,  ...,  2.1284,  1.7901,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.3891,  0.9489,  0.0000,  ...,  1.5253,  0.0000,  0.0000],
        [ 0.7980,  0.8668,  0.0000,  ...,  2.0086,  0.3523,  0.0000],
        [ 0.3891,  0.9489,  0.0000,  ...,  1.1472,  0.0000,  0.0000],
        ...,
        [ 0.8072,  0.5556,  0.0000,  ...,  2.5491,  1.7691,  0.4531],
        [ 0.6752,  0.9255,  0.0000,  ...,  2.5491,  1.7691,  0.4531],
        [ 1.1846,  0.9030,  0.5446,  ...,  2.5491,  1.7691,  0.4531]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  0.9400,  2.5655,  ...,  0.3058,  0.9266,  0.0000],
        [ 0.0000,  0.8875,  2.6969,  ...,  0.0820,  0.8809,  0.0000],
        [ 0.0000,  0.9400,  2.5655,  ...,  0.0246,  0.7814,  0.0000],
        ...,
        [ 0.0000,  1.1391,  2.8727,  ...,  0.5427,  0.4353,  0.0000],
        [ 0.0000,  0.9013,  3.3298,  ...,  0.5427,  0.4353,  0.0000],
        [ 0.0000,  0.5375,  2.7653,  ...,  0.5427,  0.4353,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 1.7438,  0.5836,  0.0000,  ...,  0.4881,  0.0000,  0.2481],
        [ 1.8468,  0.3551,  0.0000,  ...,  0.5047,  0.0000,  0.1537],
        [ 1.7438,  0.5836,  0.0000,  ...,  0.3759,  0.0000,  0.0096],
        ...,
        [ 2.3877,  0.8853,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.7164,  0.7207,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.8733,  1.0993,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 5.9578e-01, -2.6327e-01, -1.7053e+00,  ...,  1.2225e+00,
          6.4037e-01,  3.3583e-01],
        [ 7.8718e-01, -7.1548e-01, -2.5873e+00,  ..., -1.8924e+00,
          6.0477e-01, -8.8496e-01],
        [ 7.8718e-01, -7.1548e-01, -2.5873e+00,  ...,  6.1555e-01,
          1.2161e+00,  6.1450e-01],
        ...,
        [ 7.8718e-01, -7.1548e-01, -2.5873e+00,  ..., -1.4427e+00,
          1.1544e+00, -3.8248e-01],
        [-1.1660e-01,  1.2282e+00,  6.0007e-01,  ..., -1.4427e+00,
          1.1544e+00, -3.8248e-01],
        [ 2.4709e-01,  2.3583e+00, -1.1857e+00,  ..., -1.4427e+00,
          1.1544e+00, -3.8248e-01]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 0.3577,  0.0000,  1.5466,  ...,  0.0000,  1.9690,  0.0000],
        [ 0.3634,  0.0000,  2.8411,  ...,  1.6304,  1.7384,  0.0000],
        [ 0.3634,  0.0000,  2.8411,  ...,  0.0000,  1.2340,  0.0000],
        ...,
        [ 0.4795,  0.0000,  1.7608,  ...,  2.1914,  2.1679,  0.0000],
        [ 0.6547,  0.0000,  2.0236,  ...,  2.1914,  2.1679,  0.0000],
        [ 0.0000,  0.0000,  2.5245,  ...,  2.1914,  2.1679,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 0.3639,  0.8333,  0.0000,  ...,  1.7070,  0.0390,  0.0000],
        [ 0.2152,  0.9148,  0.1263,  ...,  2.5967,  0.0049,  0.0000],
        [ 0.2152,  0.9148,  0.1263,  ...,  1.3177,  0.3714,  0.5457],
        ...,
        [ 0.2908,  0.7145,  0.0000,  ...,  2.5346,  1.7600,  0.3047],
        [ 1.0491,  0.4742,  0.0000,  ...,  2.5346,  1.7600,  0.3047],
        [ 0.4860,  0.5710,  0.4012,  ...,  2.5346,  1.7600,  0.3047]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 0.0000,  1.1271,  3.1454,  ...,  0.0073,  0.5038,  0.0000],
        [ 0.0000,  1.1802,  2.6248,  ...,  0.2634,  0.9897,  0.0000],
        [ 0.0000,  1.1802,  2.6248,  ...,  0.0000,  0.9125,  0.0000],
        ...,
        [ 0.0000,  1.0883,  3.2100,  ...,  0.8084,  0.5357,  0.0000],
        [ 0.0000,  0.9590,  2.6104,  ...,  0.8084,  0.5357,  0.0000],
        [ 0.0000,  1.1360,  3.3979,  ...,  0.8084,  0.5357,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 2.5370,  0.5295,  0.0000,  ...,  0.6729,  0.0000,  0.3106],
        [ 2.2200,  0.4369,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.2200,  0.4369,  0.0000,  ...,  0.1702,  0.0000,  0.0000],
        ...,
        [ 1.9669,  0.7190,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.8105,  0.7116,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.3520,  0.8427,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[-1.6389e+00, -5.2922e-02,  4.5488e-01,  ...,  8.8139e-01,
         -2.6321e-01,  1.0665e+00],
        [-2.3272e+00, -8.5948e-01,  1.2414e-01,  ...,  6.1559e-01,
          1.2161e+00,  6.1448e-01],
        [-1.6389e+00, -5.2922e-02,  4.5488e-01,  ...,  4.5178e-01,
         -6.6940e-02, -1.2444e+00],
        ...,
        [-8.6643e-01, -1.6708e-01,  2.3682e-01,  ..., -1.4427e+00,
          1.1544e+00, -3.8247e-01],
        [-1.1657e-01,  1.2282e+00,  6.0007e-01,  ..., -1.4427e+00,
          1.1544e+00, -3.8247e-01],
        [ 6.1505e-01, -1.9227e+00,  6.5487e-01,  ..., -1.4427e+00,
          1.1544e+00, -3.8247e-01]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 1.5791,  0.0000,  2.2920,  ...,  1.4502,  1.6034,  0.0000],
        [ 0.0000,  0.0000,  3.1826,  ...,  0.0703,  1.2223,  0.0000],
        [ 1.5791,  0.0000,  2.2920,  ...,  0.4401,  1.5018,  0.0000],
        ...,
        [ 0.5311,  0.0000,  1.3409,  ...,  2.4229,  1.8255,  0.0000],
        [ 0.0000,  0.0000,  1.8027,  ...,  2.4229,  1.8255,  0.0000],
        [ 0.2852,  0.0000,  1.6607,  ...,  2.4229,  1.8255,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.6892,  0.4354,  0.0000,  ...,  1.7382,  0.7276,  0.0000],
        [ 0.4800,  0.8866,  0.2017,  ...,  1.7605,  0.0152,  0.0000],
        [ 0.6892,  0.4354,  0.0000,  ...,  1.8063,  0.0135,  0.0000],
        ...,
        [ 0.6380,  0.0000,  0.2967,  ...,  2.5636,  1.8486,  0.1428],
        [ 0.8170,  0.4083,  0.0000,  ...,  2.5636,  1.8486,  0.1428],
        [ 0.9055,  1.2512,  0.4034,  ...,  2.5636,  1.8486,  0.1428]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  1.0856,  2.7071,  ...,  0.0000,  1.4526,  0.0000],
        [ 0.0000,  0.9865,  2.3790,  ...,  0.0000,  1.2111,  0.0000],
        [ 0.0000,  1.0856,  2.7071,  ...,  0.3341,  0.7066,  0.0000],
        ...,
        [ 0.0000,  0.9607,  2.4900,  ...,  0.8733,  0.4967,  0.0000],
        [ 0.0000,  0.6730,  2.6534,  ...,  0.8733,  0.4967,  0.0000],
        [ 0.0270,  1.2394,  2.4980,  ...,  0.8733,  0.4967,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 2.4756,  0.3378,  0.0000,  ...,  0.0209,  0.0000,  0.0000],
        [ 2.2067,  0.3496,  0.0000,  ...,  0.0453,  0.0000,  0.0000],
        [ 2.4756,  0.3378,  0.0000,  ...,  0.7544,  0.0000,  0.1992],
        ...,
        [ 2.3152,  0.5801,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.1183,  0.6555,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.3040,  1.1568,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[-8.6644e-01, -1.6704e-01,  2.3682e-01,  ..., -1.1189e+00,
         -1.7123e-01,  9.9116e-01],
        [ 2.6625e+00, -9.4815e-01,  1.4097e-01,  ...,  6.1564e-01,
          1.2161e+00,  6.1446e-01],
        [-8.6644e-01, -1.6704e-01,  2.3682e-01,  ..., -4.0633e-01,
          9.7866e-01,  2.0477e+00],
        ...,
        [-6.4273e-01,  5.3482e-01,  1.3880e-01,  ..., -1.4427e+00,
          1.1544e+00, -3.8247e-01],
        [ 6.1506e-01, -1.9227e+00,  6.5487e-01,  ..., -1.4427e+00,
          1.1544e+00, -3.8247e-01],
        [-8.6644e-01, -1.6704e-01,  2.3682e-01,  ..., -1.4427e+00,
          1.1544e+00, -3.8247e-01]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.7347,  0.0000,  2.5421,  ...,  0.0000,  2.1878,  0.0000],
        [ 0.0000,  0.1442,  2.5484,  ...,  0.0000,  1.3317,  0.0000],
        [ 0.7347,  0.0000,  2.5421,  ...,  0.0000,  2.7194,  0.0000],
        ...,
        [ 0.8481,  0.0000,  2.3018,  ...,  2.7047,  2.5115,  0.0000],
        [ 0.6572,  0.0000,  1.9095,  ...,  2.7047,  2.5115,  0.0000],
        [ 0.0219,  0.0000,  1.5313,  ...,  2.7047,  2.5115,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.2297,  0.7764,  0.0000,  ...,  1.9609,  0.0939,  0.0000],
        [ 1.2468,  0.5791,  0.0000,  ...,  1.4558,  0.0551,  0.0000],
        [ 0.2297,  0.7764,  0.0000,  ...,  1.1073,  0.0316,  0.0000],
        ...,
        [ 0.6313,  0.9170,  0.0000,  ...,  2.0518,  2.0897,  0.5216],
        [ 0.6174,  0.5045,  0.3190,  ...,  2.0518,  2.0897,  0.5216],
        [ 0.9533,  0.4906,  0.0000,  ...,  2.0518,  2.0897,  0.5216]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.0000,  0.8288,  2.3160,  ...,  0.0000,  0.8641,  0.0000],
        [ 0.0000,  0.5408,  2.6577,  ...,  0.1570,  0.5774,  0.0000],
        [ 0.0000,  0.8288,  2.3160,  ...,  0.0438,  1.0527,  0.0000],
        ...,
        [ 0.0000,  1.3384,  2.1843,  ...,  0.7655,  0.8587,  0.0000],
        [ 0.0000,  1.4998,  3.4796,  ...,  0.7655,  0.8587,  0.0000],
        [ 0.0000,  0.5059,  2.6937,  ...,  0.7655,  0.8587,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 2.0360,  0.2397,  0.0000,  ...,  0.3369,  0.0000,  0.0000],
        [ 2.0351,  0.5952,  0.0000,  ...,  0.7881,  0.0000,  0.3756],
        [ 2.0360,  0.2397,  0.0000,  ...,  0.0741,  0.0000,  0.0000],
        ...,
        [ 2.3582,  0.6019,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.9080,  0.9810,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.6346,  0.8798,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 7.1059e-01,  2.5041e-01,  2.0127e-01,  ..., -2.8330e+00,
          1.8476e-01, -8.5804e-01],
        [ 2.4710e-01,  2.3582e+00, -1.1857e+00,  ..., -1.5904e+00,
         -1.0305e+00, -6.9378e-01],
        [ 7.1059e-01,  2.5041e-01,  2.0127e-01,  ..., -1.5904e+00,
         -1.0305e+00, -6.9378e-01],
        ...,
        [ 2.4710e-01,  2.3582e+00, -1.1857e+00,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01],
        [ 1.5889e-01,  8.8117e-01,  2.2916e+00,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01],
        [ 7.1059e-01,  2.5041e-01,  2.0127e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.0000,  0.0000,  2.2528,  ...,  1.1231,  3.1463,  0.0000],
        [ 0.0737,  0.0000,  2.7284,  ...,  1.0956,  1.7821,  0.0000],
        [ 0.0000,  0.0000,  2.2528,  ...,  1.0956,  1.7821,  0.0000],
        ...,
        [ 0.0331,  0.0000,  2.0485,  ...,  2.4128,  2.2670,  0.0000],
        [ 0.3418,  0.0000,  2.6405,  ...,  2.4128,  2.2670,  0.0000],
        [ 0.0000,  0.0000,  3.3336,  ...,  2.4128,  2.2670,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.7549,  0.3889,  0.0000,  ...,  1.9485,  0.0000,  0.7433],
        [ 0.3774,  0.5787,  0.0809,  ...,  1.7908,  0.0963,  0.0000],
        [ 0.7549,  0.3889,  0.0000,  ...,  1.7908,  0.0963,  0.0000],
        ...,
        [ 0.5941,  0.5134,  0.3441,  ...,  1.9193,  1.4547,  0.6773],
        [ 1.2003,  0.6446,  0.0000,  ...,  1.9193,  1.4547,  0.6773],
        [ 1.3796,  0.2315,  0.3319,  ...,  1.9193,  1.4547,  0.6773]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.0000,  1.0909,  2.5265,  ...,  0.5320,  1.0796,  0.0000],
        [ 0.0000,  1.1252,  2.9902,  ...,  0.0000,  1.4246,  0.0000],
        [ 0.0000,  1.0909,  2.5265,  ...,  0.0000,  1.4246,  0.0000],
        ...,
        [ 0.0000,  1.5095,  2.9024,  ...,  0.5733,  0.8795,  0.0000],
        [ 0.0000,  0.4578,  2.2157,  ...,  0.5733,  0.8795,  0.0000],
        [ 0.0000,  0.0709,  2.0647,  ...,  0.5733,  0.8795,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 2.0689,  0.6064,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.4068,  0.8121,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0689,  0.6064,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 2.0432,  0.5059,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.8036,  0.5627,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.5689,  0.5149,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[-1.6389e+00, -5.2894e-02,  4.5482e-01,  ...,  6.1574e-01,
          1.2161e+00,  6.1442e-01],
        [ 1.0131e+00,  3.6227e-02,  1.8458e+00,  ...,  1.4913e+00,
          4.0302e-01,  1.1143e+00],
        [-1.6389e+00, -5.2894e-02,  4.5482e-01,  ...,  6.1574e-01,
          1.2161e+00,  6.1442e-01],
        ...,
        [-1.1654e-01,  1.2282e+00,  6.0001e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01],
        [-8.6645e-01, -1.6696e-01,  2.3680e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01],
        [ 7.7940e-01, -1.0546e+00, -1.0580e+00,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.4762,  0.0000,  2.6597,  ...,  0.8416,  2.3749,  0.0000],
        [ 0.5168,  0.0000,  1.6204,  ...,  0.5427,  2.0833,  0.0000],
        [ 0.4762,  0.0000,  2.6597,  ...,  0.8416,  2.3749,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.4517,  ...,  2.2618,  2.1465,  0.0000],
        [ 0.0000,  0.0000,  1.8994,  ...,  2.2618,  2.1465,  0.0000],
        [ 0.0000,  0.0000,  2.5841,  ...,  2.2618,  2.1465,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.6889,  0.4995,  0.0841,  ...,  1.3843,  0.4747,  0.1122],
        [ 0.7100,  0.0341,  0.0000,  ...,  1.7184,  0.0000,  0.0922],
        [ 0.6889,  0.4995,  0.0841,  ...,  1.3843,  0.4747,  0.1122],
        ...,
        [ 1.6039,  0.3147,  0.1962,  ...,  2.3033,  1.4005,  0.5435],
        [ 0.6708,  1.5796,  0.0000,  ...,  2.3033,  1.4005,  0.5435],
        [ 0.3482,  0.0000,  0.3092,  ...,  2.3033,  1.4005,  0.5435]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.4824,  2.2074,  ...,  0.0120,  0.7755,  0.0000],
        [ 0.0000,  1.2669,  2.9756,  ...,  0.0449,  0.9812,  0.0000],
        [ 0.0000,  0.4824,  2.2074,  ...,  0.0120,  0.7755,  0.0000],
        ...,
        [ 0.0000,  0.6242,  1.9009,  ...,  0.3318,  0.6528,  0.0000],
        [ 0.0000,  0.8252,  1.9333,  ...,  0.3318,  0.6528,  0.0000],
        [ 0.0000,  0.9774,  2.6387,  ...,  0.3318,  0.6528,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 1.5711,  0.0833,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.4245,  0.6098,  0.0000,  ...,  0.5748,  0.0000,  0.2662],
        [ 1.5711,  0.0833,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 1.8449,  0.6513,  0.0000,  ...,  0.0000,  0.0683,  0.0000],
        [ 1.9371,  0.5476,  0.0000,  ...,  0.0000,  0.0683,  0.0000],
        [ 2.0211,  0.9577,  0.0000,  ...,  0.0000,  0.0683,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([251, 128])
pred_vecs
torch.Size([251, 128])
cur_o_vecs
torch.Size([251, 128])
cur_t_vecs
torch.Size([251, 384])
tensor([[ 9.4115e-01, -1.4333e+00, -1.9428e-03,  ...,  6.1576e-01,
          1.2161e+00,  6.1439e-01],
        [ 9.4115e-01, -1.4333e+00, -1.9428e-03,  ..., -1.7527e+00,
         -7.4465e-01, -2.3518e-01],
        [ 9.4115e-01, -1.4333e+00, -1.9428e-03,  ..., -1.7527e+00,
         -7.4465e-01, -2.3518e-01],
        ...,
        [-8.6645e-01, -1.6695e-01,  2.3676e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01],
        [ 1.3920e+00,  1.1439e+00, -1.0845e+00,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01],
        [ 2.7241e+00, -4.5101e-01,  3.9190e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01]], device='cuda:0')
cur_s_vecs
torch.Size([251, 128])
pred_vecs
torch.Size([251, 128])
cur_o_vecs
torch.Size([251, 128])
cur_t_vecs
torch.Size([251, 384])
tensor([[ 1.0119,  0.0000,  2.0511,  ...,  0.0000,  0.7431,  0.0000],
        [ 1.0119,  0.0000,  2.0511,  ...,  0.9147,  0.9479,  0.0000],
        [ 1.0119,  0.0000,  2.0511,  ...,  0.9147,  0.9479,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.8737,  ...,  2.0179,  1.9676,  0.0000],
        [ 0.0094,  0.0660,  1.5492,  ...,  2.0179,  1.9676,  0.0000],
        [ 0.0283,  0.4397,  2.9957,  ...,  2.0179,  1.9676,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([251, 128])
pred_vecs
torch.Size([251, 128])
cur_o_vecs
torch.Size([251, 128])
cur_t_vecs
torch.Size([251, 384])
tensor([[ 0.7714,  1.1539,  0.1740,  ...,  1.4092,  0.0000,  0.3300],
        [ 0.7714,  1.1539,  0.1740,  ...,  1.2410,  0.3305,  0.5382],
        [ 0.7714,  1.1539,  0.1740,  ...,  1.2410,  0.3305,  0.5382],
        ...,
        [ 0.7244,  0.0995,  0.0000,  ...,  2.2267,  1.8224,  0.6116],
        [ 1.2479,  0.8551,  0.0000,  ...,  2.2267,  1.8224,  0.6116],
        [ 1.1486,  0.5878,  0.0000,  ...,  2.2267,  1.8224,  0.6116]], device='cuda:0')
cur_s_vecs
torch.Size([251, 128])
pred_vecs
torch.Size([251, 128])
cur_o_vecs
torch.Size([251, 128])
cur_t_vecs
torch.Size([251, 384])
tensor([[ 0.0000,  0.9481,  2.6937,  ...,  0.0000,  1.2944,  0.0000],
        [ 0.0000,  0.9481,  2.6937,  ...,  0.0000,  1.3634,  0.0000],
        [ 0.0000,  0.9481,  2.6937,  ...,  0.0000,  1.3634,  0.0000],
        ...,
        [ 0.0000,  0.8317,  2.1180,  ...,  0.6252,  0.5913,  0.0000],
        [ 0.0000,  0.7579,  2.1733,  ...,  0.6252,  0.5913,  0.0000],
        [ 0.0794,  0.6583,  1.7074,  ...,  0.6252,  0.5913,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([251, 128])
pred_vecs
torch.Size([251, 128])
cur_o_vecs
torch.Size([251, 128])
cur_t_vecs
torch.Size([251, 384])
tensor([[ 2.5114,  0.4556,  0.0000,  ...,  0.5415,  0.0000,  0.0197],
        [ 2.5114,  0.4556,  0.0000,  ...,  0.1125,  0.0000,  0.0000],
        [ 2.5114,  0.4556,  0.0000,  ...,  0.1125,  0.0000,  0.0000],
        ...,
        [ 2.5712,  0.6000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0094,  0.8634,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.1618,  0.6978,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
t = 20 / 1000000
 G [bbox_pred]: 0.5390
 G [L1_pixel_loss]: 1.0168
 G [total_loss]: 1.9044
 G [g_gan_obj_loss]: 0.0070
 G [g_gan_img_loss]: 0.0072
 G [ac_loss]: 0.3344
 D_obj [d_ac_loss_real]: 3.3845
 D_obj [d_ac_loss_fake]: 3.3442
 D_obj [d_obj_gan_loss]: 1.3709
 D_img [d_img_gan_loss]: 1.3747
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[-1.0225e-01, -4.2234e-01, -8.4369e-02,  ...,  6.1579e-01,
          1.2161e+00,  6.1435e-01],
        [-2.3048e+00, -1.1128e+00,  2.5452e-01,  ..., -4.0616e-01,
          9.7853e-01,  2.0475e+00],
        [-8.6646e-01, -1.6693e-01,  2.3670e-01,  ...,  1.1796e-01,
          1.0600e+00, -6.4905e-01],
        ...,
        [ 4.1095e-01,  1.4786e+00, -2.0324e+00,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01],
        [-8.6646e-01, -1.6693e-01,  2.3670e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01],
        [-1.6389e+00, -5.2888e-02,  4.5472e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.9031,  0.0000,  1.7535,  ...,  0.0000,  1.8282,  0.0000],
        [ 0.1678,  0.0000,  2.7439,  ...,  0.0000,  1.8778,  0.0000],
        [ 0.0000,  0.0000,  2.1828,  ...,  0.0000,  1.5254,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.7103,  ...,  2.4900,  2.4873,  0.0000],
        [ 0.0000,  0.0000,  2.5370,  ...,  2.4900,  2.4873,  0.0000],
        [ 0.6130,  0.0000,  2.0490,  ...,  2.4900,  2.4873,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[ 1.1725,  0.4323,  0.4775,  ...,  2.2994,  0.4714,  0.0804],
        [ 0.7884,  0.4018,  0.0333,  ...,  2.0002,  0.0000,  0.0000],
        [ 0.8329,  0.9954,  0.0969,  ...,  1.2566,  0.6504,  0.0000],
        ...,
        [ 0.7222,  1.4462,  0.1815,  ...,  1.8719,  2.2500,  0.7125],
        [ 0.8363,  0.3267,  0.0000,  ...,  1.8719,  2.2500,  0.7125],
        [ 0.4790,  0.2873,  0.0000,  ...,  1.8719,  2.2500,  0.7125]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.0000,  1.0132,  1.9588,  ...,  0.0000,  0.8071,  0.0000],
        [ 0.0000,  0.5793,  1.8015,  ...,  0.0621,  0.9922,  0.0000],
        [ 0.0000,  0.7961,  1.9110,  ...,  0.0000,  0.4916,  0.0000],
        ...,
        [ 0.0044,  0.8797,  2.1593,  ...,  0.4437,  0.4610,  0.0000],
        [ 0.0000,  0.5381,  2.1756,  ...,  0.4437,  0.4610,  0.0000],
        [ 0.0000,  0.7862,  2.3666,  ...,  0.4437,  0.4610,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[ 1.7722,  0.4981,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.7834,  0.4006,  0.0000,  ...,  0.5000,  0.0000,  0.0000],
        [ 2.1807,  0.7350,  0.0000,  ...,  0.6155,  0.0000,  0.0000],
        ...,
        [ 2.1162,  0.6974,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0063,  0.3351,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.4596,  0.1794,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([35, 128])
pred_vecs
torch.Size([35, 128])
cur_o_vecs
torch.Size([35, 128])
cur_t_vecs
torch.Size([35, 384])
tensor([[ 1.2190e+00, -3.3006e-01,  1.6757e+00,  ..., -2.8939e-01,
          3.8747e-01, -1.3378e+00],
        [-8.6646e-01, -1.6691e-01,  2.3665e-01,  ..., -2.8939e-01,
          3.8747e-01, -1.3378e+00],
        [-8.6646e-01, -1.6691e-01,  2.3665e-01,  ...,  1.5716e+00,
         -4.8337e-02, -4.2293e-01],
        ...,
        [-1.2822e+00, -7.9124e-01,  4.7032e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01],
        [ 3.1352e-01,  4.7101e-01,  6.2724e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01],
        [-6.2300e-02, -5.1544e-01, -5.7166e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8247e-01]], device='cuda:0')
cur_s_vecs
torch.Size([35, 128])
pred_vecs
torch.Size([35, 128])
cur_o_vecs
torch.Size([35, 128])
cur_t_vecs
torch.Size([35, 384])
tensor([[ 0.3688,  0.0000,  2.2189,  ...,  0.5273,  1.7517,  0.0000],
        [ 0.2456,  0.0000,  2.0846,  ...,  0.5273,  1.7517,  0.0000],
        [ 0.2456,  0.0000,  2.0846,  ...,  0.0000,  1.9049,  0.0000],
        ...,
        [ 0.2595,  0.0000,  1.3176,  ...,  2.3977,  2.0048,  0.0000],
        [ 0.0000,  0.0000,  2.2318,  ...,  2.3977,  2.0048,  0.0000],
        [ 0.0000,  0.0000,  1.6688,  ...,  2.3977,  2.0048,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([35, 128])
pred_vecs
torch.Size([35, 128])
cur_o_vecs
torch.Size([35, 128])
cur_t_vecs
torch.Size([35, 384])
tensor([[ 0.8558,  1.3898,  0.9846,  ...,  1.7216,  0.0000,  0.1785],
        [ 0.4422,  0.3928,  0.1996,  ...,  1.7216,  0.0000,  0.1785],
        [ 0.4422,  0.3928,  0.1996,  ...,  1.3032,  0.0000,  0.1234],
        ...,
        [ 1.1496,  0.4868,  0.3924,  ...,  1.9033,  1.5051,  0.2637],
        [ 1.1978,  0.7907,  0.2114,  ...,  1.9033,  1.5051,  0.2637],
        [ 0.7767,  0.8419,  0.0000,  ...,  1.9033,  1.5051,  0.2637]], device='cuda:0')431997e
540926b
47909e
131374d
194050c
428304c
4764e
310518e
91263a
78286b
134849b
409754e
208347b
302397b
426880c
550278a
97170c
363190c
28349d
295491a
84815e
92107d
545929c
144371b
207573a
377278b
135989c
257713b
466134b
132516a
76802b
408946a
101877c
233112e
14798d
43742e
6075a
432627d
457448d
494795d
444399d
42704a
39360d
549098e
393647a
511143a
572147e
452459c
478805d
488980a
102421d
555800d
485368b
327413b
416188a
285651a
107108a
139789e
299643b
177381e
174303b
455877a
524924d
71737d
188498c
58979c
167074b
245534b
517417b
121172a
365027d
459110b
66309b
187803e
160152a
412992d
279345a
518918b
349153c
441816e
557408d
522489d
567305a
185963c
557434a
488583b
126808e
159199a
500982b
213530e
364571b
455902d
210266a
88325e
224629e
259853a
173565d
163412b
152245e
454044a
173814c
400999a
217991b
250724b
515300d
49286d
53464b
103575d
169395c
573149e
438899c
127750c
533452e
154597e
572042e
96728b
84034b
215612c
522235a
570579a
438267e
323479a
581061b
359164c
261664e
168417b
367442b
52324b
462929c
477468a
535265c
254589a
282978b
223420c
463168c
468751d
480576d
21531c
269015d
132860e
520389c
22658d
176726c
502557d
569602c
59582d
170687a
289100a
134597e
474105b
283809a
150594d
400848e
388923b
529352e
244122d
302576c
509514e
485064e
327536c
221633e
134413c
554319c
295850e
208585b
23176c
146120b
47774c
85549b
323129a
355175a
330954d
30958c
245242c
491558e
103558b
285357c
397938a
493485a
26747c
276694e
167126b
392476a
404395b
242167b
507148b
127450a
216026b
183539b
367605a
84896e
529944e
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
353982b
568677b
329151a
243796d
414212a
10138e
24026a
39716b
96067b
113019c
346724d
331302b
320537b
90869b
324740d
13576e
260109a
3001a
310564d
241178a
576526e
126204e
237859c
159403e
459208b
289172d
404271d
4761e
137339b
13595b
18155c
107620e
101426a
390298c
257951c
344025a
274424a
531778b
569174b
61202b
218886e
312359c
153574c
306127c
11690a
5383d
43171d
322121b
197029b
293576a
545257e
208267a
288921b
6421c
577712e
230570b
233869d
20291d
217720d
71631c
396369b
297009a
167995e
553401b
485491e
189033e
20087d
191690d
171309a
37291d
354938e
578119d
295693b
119761c
189187a
340897e
472320a
6710a
31442c
385540c
189648b
308295c
546261e
110777e
163829e
277346a
522704b
246099a
525273e
389772d
102609d
113619d
75362a
336854d
165299d
150354d
566547e
104537e
400850e
313608d
308803a
505642a
157356a
81035b
509267e
60378b
412384d
543224b
217135c
443086d
109568a
102834e
327813a
560563d
195894e
316353e
288313e
103582a
142587b
457086c
332292c
89707e
349527d
10082e
278899b
2477b
521995d
346915c
238712c
552461b
248591a
324611a
214873b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_s_vecs
torch.Size([35, 128])
pred_vecs
torch.Size([35, 128])
cur_o_vecs
torch.Size([35, 128])
cur_t_vecs
torch.Size([35, 384])
tensor([[ 0.0000,  0.6812,  2.1441,  ...,  0.0000,  1.8962,  0.0000],
        [ 0.0000,  1.0616,  2.3110,  ...,  0.0000,  1.8962,  0.0000],
        [ 0.0000,  1.0616,  2.3110,  ...,  0.0718,  0.8714,  0.0000],
        ...,
        [ 0.0000,  0.8112,  2.2877,  ...,  0.3991,  0.7766,  0.0000],
        [ 0.1980,  0.7011,  2.0651,  ...,  0.3991,  0.7766,  0.0000],
        [ 0.0000,  0.7458,  1.9603,  ...,  0.3991,  0.7766,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([35, 128])
pred_vecs
torch.Size([35, 128])
cur_o_vecs
torch.Size([35, 128])
cur_t_vecs
torch.Size([35, 384])
tensor([[ 2.1319,  0.5956,  0.0000,  ...,  0.0439,  0.0000,  0.0000],
        [ 2.5509,  0.4099,  0.0000,  ...,  0.0439,  0.0000,  0.0000],
        [ 2.5509,  0.4099,  0.0000,  ...,  0.6767,  0.0000,  0.4536],
        ...,
        [ 1.7475,  0.6190,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.5047,  0.6396,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.4657,  0.5436,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
Starting epoch 3
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 4.0469e-01,  3.2491e-01, -1.9944e+00,  ...,  1.7416e+00,
          5.2184e-01,  9.9076e-01],
        [ 1.3919e+00,  1.1439e+00, -1.0844e+00,  ...,  1.0684e+00,
          1.8184e-01, -6.0469e-01],
        [ 4.0469e-01,  3.2491e-01, -1.9944e+00,  ...,  3.0777e+00,
         -1.2362e-02, -3.9742e-01],
        ...,
        [-2.6899e+00,  6.3527e-01, -6.3060e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8249e-01],
        [-6.4268e-01,  5.3485e-01,  1.3875e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8249e-01],
        [-8.6647e-01, -1.6690e-01,  2.3661e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8249e-01]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.8587,  0.0663,  2.6341,  ...,  0.0000,  1.5296,  0.0000],
        [ 0.0407,  0.0000,  2.7178,  ...,  0.0000,  2.8824,  0.0000],
        [ 0.8587,  0.0663,  2.6341,  ...,  0.0000,  1.1699,  0.0000],
        ...,
        [ 0.1489,  0.0000,  2.0600,  ...,  1.8025,  2.2391,  0.0000],
        [ 0.1914,  0.0000,  2.6734,  ...,  1.8025,  2.2391,  0.0000],
        [ 0.0000,  0.0000,  2.0467,  ...,  1.8025,  2.2391,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 1.1229,  0.2727,  0.0000,  ...,  1.8840,  0.2359,  0.0000],
        [ 0.8234,  0.4423,  0.0000,  ...,  1.6784,  0.3046,  0.0000],
        [ 1.1229,  0.2727,  0.0000,  ...,  1.9101,  0.0000,  0.1085],
        ...,
        [ 0.5608,  0.2048,  0.0000,  ...,  2.0634,  2.0296,  0.7577],
        [ 1.2927,  0.4717,  0.4893,  ...,  2.0634,  2.0296,  0.7577],
        [ 0.9237,  0.3996,  0.2872,  ...,  2.0634,  2.0296,  0.7577]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.0000,  1.2826,  2.0027,  ...,  0.0434,  0.6100,  0.0000],
        [ 0.0000,  0.8994,  2.0552,  ...,  0.4120,  0.6014,  0.0000],
        [ 0.0000,  1.2826,  2.0027,  ...,  0.0000,  0.7765,  0.0000],
        ...,
        [ 0.0000,  0.8113,  1.8580,  ...,  0.7774,  0.5471,  0.0000],
        [ 0.0000,  0.5989,  1.7187,  ...,  0.7774,  0.5471,  0.0000],
        [ 0.0000,  0.7406,  1.9611,  ...,  0.7774,  0.5471,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 1.8691,  0.5863,  0.0000,  ...,  0.4621,  0.0000,  0.0000],
        [ 2.1255,  0.7697,  0.0000,  ...,  0.5330,  0.0000,  0.0120],
        [ 1.8691,  0.5863,  0.0000,  ...,  0.4950,  0.0000,  0.0000],
        ...,
        [ 1.7613,  0.2457,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.8871,  0.9162,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.8825,  0.5584,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[-8.6649e-01, -1.6688e-01,  2.3659e-01,  ..., -4.0606e-01,
          9.7847e-01,  2.0474e+00],
        [-8.6649e-01, -1.6688e-01,  2.3659e-01,  ...,  1.0868e+00,
          2.7665e-01, -1.7424e+00],
        [ 9.4108e-01, -1.4332e+00, -1.9803e-03,  ..., -4.0606e-01,
          9.7847e-01,  2.0474e+00],
        ...,
        [ 4.0470e-01,  3.2494e-01, -1.9944e+00,  ..., -1.4426e+00,
          1.1543e+00, -3.8249e-01],
        [-1.3903e-01, -6.6428e-01, -2.7715e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8249e-01],
        [-8.6649e-01, -1.6688e-01,  2.3659e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8249e-01]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.5388,  0.0000,  1.4045,  ...,  0.5264,  1.6636,  0.0000],
        [ 0.5388,  0.0000,  1.4045,  ...,  0.0000,  2.6985,  0.0000],
        [ 0.6588,  0.6383,  2.6842,  ...,  0.5264,  1.6636,  0.0000],
        ...,
        [ 0.2155,  0.7434,  1.9500,  ...,  2.0610,  2.5673,  0.0000],
        [ 0.0000,  0.7098,  2.4396,  ...,  2.0610,  2.5673,  0.0000],
        [ 0.2524,  0.0000,  2.6220,  ...,  2.0610,  2.5673,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.3740,  0.6962,  0.0000,  ...,  1.3448,  0.5135,  0.1988],
        [ 0.3740,  0.6962,  0.0000,  ...,  1.6460,  0.0000,  0.0000],
        [ 1.1744,  0.7822,  0.2940,  ...,  1.3448,  0.5135,  0.1988],
        ...,
        [ 0.8465,  0.8296,  0.0000,  ...,  1.8979,  2.0285,  0.6361],
        [ 1.4008,  0.8326,  0.0000,  ...,  1.8979,  2.0285,  0.6361],
        [ 0.1769,  0.2765,  0.0000,  ...,  1.8979,  2.0285,  0.6361]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.0000,  1.2696,  1.9975,  ...,  0.0000,  1.1762,  0.0000],
        [ 0.0000,  1.2696,  1.9975,  ...,  0.2133,  1.3472,  0.0000],
        [ 0.0000,  0.7819,  2.3325,  ...,  0.0000,  1.1762,  0.0000],
        ...,
        [ 0.0000,  0.7569,  2.0697,  ...,  0.1656,  0.4886,  0.0000],
        [ 0.1028,  0.4402,  1.5266,  ...,  0.1656,  0.4886,  0.0000],
        [ 0.0000,  0.8406,  2.0140,  ...,  0.1656,  0.4886,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 2.7593,  0.1359,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.7593,  0.1359,  0.0000,  ...,  0.3906,  0.0000,  0.2047],
        [ 2.2849,  0.7041,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 2.1023,  0.8357,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.2901,  0.9419,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.6866,  0.4142,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[-8.6651e-01, -1.6685e-01,  2.3657e-01,  ...,  1.4914e+00,
          4.0308e-01,  1.1141e+00],
        [-8.6651e-01, -1.6685e-01,  2.3657e-01,  ..., -1.7434e+00,
         -9.4741e-01,  2.7766e-01],
        [-6.4265e-01,  5.3482e-01,  1.3877e-01,  ...,  6.1585e-01,
          1.2161e+00,  6.1423e-01],
        ...,
        [-6.4265e-01,  5.3482e-01,  1.3877e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8248e-01],
        [-8.6651e-01, -1.6685e-01,  2.3657e-01,  ..., -1.4426e+00,
          1.1543e+00, -3.8248e-01],
        [-1.4828e+00,  9.1354e-01,  1.6473e+00,  ..., -1.4426e+00,
          1.1543e+00, -3.8248e-01]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.2998,  0.0000,  1.7270,  ...,  0.6570,  2.0369,  0.0000],
        [ 0.2998,  0.0000,  1.7270,  ...,  0.0000,  1.8431,  0.0000],
        [ 0.0627,  0.0000,  2.8467,  ...,  0.0000,  1.8932,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.7466,  ...,  1.5998,  2.1181,  0.0000],
        [ 0.0000,  0.0000,  1.8711,  ...,  1.5998,  2.1181,  0.0000],
        [ 0.6485,  0.0000,  2.1683,  ...,  1.5998,  2.1181,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.6650,  0.3608,  0.0159,  ...,  1.8888,  0.0780,  0.4337],
        [ 0.6650,  0.3608,  0.0159,  ...,  2.1103,  0.0000,  0.0000],
        [ 0.9038,  0.3579,  0.1478,  ...,  1.2582,  0.0000,  0.0888],
        ...,
        [ 1.1644,  0.1636,  0.1624,  ...,  1.9228,  1.5774,  0.4371],
        [ 0.6400,  0.3686,  0.0000,  ...,  1.9228,  1.5774,  0.4371],
        [ 0.7662,  0.2933,  0.0000,  ...,  1.9228,  1.5774,  0.4371]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.0000,  0.6825,  1.6721,  ...,  0.0000,  1.4319,  0.0000],
        [ 0.0000,  0.6825,  1.6721,  ...,  0.0000,  0.6544,  0.0000],
        [ 0.0000,  0.7301,  1.6290,  ...,  0.0538,  0.4709,  0.0000],
        ...,
        [ 0.0000,  0.8630,  1.5604,  ...,  0.3583,  0.4325,  0.0000],
        [ 0.0000,  0.5651,  1.7128,  ...,  0.3583,  0.4325,  0.0000],
        [ 0.0000,  0.7720,  1.6857,  ...,  0.3583,  0.4325,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 1.9936,  0.1046,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.9936,  0.1046,  0.0000,  ...,  0.4335,  0.0000,  0.0548],
        [ 1.7341,  0.4304,  0.0000,  ...,  0.5670,  0.0000,  0.3758],
        ...,
        [ 2.1869,  0.6493,  0.0000,  ...,  0.0000,  0.0038,  0.0000],
        [ 1.9478,  0.0199,  0.0000,  ...,  0.0000,  0.0038,  0.0000],
        [ 1.7300,  0.3206,  0.0000,  ...,  0.0000,  0.0038,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([237, 128])
pred_vecs
torch.Size([237, 128])
cur_o_vecs
torch.Size([237, 128])
cur_t_vecs
torch.Size([237, 384])
tensor([[-1.1659e-01,  1.2279e+00,  6.0008e-01,  ...,  1.6085e+00,
          1.0811e+00,  5.5071e-01],
        [ 1.5880e-01,  8.8093e-01,  2.2914e+00,  ..., -1.2292e+00,
         -1.5079e+00, -1.4928e-01],
        [ 1.5880e-01,  8.8093e-01,  2.2914e+00,  ..., -1.2292e+00,
         -1.5079e+00, -1.4928e-01],
        ...,
        [ 3.1341e-01,  4.7100e-01,  6.2707e-01,  ..., -1.4426e+00,
          1.1542e+00, -3.8249e-01],
        [-1.0241e-01, -4.2246e-01, -8.4417e-02,  ..., -1.4426e+00,
          1.1542e+00, -3.8249e-01],
        [ 7.7922e-01, -1.0546e+00, -1.0578e+00,  ..., -1.4426e+00,
          1.1542e+00, -3.8249e-01]], device='cuda:0')
cur_s_vecs
torch.Size([237, 128])
pred_vecs
torch.Size([237, 128])
cur_o_vecs
torch.Size([237, 128])
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  0.0000,  3.1768,  ...,  0.0000,  1.5318,  0.0000],
        [ 0.8406,  0.0000,  3.1315,  ...,  0.0663,  1.1669,  0.0000],
        [ 0.8406,  0.0000,  3.1315,  ...,  0.0663,  1.1669,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.4067,  ...,  1.9348,  2.0296,  0.0000],
        [ 0.6037,  0.0000,  1.3230,  ...,  1.9348,  2.0296,  0.0000],
        [ 0.0666,  0.0000,  1.8624,  ...,  1.9348,  2.0296,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([237, 128])
pred_vecs
torch.Size([237, 128])
cur_o_vecs
torch.Size([237, 128])
cur_t_vecs
torch.Size([237, 384])
tensor([[ 1.1098,  0.1849,  0.1559,  ...,  1.7764,  0.0000,  0.0353],
        [ 0.4835,  0.4879,  0.4317,  ...,  1.7476,  0.5930,  0.0769],
        [ 0.4835,  0.4879,  0.4317,  ...,  1.7476,  0.5930,  0.0769],
        ...,
        [ 1.0691,  0.9448,  0.3511,  ...,  1.7191,  1.2433,  0.6271],
        [ 1.1403,  0.5684,  0.3072,  ...,  1.7191,  1.2433,  0.6271],
        [ 0.8366,  0.4539,  0.0000,  ...,  1.7191,  1.2433,  0.6271]], device='cuda:0')
cur_s_vecs
torch.Size([237, 128])
pred_vecs
torch.Size([237, 128])
cur_o_vecs
torch.Size([237, 128])
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  0.4743,  1.1137,  ...,  0.0000,  1.7986,  0.0000],
        [ 0.0000,  0.9827,  2.3902,  ...,  0.0000,  0.6984,  0.0000],
        [ 0.0000,  0.9827,  2.3902,  ...,  0.0000,  0.6984,  0.0000],
        ...,
        [ 0.0000,  0.9168,  2.3953,  ...,  0.6333,  0.9907,  0.0000],
        [ 0.0000,  1.1402,  2.0625,  ...,  0.6333,  0.9907,  0.0000],
        [ 0.0000,  0.9499,  1.9041,  ...,  0.6333,  0.9907,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([237, 128])
pred_vecs
torch.Size([237, 128])
cur_o_vecs
torch.Size([237, 128])
cur_t_vecs
torch.Size([237, 384])
tensor([[ 1.3737,  0.1806,  0.0000,  ...,  0.1190,  0.0000,  0.0000],
        [ 1.8813,  0.3884,  0.0000,  ...,  0.2392,  0.0000,  0.0000],
        [ 1.8813,  0.3884,  0.0000,  ...,  0.2392,  0.0000,  0.0000],
        ...,
        [ 1.9981,  0.7171,  0.0000,  ...,  0.0000,  0.0438,  0.0000],
        [ 1.7226,  0.2466,  0.0000,  ...,  0.0000,  0.0438,  0.0000],
        [ 1.6149,  0.4659,  0.0000,  ...,  0.0000,  0.0438,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 1.3917e+00,  1.1437e+00, -1.0842e+00,  ...,  1.6085e+00,
          1.0811e+00,  5.5075e-01],
        [-8.6652e-01, -1.6682e-01,  2.3651e-01,  ..., -2.8330e+00,
          1.8465e-01, -8.5803e-01],
        [-2.9733e-01,  1.8388e+00,  1.0862e+00,  ...,  1.7417e+00,
          5.2176e-01,  9.9085e-01],
        ...,
        [ 5.9593e-01, -2.6352e-01, -1.7054e+00,  ..., -1.4425e+00,
          1.1542e+00, -3.8249e-01],
        [-8.6652e-01, -1.6682e-01,  2.3651e-01,  ..., -1.4425e+00,
          1.1542e+00, -3.8249e-01],
        [-6.2189e-02, -5.1554e-01, -5.7174e-01,  ..., -1.4425e+00,
          1.1542e+00, -3.8249e-01]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 0.4941,  0.0000,  2.4087,  ...,  0.0000,  3.1934,  0.0000],
        [ 0.1577,  0.0000,  2.2006,  ...,  0.0000,  3.0531,  0.0000],
        [ 0.4274,  0.0000,  2.5067,  ...,  0.4789,  1.4312,  0.0000],
        ...,
        [ 0.4665,  0.0000,  2.2154,  ...,  2.4592,  2.8061,  0.0000],
        [ 0.0000,  0.0000,  2.1360,  ...,  2.4592,  2.8061,  0.0000],
        [ 0.0000,  0.0000,  2.5994,  ...,  2.4592,  2.8061,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 0.5443,  0.8400,  0.0000,  ...,  1.6843,  0.0759,  0.0000],
        [ 0.3870,  0.0000,  0.0000,  ...,  1.2177,  0.8404,  0.3306],
        [ 0.7045,  0.3515,  0.0303,  ...,  1.0575,  0.0000,  0.1112],
        ...,
        [ 0.5176,  0.3991,  0.0000,  ...,  1.9971,  1.6524,  0.5228],
        [ 1.0819,  0.4104,  0.0696,  ...,  1.9971,  1.6524,  0.5228],
        [ 0.8431,  0.6158,  0.0416,  ...,  1.9971,  1.6524,  0.5228]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 0.0000,  0.5079,  1.8143,  ...,  0.0000,  1.0283,  0.0000],
        [ 0.0000,  0.8286,  2.5832,  ...,  0.1162,  1.4944,  0.0000],
        [ 0.0000,  1.1250,  1.8270,  ...,  0.0000,  0.6836,  0.0000],
        ...,
        [ 0.0000,  0.9168,  2.2681,  ...,  0.3087,  0.6904,  0.0000],
        [ 0.0000,  0.4986,  1.8013,  ...,  0.3087,  0.6904,  0.0000],
        [ 0.0000,  0.6396,  1.5530,  ...,  0.3087,  0.6904,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 1.9186,  0.2720,  0.0000,  ...,  0.2778,  0.0000,  0.2072],
        [ 2.6366,  0.1507,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.6423,  0.0523,  0.0000,  ...,  0.5096,  0.0000,  0.1935],
        ...,
        [ 2.3409,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.8039,  0.3669,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0348,  0.5536,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[ 1.4550e+00,  1.4563e+00,  1.8792e+00,  ...,  1.0868e+00,
          2.7672e-01, -1.7423e+00],
        [-1.0250e-01, -4.2247e-01, -8.4441e-02,  ..., -9.9332e-01,
         -4.9889e-01,  1.2984e+00],
        [ 7.7922e-01, -1.0546e+00, -1.0578e+00,  ...,  6.1585e-01,
          1.2161e+00,  6.1419e-01],
        ...,
        [ 2.9293e+00,  1.9592e-01,  2.8134e-01,  ..., -1.4425e+00,
          1.1542e+00, -3.8250e-01],
        [ 2.9293e+00,  1.9592e-01,  2.8134e-01,  ..., -1.4425e+00,
          1.1542e+00, -3.8250e-01],
        [-8.6652e-01, -1.6681e-01,  2.3646e-01,  ..., -1.4425e+00,
          1.1542e+00, -3.8250e-01]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[ 0.0000,  0.0000,  2.7554,  ...,  0.0000,  1.5438,  0.0000],
        [ 0.1401,  0.0000,  1.5186,  ...,  0.0392,  1.5615,  0.0000],
        [ 0.1811,  0.0000,  3.5445,  ...,  0.2198,  1.4580,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.3379,  ...,  2.4220,  3.4067,  0.0000],
        [ 0.0935,  0.0000,  3.2261,  ...,  2.4220,  3.4067,  0.0000],
        [ 0.0000,  0.0000,  2.7211,  ...,  2.4220,  3.4067,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[ 1.0920,  0.1126,  0.4129,  ...,  1.6476,  0.5762,  0.0000],
        [ 1.0948,  0.0922,  0.4166,  ...,  1.3093,  0.0000,  0.0000],
        [ 1.0465,  0.4894,  0.4378,  ...,  1.7514,  0.0252,  0.7642],
        ...,
        [ 0.9978,  0.3621,  0.0000,  ...,  1.4605,  1.2328,  0.7843],
        [ 0.7878,  0.6635,  0.6066,  ...,  1.4605,  1.2328,  0.7843],
        [ 1.1335,  0.8562,  0.0000,  ...,  1.4605,  1.2328,  0.7843]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[ 0.0000,  0.8929,  2.1228,  ...,  0.1623,  0.9327,  0.0000],
        [ 0.0000,  1.4821,  2.8623,  ...,  0.0000,  0.9029,  0.0000],
        [ 0.0000,  0.9762,  1.9421,  ...,  0.0000,  1.0988,  0.0000],
        ...,
        [ 0.0000,  1.3223,  2.6079,  ...,  1.0277,  1.5688,  0.0000],
        [ 0.0000,  0.9551,  2.2550,  ...,  1.0277,  1.5688,  0.0000],
        [ 0.0000,  0.7307,  1.6601,  ...,  1.0277,  1.5688,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[ 2.0166,  0.1950,  0.0000,  ...,  0.2952,  0.0000,  0.1668],
        [ 2.5058,  0.3759,  0.0000,  ...,  0.4121,  0.0000,  0.2183],
        [ 1.8057,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 2.8272,  0.3100,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.2578,  0.3318,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.9391,  0.6690,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([248, 128])
pred_vecs
torch.Size([248, 128])
cur_o_vecs
torch.Size([248, 128])
cur_t_vecs
torch.Size([248, 384])
tensor([[-9.4663e-01,  1.0845e+00, -3.1546e-01,  ...,  5.0023e-01,
         -1.2083e+00, -1.2389e-01],
        [-9.4663e-01,  1.0845e+00, -3.1546e-01,  ...,  1.0869e+00,
          2.7672e-01, -1.7423e+00],
        [-8.6651e-01, -1.6681e-01,  2.3641e-01,  ...,  1.0869e+00,
          2.7672e-01, -1.7423e+00],
        ...,
        [-8.6651e-01, -1.6681e-01,  2.3641e-01,  ..., -1.4425e+00,
          1.1542e+00, -3.8251e-01],
        [-2.9740e-01,  1.8388e+00,  1.0862e+00,  ..., -1.4425e+00,
          1.1542e+00, -3.8251e-01],
        [ 9.8904e-01,  4.2620e-01, -1.6327e+00,  ..., -1.4425e+00,
          1.1542e+00, -3.8251e-01]], device='cuda:0')
cur_s_vecs
torch.Size([248, 128])
pred_vecs
torch.Size([248, 128])
cur_o_vecs
torch.Size([248, 128])
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.7041,  0.0000,  1.4062,  ...,  0.6035,  2.3404,  0.0000],
        [ 0.7041,  0.0000,  1.4062,  ...,  0.0000,  2.2424,  0.0000],
        [ 0.3633,  0.0000,  0.6105,  ...,  0.0000,  2.2424,  0.0000],
        ...,
        [ 0.3440,  0.0000,  1.9861,  ...,  2.3043,  2.2863,  0.0000],
        [ 0.1088,  0.0000,  2.2220,  ...,  2.3043,  2.2863,  0.0000],
        [ 0.8925,  0.0000,  1.9696,  ...,  2.3043,  2.2863,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([248, 128])
pred_vecs
torch.Size([248, 128])
cur_o_vecs
torch.Size([248, 128])
cur_t_vecs
torch.Size([248, 384])
tensor([[ 1.6795,  0.0413,  0.0000,  ...,  1.2722,  0.0000,  0.7797],
        [ 1.6795,  0.0413,  0.0000,  ...,  1.9114,  0.3976,  0.0000],
        [ 1.5129,  0.4663,  0.0000,  ...,  1.9114,  0.3976,  0.0000],
        ...,
        [ 0.2995,  0.0000,  0.0000,  ...,  2.0755,  2.1421,  0.6405],
        [ 0.3812,  0.0000,  0.1226,  ...,  2.0755,  2.1421,  0.6405],
        [ 0.7756,  0.7468,  0.1139,  ...,  2.0755,  2.1421,  0.6405]], device='cuda:0')
cur_s_vecs
torch.Size([248, 128])
pred_vecs
torch.Size([248, 128])
cur_o_vecs
torch.Size([248, 128])
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.0000,  1.3375,  2.5889,  ...,  0.0000,  1.5105,  0.0000],
        [ 0.0000,  1.3375,  2.5889,  ...,  0.0000,  1.5675,  0.0000],
        [ 0.0000,  0.8642,  2.1459,  ...,  0.0000,  1.5675,  0.0000],
        ...,
        [ 0.0000,  1.1373,  2.6283,  ...,  0.6212,  0.5238,  0.0000],
        [ 0.0000,  1.0512,  2.1931,  ...,  0.6212,  0.5238,  0.0000],
        [ 0.0000,  1.0524,  2.5701,  ...,  0.6212,  0.5238,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([248, 128])
pred_vecs
torch.Size([248, 128])
cur_o_vecs
torch.Size([248, 128])
cur_t_vecs
torch.Size([248, 384])
tensor([[ 2.9369,  0.0000,  0.0000,  ...,  0.3075,  0.0000,  0.0000],
        [ 2.9369,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.9262,  0.1589,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 3.0184,  0.1173,  0.0000,  ...,  0.0000,  0.1501,  0.0000],
        [ 2.7336,  0.0362,  0.0000,  ...,  0.0000,  0.1501,  0.0000],
        [ 2.1090,  0.3488,  0.0000,  ...,  0.0000,  0.1501,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 2.9694e-01, -6.5244e-01, -1.1967e-01,  ...,  5.0023e-01,
         -1.2083e+00, -1.2389e-01],
        [ 2.1201e+00,  2.0334e+00, -6.7855e-01,  ...,  1.8036e+00,
         -1.4416e-01, -2.3635e+00],
        [ 2.9694e-01, -6.5244e-01, -1.1967e-01,  ...,  6.1584e-01,
          1.2162e+00,  6.1415e-01],
        ...,
        [-6.2098e-02, -5.1562e-01, -5.7176e-01,  ..., -1.4426e+00,
          1.1542e+00, -3.8253e-01],
        [ 6.2764e-01,  7.1908e-01, -1.0828e+00,  ..., -1.4426e+00,
          1.1542e+00, -3.8253e-01],
        [ 3.1344e-01,  4.7094e-01,  6.2689e-01,  ..., -1.4426e+00,
          1.1542e+00, -3.8253e-01]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.0000,  0.0000,  2.2780,  ...,  0.2324,  2.3462,  0.0000],
        [ 0.0000,  0.0000,  2.4945,  ...,  0.0000,  1.3397,  0.0000],
        [ 0.0000,  0.0000,  2.2780,  ...,  0.0000,  1.5646,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.4697,  ...,  2.1494,  2.5105,  0.0000],
        [ 0.3499,  0.0000,  2.1715,  ...,  2.1494,  2.5105,  0.0000],
        [ 1.0657,  0.3898,  1.4623,  ...,  2.1494,  2.5105,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.6757,  0.8171,  0.2334,  ...,  1.4527,  0.4997,  0.0000],
        [ 0.6570,  0.8450,  0.0000,  ...,  0.9335,  0.3376,  0.0000],
        [ 0.6757,  0.8171,  0.2334,  ...,  1.6210,  0.2900,  0.2840],
        ...,
        [ 0.8305,  0.4654,  0.3062,  ...,  1.8888,  1.7094,  0.4384],
        [ 1.3319,  0.2251,  0.0000,  ...,  1.8888,  1.7094,  0.4384],
        [ 1.5140,  0.8379,  0.2843,  ...,  1.8888,  1.7094,  0.4384]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.0000,  0.6965,  2.0179,  ...,  0.4296,  0.7037,  0.0000],
        [ 0.0000,  1.2063,  2.0270,  ...,  0.2456,  0.6950,  0.0000],
        [ 0.0000,  0.6965,  2.0179,  ...,  0.0000,  1.0402,  0.0000],
        ...,
        [ 0.0000,  1.2148,  1.7522,  ...,  0.6680,  0.9634,  0.0000],
        [ 0.0000,  1.2275,  2.2915,  ...,  0.6680,  0.9634,  0.0000],
        [ 0.1305,  1.0702,  2.3279,  ...,  0.6680,  0.9634,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 2.2014,  0.1109,  0.0000,  ...,  0.0827,  0.0000,  0.0967],
        [ 2.0841,  0.2527,  0.0000,  ...,  0.5810,  0.0000,  0.3209],
        [ 2.2014,  0.1109,  0.0000,  ...,  0.0095,  0.0000,  0.0000],
        ...,
        [ 1.9232,  0.4684,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.1623,  0.2550,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.1300,  0.6844,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
t = 30 / 1000000
 G [bbox_pred]: 0.5510
 G [L1_pixel_loss]: 1.0073
 G [total_loss]: 1.8877
 G [g_gan_obj_loss]: 0.0073
 G [g_gan_img_loss]: 0.0075
 G [ac_loss]: 0.3146
 D_obj [d_ac_loss_real]: 3.1818
 D_obj [d_ac_loss_fake]: 3.1458
 D_obj [d_obj_gan_loss]: 1.3340
 D_img [d_img_gan_loss]: 1.3404
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[ 2.1890e-01,  1.3378e+00,  1.8382e+00,  ...,  1.5717e+00,
         -4.8293e-02, -4.2280e-01],
        [ 1.2188e+00, -3.2997e-01,  1.6755e+00,  ...,  6.1586e-01,
          1.2161e+00,  6.1414e-01],
        [ 1.2188e+00, -3.2997e-01,  1.6755e+00,  ..., -8.0059e-01,
          6.3990e-01, -2.4051e-01],
        ...,
        [-8.6650e-01, -1.6679e-01,  2.3634e-01,  ..., -1.4425e+00,
          1.1542e+00, -3.8255e-01],
        [ 8.2292e-02, -2.4551e-01,  1.5332e+00,  ..., -1.4425e+00,
          1.1542e+00, -3.8255e-01],
        [ 9.4083e-01, -1.4330e+00, -2.0816e-03,  ..., -1.4425e+00,
          1.1542e+00, -3.8255e-01]], device='cuda:0')
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[ 0.0000,  0.0000,  2.8795,  ...,  0.0000,  1.4310,  0.0000],
        [ 0.5459,  0.0000,  2.6715,  ...,  0.0000,  0.9863,  0.0000],
        [ 0.5459,  0.0000,  2.6715,  ...,  0.3753,  1.5043,  0.0000],
        ...,
        [ 0.5606,  0.0000,  3.0505,  ...,  2.1654,  1.7946,  0.0000],
        [ 0.0000,  0.0000,  2.6659,  ...,  2.1654,  1.7946,  0.0000],
        [ 1.6240,  0.0000,  2.9332,  ...,  2.1654,  1.7946,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[ 0.6008,  0.6086,  0.2765,  ...,  1.3719,  0.0735,  0.0000],
        [ 0.9197,  0.8670,  0.7189,  ...,  1.6540,  0.1636,  0.5085],
        [ 0.9197,  0.8670,  0.7189,  ...,  1.1988,  0.2103,  0.0211],
        ...,
        [ 0.7969,  0.5653,  0.0000,  ...,  1.8116,  1.9450,  0.4364],
        [ 0.4567,  0.7428,  0.0764,  ...,  1.8116,  1.9450,  0.4364],
        [ 1.1351,  0.4009,  0.3645,  ...,  1.8116,  1.9450,  0.4364]], device='cuda:0')
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[ 0.0000,  0.9881,  1.9001,  ...,  0.0000,  0.3975,  0.0000],
        [ 0.0000,  0.7837,  1.9141,  ...,  0.0000,  1.0378,  0.0000],
        [ 0.0000,  0.7837,  1.9141,  ...,  0.0000,  0.7845,  0.0000],
        ...,
        [ 0.0000,  0.6811,  1.8334,  ...,  0.3751,  0.3970,  0.0000],
        [ 0.0000,  0.8217,  2.1227,  ...,  0.3751,  0.3970,  0.0000],
        [ 0.0000,  0.7727,  2.7959,  ...,  0.3751,  0.3970,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[ 1.9106,  0.3063,  0.0000,  ...,  0.3751,  0.0000,  0.3065],
        [ 2.0882,  0.0000,  0.0000,  ...,  0.3110,  0.0000,  0.0000],
        [ 2.0882,  0.0000,  0.0000,  ...,  0.3900,  0.0000,  0.1152],
        ...,
        [ 2.3289,  0.3448,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.1549,  0.4682,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 3.1018,  0.1129,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([226, 128])
pred_vecs
torch.Size([226, 128])
cur_o_vecs
torch.Size([226, 128])
cur_t_vecs
torch.Size([226, 384])
tensor([[ 1.4700e+00,  3.6471e-01, -8.2684e-01,  ...,  1.5718e+00,
         -4.8271e-02, -4.2278e-01],
        [ 1.2187e+00, -3.2997e-01,  1.6755e+00,  ..., -1.8060e-01,
         -1.1688e+00, -9.0984e-01],
        [-8.6650e-01, -1.6678e-01,  2.3633e-01,  ...,  1.5718e+00,
         -4.8271e-02, -4.2278e-01],
        ...,
        [ 6.1555e-01, -1.9228e+00,  6.5496e-01,  ..., -1.4425e+00,
          1.1541e+00, -3.8257e-01],
        [ 9.8899e-01,  4.2619e-01, -1.6326e+00,  ..., -1.4425e+00,
          1.1541e+00, -3.8257e-01],
        [ 4.1088e-01,  1.4785e+00, -2.0321e+00,  ..., -1.4425e+00,
          1.1541e+00, -3.8257e-01]], device='cuda:0')
cur_s_vecs
torch.Size([226, 128])
pred_vecs
torch.Size([226, 128])
cur_o_vecs
torch.Size([226, 128])
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.0000,  0.0000,  3.0622,  ...,  0.5707,  1.5865,  0.0000],
        [ 0.3020,  0.0000,  2.8148,  ...,  0.2320,  1.7419,  0.0000],
        [ 0.6499,  0.0000,  1.2234,  ...,  0.5707,  1.5865,  0.0000],
        ...,
        [ 0.0000,  0.0000,  3.0427,  ...,  2.1180,  2.0595,  0.0000],
        [ 0.8402,  0.0000,  1.9617,  ...,  2.1180,  2.0595,  0.0000],
        [ 1.3210,  0.0000,  1.6667,  ...,  2.1180,  2.0595,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([226, 128])
pred_vecs
torch.Size([226, 128])
cur_o_vecs
torch.Size([226, 128])
cur_t_vecs
torch.Size([226, 384])
tensor([[ 1.1723,  0.5520,  0.3328,  ...,  1.6631,  0.5045,  0.0000],
        [ 1.0559,  0.8457,  0.4642,  ...,  1.0665,  0.4508,  0.0000],
        [ 0.8101,  0.4727,  0.0295,  ...,  1.6631,  0.5045,  0.0000],
        ...,
        [ 1.2365,  0.6135,  0.0878,  ...,  2.2047,  2.1282,  0.7546],
        [ 0.1180,  0.4344,  0.3907,  ...,  2.2047,  2.1282,  0.7546],
        [ 0.5358,  0.7198,  0.2153,  ...,  2.2047,  2.1282,  0.7546]], device='cuda:0')
cur_s_vecs
torch.Size([226, 128])
pred_vecs
torch.Size([226, 128])
cur_o_vecs
torch.Size([226, 128])
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.0000,  1.1435,  1.8381,  ...,  0.0846,  0.9627,  0.0000],
        [ 0.0000,  0.4771,  1.8290,  ...,  0.1430,  0.6651,  0.0000],
        [ 0.0000,  0.9357,  2.1795,  ...,  0.0846,  0.9627,  0.0000],
        ...,
        [ 0.0000,  0.7036,  2.0688,  ...,  0.6212,  0.6891,  0.0000],
        [ 0.0000,  1.3152,  2.7595,  ...,  0.6212,  0.6891,  0.0000],
        [ 0.0000,  0.8705,  2.2821,  ...,  0.6212,  0.6891,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([226, 128])
pred_vecs
torch.Size([226, 128])
cur_o_vecs
torch.Size([226, 128])
cur_t_vecs
torch.Size([226, 384])
tensor([[ 1.8972,  0.1140,  0.0000,  ...,  0.0768,  0.0000,  0.0000],
        [ 2.2139,  0.5890,  0.0000,  ...,  0.5656,  0.0000,  0.2818],
        [ 2.8289,  0.1848,  0.0000,  ...,  0.0768,  0.0000,  0.0000],
        ...,
        [ 2.6969,  0.7916,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.7630,  0.0275,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.1361,  0.3182,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([30, 128])
pred_vecs
torch.Size([30, 128])
cur_o_vecs
torch.Size([30, 128])
cur_t_vecs
torch.Size([30, 384])
tensor([[-1.0260e-01, -4.2243e-01, -8.4437e-02,  ...,  6.1590e-01,
          1.2161e+00,  6.1411e-01],
        [-1.0260e-01, -4.2243e-01, -8.4437e-02,  ...,  1.8036e+00,
         -1.4420e-01, -2.3635e+00],
        [-1.0260e-01, -4.2243e-01, -8.4437e-02,  ...,  1.8036e+00,
         -1.4420e-01, -2.3635e+00],
        ...,
        [-1.3909e-01, -6.6449e-01, -2.7726e-01,  ..., -1.4425e+00,
          1.1541e+00, -3.8259e-01],
        [-1.0260e-01, -4.2243e-01, -8.4437e-02,  ..., -1.4425e+00,
          1.1541e+00, -3.8259e-01],
        [-8.6651e-01, -1.6678e-01,  2.3632e-01,  ..., -1.4425e+00,
          1.1541e+00, -3.8259e-01]], device='cuda:0')
cur_s_vecs
torch.Size([30, 128])
pred_vecs
torch.Size([30, 128])
cur_o_vecs
torch.Size([30, 128])
cur_t_vecs
torch.Size([30, 384])
tensor([[ 0.0000,  0.0000,  1.6050,  ...,  0.0000,  2.3166,  0.0000],
        [ 0.0000,  0.0000,  1.6050,  ...,  0.0959,  1.5109,  0.0000],
        [ 0.0000,  0.0000,  1.6050,  ...,  0.0959,  1.5109,  0.0000],
        ...,
        [ 0.7973,  0.0000,  2.8994,  ...,  1.9782,  2.7727,  0.0000],
        [ 0.9823,  0.0000,  1.6073,  ...,  1.9782,  2.7727,  0.0000],
        [ 0.0000,  0.1374,  2.2540,  ...,  1.9782,  2.7727,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([30, 128])
pred_vecs
torch.Size([30, 128])
cur_o_vecs
torch.Size([30, 128])
cur_t_vecs
torch.Size([30, 384])
tensor([[ 1.0291,  1.0306,  0.0000,  ...,  0.8710,  0.0000,  0.3434],
        [ 1.0291,  1.0306,  0.0000,  ...,  1.4681,  1.0849,  0.0000],
        [ 1.0291,  1.0306,  0.0000,  ...,  1.4681,  1.0849,  0.0000],
        ...,
        [ 0.5343,  0.0395,  0.0000,  ...,  1.5502,  1.9455,  0.6577],
        [ 1.0860,  0.0975,  0.0000,  ...,  1.5502,  1.9455,  0.6577],
        [ 0.9493,  0.7433,  0.0000,  ...,  1.5502,  1.9455,  0.6577]], device='cuda:0')438899c
49286d
277346a
572147e
185963c
412384d
207573a
113619d
404395b
107620e
455902d
6075a
568677b
426880c
329151a
173565d
103575d
459208b
295850e
560563d
529944e
150354d
404271d
285651a
23176c
197029b
494795d
96728b
187803e
160152a
522704b
131374d
299643b
462929c
444399d
167126b
134849b
194050c
330954d
297009a
261664e
103582a
121172a
210266a
26747c
174303b
208267a
431997e
183539b
457448d
313608d
276694e
132516a
306127c
312359c
478805d
367605a
569602c
171309a
295491a
39360d
455877a
540926b
191690d
577712e
159199a
244122d
102834e
432627d
102421d
24026a
438267e
13576e
224629e
254589a
76802b
126204e
543224b
119761c
21531c
188498c
28349d
441816e
549098e
308803a
428304c
525273e
134597e
107108a
283809a
245534b
163412b
146120b
218886e
97170c
43742e
509267e
11690a
327413b
189648b
4761e
289100a
142587b
324740d
52324b
524924d
217135c
167995e
572042e
96067b
3001a
135989c
137339b
349527d
557408d
47774c
389772d
144371b
84815e
176726c
557434a
208347b
257951c
493485a
71631c
511143a
237859c
377278b
393647a
545257e
310564d
545929c
310518e
392476a
104537e
260109a
208585b
509514e
139789e
367442b
217720d
507148b
59582d
10138e
327813a
173814c
515300d
195894e
30958c
521995d
522235a
109568a
250724b
157356a
332292c
101877c
43171d
359164c
127750c
170687a
223420c
71737d
320537b
257713b
518918b
75362a
466134b
363190c
533452e
53464b
6710a
364571b
567305a
488583b
37291d
517417b
61202b
520389c
491558e
282978b
396369b
230570b
126808e
346724d
576526e
279345a
259853a
84034b
18155c
288313e
573149e
20087d
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
31442c
302397b
42704a
278899b
323479a
400999a
336854d
246099a
22658d
293576a
4764e
468751d
213530e
92107d
285357c
242167b
6421c
233869d
78286b
416188a
152245e
84896e
5383d
177381e
189187a
349153c
167074b
88325e
103558b
414212a
324611a
238712c
390298c
102609d
163829e
409754e
472320a
385540c
500982b
412992d
485368b
353982b
474105b
581061b
66309b
408946a
110777e
289172d
316353e
189033e
550278a
90869b
552461b
331302b
459110b
2477b
47909e
502557d
20291d
485491e
355175a
132860e
159403e
397938a
168417b
214873b
233112e
535265c
569174b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
165299d
344025a
443086d
127450a
243796d
485064e
150594d
322121b
346915c
531778b
81035b
245242c
58979c
555800d
454044a
340897e
85549b
566547e
578119d
570579a
269015d
452459c
457086c
400850e
323129a
14798d
477468a
248591a
153574c
134413c
91263a
365027d
60378b
488980a
169395c
13595b
221633e
522489d
480576d
154597e
463168c
215612c
302576c
400848e
113019c
554319c
89707e
217991b
546261e
327536c
288921b
295693b
10082e
529352e
274424a
308295c
388923b
553401b
241178a
505642a
101426a
354938e
216026b
39716b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_s_vecs
torch.Size([30, 128])
pred_vecs
torch.Size([30, 128])
cur_o_vecs
torch.Size([30, 128])
cur_t_vecs
torch.Size([30, 384])
tensor([[ 0.0000,  1.1232,  2.0202,  ...,  0.0000,  0.9586,  0.0000],
        [ 0.0000,  1.1232,  2.0202,  ...,  0.1495,  1.3401,  0.0000],
        [ 0.0000,  1.1232,  2.0202,  ...,  0.1495,  1.3401,  0.0000],
        ...,
        [ 0.0000,  1.1658,  2.4470,  ...,  0.4907,  0.5017,  0.0000],
        [ 0.0000,  0.7847,  1.8003,  ...,  0.4907,  0.5017,  0.0000],
        [ 0.0000,  0.5117,  2.0260,  ...,  0.4907,  0.5017,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([30, 128])
pred_vecs
torch.Size([30, 128])
cur_o_vecs
torch.Size([30, 128])
cur_t_vecs
torch.Size([30, 384])
tensor([[ 2.4240,  0.4213,  0.0000,  ...,  0.2591,  0.0000,  0.0000],
        [ 2.4240,  0.4213,  0.0000,  ...,  0.0700,  0.0000,  0.0000],
        [ 2.4240,  0.4213,  0.0000,  ...,  0.0700,  0.0000,  0.0000],
        ...,
        [ 2.4836,  0.1934,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.2977,  0.3860,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0546,  0.3996,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
Starting epoch 4
cur_s_vecs
torch.Size([222, 128])
pred_vecs
torch.Size([222, 128])
cur_o_vecs
torch.Size([222, 128])
cur_t_vecs
torch.Size([222, 384])
tensor([[ 2.9704e-01, -6.5240e-01, -1.1982e-01,  ...,  1.7419e+00,
          5.2167e-01,  9.9094e-01],
        [ 6.1564e-01, -1.9229e+00,  6.5493e-01,  ...,  1.8036e+00,
         -1.4422e-01, -2.3635e+00],
        [ 6.1564e-01, -1.9229e+00,  6.5493e-01,  ...,  1.7419e+00,
          5.2167e-01,  9.9094e-01],
        ...,
        [-8.6651e-01, -1.6680e-01,  2.3631e-01,  ..., -1.4425e+00,
          1.1541e+00, -3.8260e-01],
        [-2.3267e+00, -8.6029e-01,  1.2402e-01,  ..., -1.4425e+00,
          1.1541e+00, -3.8260e-01],
        [ 4.1086e-01,  1.4785e+00, -2.0320e+00,  ..., -1.4425e+00,
          1.1541e+00, -3.8260e-01]], device='cuda:0')
cur_s_vecs
torch.Size([222, 128])
pred_vecs
torch.Size([222, 128])
cur_o_vecs
torch.Size([222, 128])
cur_t_vecs
torch.Size([222, 384])
tensor([[ 0.0543,  0.0000,  3.3669,  ...,  0.7006,  1.4351,  0.0000],
        [ 0.3831,  0.0000,  2.6294,  ...,  0.0000,  1.9256,  0.0000],
        [ 0.3831,  0.0000,  2.6294,  ...,  0.7006,  1.4351,  0.0000],
        ...,
        [ 0.6883,  0.0000,  2.3076,  ...,  2.4380,  2.4166,  0.0000],
        [ 0.0149,  0.0000,  2.9350,  ...,  2.4380,  2.4166,  0.0000],
        [ 1.7456,  0.1156,  2.9581,  ...,  2.4380,  2.4166,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([222, 128])
pred_vecs
torch.Size([222, 128])
cur_o_vecs
torch.Size([222, 128])
cur_t_vecs
torch.Size([222, 384])
tensor([[ 0.8771,  0.7505,  0.3496,  ...,  1.4666,  0.6546,  0.1554],
        [ 1.1361,  0.5122,  0.0000,  ...,  1.4206,  0.3870,  0.0000],
        [ 1.1361,  0.5122,  0.0000,  ...,  1.4666,  0.6546,  0.1554],
        ...,
        [ 0.8098,  0.6720,  0.1099,  ...,  1.9162,  2.0100,  0.4775],
        [ 0.2313,  0.3708,  0.0301,  ...,  1.9162,  2.0100,  0.4775],
        [ 0.4134,  0.4618,  0.3460,  ...,  1.9162,  2.0100,  0.4775]], device='cuda:0')
cur_s_vecs
torch.Size([222, 128])
pred_vecs
torch.Size([222, 128])
cur_o_vecs
torch.Size([222, 128])
cur_t_vecs
torch.Size([222, 384])
tensor([[ 0.0000,  0.6602,  2.0681,  ...,  0.0000,  1.1075,  0.0000],
        [ 0.0000,  1.0207,  2.0876,  ...,  0.0000,  0.7301,  0.0000],
        [ 0.0000,  1.0207,  2.0876,  ...,  0.0000,  1.1075,  0.0000],
        ...,
        [ 0.0822,  0.3910,  1.6348,  ...,  0.3773,  0.5734,  0.0000],
        [ 0.0000,  0.8084,  1.7197,  ...,  0.3773,  0.5734,  0.0000],
        [ 0.0000,  0.8161,  1.8375,  ...,  0.3773,  0.5734,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([222, 128])
pred_vecs
torch.Size([222, 128])
cur_o_vecs
torch.Size([222, 128])
cur_t_vecs
torch.Size([222, 384])
tensor([[ 1.9250,  0.2357,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.9460,  0.3300,  0.0000,  ...,  0.3907,  0.0000,  0.4631],
        [ 1.9460,  0.3300,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 2.7868,  0.7832,  0.0000,  ...,  0.0550,  0.0000,  0.0000],
        [ 2.4852,  0.0000,  0.0000,  ...,  0.0550,  0.0000,  0.0000],
        [ 2.0823,  0.0199,  0.0000,  ...,  0.0550,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[-8.6650e-01, -1.6683e-01,  2.3628e-01,  ..., -1.7821e-01,
         -1.1741e+00,  4.7744e-01],
        [-8.6650e-01, -1.6683e-01,  2.3628e-01,  ..., -1.7821e-01,
         -1.1741e+00,  4.7744e-01],
        [ 7.1047e-01,  2.5051e-01,  2.0098e-01,  ..., -3.7389e-01,
          1.4111e-02,  6.9612e-01],
        ...,
        [ 9.4060e-01, -1.4328e+00, -2.1105e-03,  ..., -1.4424e+00,
          1.1540e+00, -3.8260e-01],
        [ 9.7724e-01, -1.9912e+00,  5.0792e-01,  ..., -1.4424e+00,
          1.1540e+00, -3.8260e-01],
        [ 1.2187e+00, -3.2994e-01,  1.6754e+00,  ..., -1.4424e+00,
          1.1540e+00, -3.8260e-01]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.0592,  0.0000,  1.6000,  ...,  0.7218,  2.0290,  0.0000],
        [ 0.0592,  0.0000,  1.6000,  ...,  0.7218,  2.0290,  0.0000],
        [ 0.0000,  0.6073,  2.7559,  ...,  1.2607,  1.0844,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.2954,  ...,  2.0763,  1.7363,  0.0000],
        [ 0.3313,  0.0000,  3.5885,  ...,  2.0763,  1.7363,  0.0000],
        [ 0.0000,  0.0000,  3.1823,  ...,  2.0763,  1.7363,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.0000,  0.7397,  0.2099,  ...,  1.3780,  0.8419,  0.2567],
        [ 0.0000,  0.7397,  0.2099,  ...,  1.3780,  0.8419,  0.2567],
        [ 0.8267,  0.8242,  0.2461,  ...,  1.6525,  0.5207,  0.0000],
        ...,
        [ 1.5656,  0.9166,  0.6779,  ...,  2.0709,  0.9118,  1.1078],
        [ 0.4749,  0.0000,  0.6115,  ...,  2.0709,  0.9118,  1.1078],
        [ 1.1265,  1.2479,  1.0363,  ...,  2.0709,  0.9118,  1.1078]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.0000,  0.7500,  1.8160,  ...,  0.0000,  0.9854,  0.0000],
        [ 0.0000,  0.7500,  1.8160,  ...,  0.0000,  0.9854,  0.0000],
        [ 0.0000,  0.5404,  2.0708,  ...,  0.0000,  1.1312,  0.0000],
        ...,
        [ 0.0000,  0.8273,  1.8792,  ...,  0.2390,  0.8088,  0.0000],
        [ 0.0000,  1.4382,  2.7240,  ...,  0.2390,  0.8088,  0.0000],
        [ 0.0000,  0.5323,  1.4783,  ...,  0.2390,  0.8088,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([231, 128])
pred_vecs
torch.Size([231, 128])
cur_o_vecs
torch.Size([231, 128])
cur_t_vecs
torch.Size([231, 384])
tensor([[ 2.3992,  0.0000,  0.0000,  ...,  0.0000,  0.0808,  0.0000],
        [ 2.3992,  0.0000,  0.0000,  ...,  0.0000,  0.0808,  0.0000],
        [ 2.4627,  0.5406,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 2.7154,  0.6180,  0.0000,  ...,  0.0000,  0.1931,  0.0000],
        [ 2.7112,  0.0517,  0.0000,  ...,  0.0000,  0.1931,  0.0000],
        [ 2.6815,  0.9517,  0.0000,  ...,  0.0000,  0.1931,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 4.1085e-01,  1.4785e+00, -2.0320e+00,  ...,  1.4914e+00,
          4.0313e-01,  1.1139e+00],
        [ 6.1572e-01, -1.9229e+00,  6.5494e-01,  ...,  8.8136e-01,
         -2.6284e-01,  1.0667e+00],
        [ 4.1085e-01,  1.4785e+00, -2.0320e+00,  ..., -2.8331e+00,
          1.8461e-01, -8.5817e-01],
        ...,
        [-2.6900e+00,  6.3587e-01, -6.3046e-01,  ..., -1.4424e+00,
          1.1540e+00, -3.8260e-01],
        [ 2.1203e+00,  2.0336e+00, -6.7856e-01,  ..., -1.4424e+00,
          1.1540e+00, -3.8260e-01],
        [ 1.2187e+00, -3.2995e-01,  1.6754e+00,  ..., -1.4424e+00,
          1.1540e+00, -3.8260e-01]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 1.5221,  0.0000,  2.4775,  ...,  0.2204,  2.2519,  0.0000],
        [ 0.5018,  0.0000,  2.6417,  ...,  0.2815,  1.1321,  0.0000],
        [ 1.5221,  0.0000,  2.4775,  ...,  0.0000,  2.4183,  0.0000],
        ...,
        [ 0.2977,  0.0000,  2.2182,  ...,  2.1248,  2.1339,  0.0000],
        [ 0.0000,  0.0000,  3.0590,  ...,  2.1248,  2.1339,  0.0000],
        [ 0.0000,  0.0000,  2.1332,  ...,  2.1248,  2.1339,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 0.2344,  0.5406,  0.3328,  ...,  1.5549,  0.0000,  0.3076],
        [ 1.0655,  0.5974,  0.0000,  ...,  1.3711,  0.5032,  0.0319],
        [ 0.2344,  0.5406,  0.3328,  ...,  1.6740,  0.0621,  0.0550],
        ...,
        [ 0.6799,  0.4564,  0.0000,  ...,  1.6211,  1.4540,  0.5908],
        [ 0.9923,  0.6300,  0.6216,  ...,  1.6211,  1.4540,  0.5908],
        [ 1.2437,  1.4002,  0.3697,  ...,  1.6211,  1.4540,  0.5908]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 0.0000,  0.6610,  1.9807,  ...,  0.0000,  1.2140,  0.0000],
        [ 0.0000,  1.2368,  2.4175,  ...,  0.1234,  0.2612,  0.0000],
        [ 0.0000,  0.6610,  1.9807,  ...,  0.2985,  1.1612,  0.0000],
        ...,
        [ 0.0000,  1.2164,  1.5704,  ...,  0.2434,  0.3268,  0.0000],
        [ 0.0000,  0.6532,  2.0205,  ...,  0.2434,  0.3268,  0.0000],
        [ 0.0000,  0.5927,  1.8086,  ...,  0.2434,  0.3268,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 1.9202,  0.0646,  0.0000,  ...,  0.0072,  0.0000,  0.0000],
        [ 2.4302,  0.5282,  0.0000,  ...,  0.5888,  0.0000,  0.0831],
        [ 1.9202,  0.0646,  0.0000,  ...,  0.0000,  0.0000,  0.1658],
        ...,
        [ 1.6423,  0.0000,  0.0000,  ...,  0.0000,  0.2918,  0.0000],
        [ 1.7669,  0.0780,  0.0000,  ...,  0.0000,  0.2918,  0.0000],
        [ 1.8024,  0.5387,  0.0000,  ...,  0.0000,  0.2918,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 7.1051e-01,  2.5055e-01,  2.0096e-01,  ..., -2.8331e+00,
          1.8461e-01, -8.5820e-01],
        [ 7.1051e-01,  2.5055e-01,  2.0096e-01,  ..., -2.8331e+00,
          1.8461e-01, -8.5820e-01],
        [ 6.1575e-01, -1.9229e+00,  6.5495e-01,  ...,  4.3348e-01,
          9.5410e-01, -5.3130e-01],
        ...,
        [-8.6649e-01, -1.6688e-01,  2.3620e-01,  ..., -1.4425e+00,
          1.1540e+00, -3.8261e-01],
        [ 2.7240e+00, -4.5139e-01,  3.9198e-01,  ..., -1.4425e+00,
          1.1540e+00, -3.8261e-01],
        [ 6.1575e-01, -1.9229e+00,  6.5495e-01,  ..., -1.4425e+00,
          1.1540e+00, -3.8261e-01]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.7335,  0.0308,  1.9495,  ...,  0.0000,  2.8770,  0.0000],
        [ 0.7335,  0.0308,  1.9495,  ...,  0.0000,  2.8770,  0.0000],
        [ 0.6639,  0.0000,  2.4658,  ...,  0.9681,  2.5419,  0.0000],
        ...,
        [ 0.1581,  0.0000,  2.1425,  ...,  2.4465,  2.0270,  0.0000],
        [ 0.7259,  0.0000,  2.1369,  ...,  2.4465,  2.0270,  0.0000],
        [ 0.0000,  0.0000,  2.5893,  ...,  2.4465,  2.0270,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.9452,  0.3887,  0.0996,  ...,  1.4427,  0.0000,  0.0755],
        [ 0.9452,  0.3887,  0.0996,  ...,  1.4427,  0.0000,  0.0755],
        [ 1.0590,  0.4168,  0.0000,  ...,  1.1331,  0.6485,  0.1197],
        ...,
        [ 0.8752,  0.5675,  0.0564,  ...,  1.7221,  1.8308,  0.9482],
        [ 0.3465,  0.1649,  0.3518,  ...,  1.7221,  1.8308,  0.9482],
        [ 1.3331,  0.4191,  0.0000,  ...,  1.7221,  1.8308,  0.9482]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.0000,  0.6283,  2.1400,  ...,  0.0000,  0.8629,  0.0000],
        [ 0.0000,  0.6283,  2.1400,  ...,  0.0000,  0.8629,  0.0000],
        [ 0.0000,  1.1714,  2.3487,  ...,  0.0000,  0.6518,  0.0000],
        ...,
        [ 0.0000,  0.7968,  1.8713,  ...,  0.5642,  0.6931,  0.0000],
        [ 0.0000,  1.2071,  2.6135,  ...,  0.5642,  0.6931,  0.0000],
        [ 0.0000,  0.6650,  2.1031,  ...,  0.5642,  0.6931,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 1.9482,  0.0522,  0.0000,  ...,  0.2434,  0.0000,  0.2306],
        [ 1.9482,  0.0522,  0.0000,  ...,  0.2434,  0.0000,  0.2306],
        [ 2.2562,  0.4472,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 2.1673,  0.0000,  0.0000,  ...,  0.0000,  0.3288,  0.0000],
        [ 2.6783,  0.0234,  0.0000,  ...,  0.0000,  0.3288,  0.0000],
        [ 2.6332,  0.6105,  0.0000,  ...,  0.0000,  0.3288,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[-8.6648e-01, -1.6690e-01,  2.3616e-01,  ..., -2.8331e+00,
          1.8462e-01, -8.5822e-01],
        [ 6.1579e-01, -1.9229e+00,  6.5496e-01,  ...,  6.1585e-01,
          1.2161e+00,  6.1394e-01],
        [-8.6648e-01, -1.6690e-01,  2.3616e-01,  ..., -3.9415e-01,
         -1.1458e+00, -8.9394e-01],
        ...,
        [-6.4232e-01,  5.3474e-01,  1.3880e-01,  ..., -1.4425e+00,
          1.1540e+00, -3.8261e-01],
        [-8.6648e-01, -1.6690e-01,  2.3616e-01,  ..., -1.4425e+00,
          1.1540e+00, -3.8261e-01],
        [-1.2824e+00, -7.9161e-01,  4.7012e-01,  ..., -1.4425e+00,
          1.1540e+00, -3.8261e-01]], device='cuda:0')
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[ 0.6612,  0.0000,  1.3526,  ...,  0.0000,  2.3158,  0.0000],
        [ 0.7843,  0.0000,  1.4990,  ...,  0.0000,  0.9610,  0.0000],
        [ 0.6612,  0.0000,  1.3526,  ...,  0.0000,  1.0692,  0.0000],
        ...,
        [ 0.8081,  0.0000,  2.4773,  ...,  2.0470,  2.1155,  0.0000],
        [ 0.0000,  0.0000,  1.9759,  ...,  2.0470,  2.1155,  0.0000],
        [ 0.3745,  0.2101,  2.9473,  ...,  2.0470,  2.1155,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[ 0.9506,  0.9542,  0.1670,  ...,  1.2255,  0.1563,  0.1682],
        [ 1.3225,  1.3056,  0.0000,  ...,  1.1012,  0.5152,  0.0000],
        [ 0.9506,  0.9542,  0.1670,  ...,  0.7261,  0.0000,  0.2464],
        ...,
        [ 1.1667,  0.0000,  0.0089,  ...,  1.8407,  1.9743,  0.5893],
        [ 1.1280,  1.0723,  0.0000,  ...,  1.8407,  1.9743,  0.5893],
        [ 1.5283,  0.1149,  0.0000,  ...,  1.8407,  1.9743,  0.5893]], device='cuda:0')
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[ 0.0000,  0.7055,  2.2327,  ...,  0.2477,  1.0550,  0.0000],
        [ 0.0000,  0.8807,  2.4200,  ...,  0.0000,  0.9675,  0.0000],
        [ 0.0000,  0.7055,  2.2327,  ...,  0.0000,  1.1239,  0.0000],
        ...,
        [ 0.0000,  1.0097,  2.0197,  ...,  0.1934,  0.4773,  0.0000],
        [ 0.0000,  0.4799,  1.5088,  ...,  0.1934,  0.4773,  0.0000],
        [ 0.0000,  0.6792,  1.9853,  ...,  0.1934,  0.4773,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[ 2.1500,  0.0031,  0.0000,  ...,  0.3545,  0.0000,  0.0000],
        [ 2.1017,  0.5978,  0.0000,  ...,  0.8038,  0.0000,  0.3777],
        [ 2.1500,  0.0031,  0.0000,  ...,  0.3120,  0.0000,  0.0000],
        ...,
        [ 2.7135,  0.0694,  0.0000,  ...,  0.1728,  0.3495,  0.0000],
        [ 2.6980,  0.6557,  0.0000,  ...,  0.1728,  0.3495,  0.0000],
        [ 2.3658,  0.3683,  0.0000,  ...,  0.1728,  0.3495,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 1.4549e+00,  1.4563e+00,  1.8795e+00,  ..., -2.8331e+00,
          1.8460e-01, -8.5822e-01],
        [ 1.4549e+00,  1.4563e+00,  1.8795e+00,  ..., -2.8331e+00,
          1.8460e-01, -8.5822e-01],
        [ 1.4549e+00,  1.4563e+00,  1.8795e+00,  ..., -2.8331e+00,
          1.8460e-01, -8.5822e-01],
        ...,
        [ 4.0497e-01,  3.2492e-01, -1.9941e+00,  ..., -1.4425e+00,
          1.1540e+00, -3.8263e-01],
        [-8.6648e-01, -1.6691e-01,  2.3614e-01,  ..., -1.4425e+00,
          1.1540e+00, -3.8263e-01],
        [ 2.6624e+00, -9.4891e-01,  1.4027e-01,  ..., -1.4425e+00,
          1.1540e+00, -3.8263e-01]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.8680,  0.0000,  3.2454,  ...,  1.3429,  2.3928,  0.0000],
        [ 0.4323,  0.0000,  3.1013,  ...,  1.3429,  2.3928,  0.0000],
        [ 0.4323,  0.0000,  3.1013,  ...,  1.3429,  2.3928,  0.0000],
        ...,
        [ 0.2048,  0.0000,  2.7468,  ...,  2.0217,  1.7735,  0.0000],
        [ 0.8610,  0.0000,  1.1615,  ...,  2.0217,  1.7735,  0.0000],
        [ 0.0000,  0.1685,  2.5073,  ...,  2.0217,  1.7735,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.0000,  0.3796,  0.5107,  ...,  1.6277,  2.0000,  0.4602],
        [ 0.7954,  0.7113,  0.5223,  ...,  1.6277,  2.0000,  0.4602],
        [ 0.7954,  0.7113,  0.5223,  ...,  1.6277,  2.0000,  0.4602],
        ...,
        [ 0.2720,  0.3718,  0.0000,  ...,  1.8044,  1.6334,  0.6422],
        [ 0.2977,  0.5987,  0.0000,  ...,  1.8044,  1.6334,  0.6422],
        [ 1.0039,  0.6450,  0.0000,  ...,  1.8044,  1.6334,  0.6422]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.0000,  1.3965,  3.2617,  ...,  0.1913,  1.6673,  0.0000],
        [ 0.0000,  1.3319,  2.7099,  ...,  0.1913,  1.6673,  0.0000],
        [ 0.0000,  1.3319,  2.7099,  ...,  0.1913,  1.6673,  0.0000],
        ...,
        [ 0.0000,  0.8334,  2.1544,  ...,  0.2807,  0.3182,  0.0000],
        [ 0.0000,  0.6987,  2.5338,  ...,  0.2807,  0.3182,  0.0000],
        [ 0.0000,  0.7332,  2.2890,  ...,  0.2807,  0.3182,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([249, 128])
pred_vecs
torch.Size([249, 128])
cur_o_vecs
torch.Size([249, 128])
cur_t_vecs
torch.Size([249, 384])
tensor([[ 2.8467,  0.0565,  0.0000,  ...,  0.0000,  0.0474,  0.0000],
        [ 2.4258,  0.1884,  0.0000,  ...,  0.0000,  0.0474,  0.0000],
        [ 2.4258,  0.1884,  0.0000,  ...,  0.0000,  0.0474,  0.0000],
        ...,
        [ 2.2090,  0.2065,  0.0000,  ...,  0.0000,  0.3968,  0.0000],
        [ 3.3252,  0.2485,  0.0000,  ...,  0.0000,  0.3968,  0.0000],
        [ 2.3330,  0.4598,  0.0000,  ...,  0.0000,  0.3968,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[-5.5315e-02, -3.7297e-01, -1.2111e+00,  ..., -3.7396e-01,
          1.4024e-02,  6.9609e-01],
        [ 2.7240e+00, -4.5143e-01,  3.9202e-01,  ..., -9.9465e-01,
          4.6876e-01, -1.4937e-01],
        [ 1.4345e+00, -5.8319e-01,  2.7255e-01,  ..., -1.2064e+00,
          9.8366e-01,  2.7097e-01],
        ...,
        [ 6.1586e-01, -1.9229e+00,  6.5498e-01,  ..., -1.4424e+00,
          1.1540e+00, -3.8265e-01],
        [-2.9782e-01,  1.8388e+00,  1.0862e+00,  ..., -1.4424e+00,
          1.1540e+00, -3.8265e-01],
        [-2.7076e-01,  1.7842e-02, -8.8076e-01,  ..., -1.4424e+00,
          1.1540e+00, -3.8265e-01]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.0000,  0.0000,  2.6564,  ...,  0.0000,  2.0225,  0.0000],
        [ 0.6160,  0.5512,  2.4832,  ...,  0.1025,  1.7165,  0.0000],
        [ 0.0000,  0.0000,  3.5186,  ...,  0.0000,  1.5215,  0.0000],
        ...,
        [ 0.3772,  0.0000,  1.5284,  ...,  2.2286,  2.5092,  0.0000],
        [ 0.2132,  0.0000,  2.1066,  ...,  2.2286,  2.5092,  0.0000],
        [ 0.3823,  0.0000,  2.2003,  ...,  2.2286,  2.5092,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.9886,  0.9592,  0.0290,  ...,  1.3498,  0.7878,  0.0000],
        [ 1.0023,  0.4770,  0.1108,  ...,  1.6905,  0.4247,  0.0000],
        [ 1.0908,  0.4101,  0.4992,  ...,  1.3827,  0.1926,  0.0000],
        ...,
        [ 1.1686,  0.2116,  0.0000,  ...,  1.8520,  1.9939,  0.6035],
        [ 0.6236,  0.7881,  0.0000,  ...,  1.8520,  1.9939,  0.6035],
        [ 0.7873,  0.5054,  0.0000,  ...,  1.8520,  1.9939,  0.6035]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.0000,  1.0982,  1.6535,  ...,  0.0000,  0.5969,  0.0000],
        [ 0.0000,  1.2366,  1.9940,  ...,  0.0513,  0.4202,  0.0000],
        [ 0.0000,  0.6005,  1.9477,  ...,  0.0000,  0.7939,  0.0000],
        ...,
        [ 0.0000,  1.2608,  2.4497,  ...,  0.3634,  0.6309,  0.0000],
        [ 0.0000,  0.4946,  1.8284,  ...,  0.3634,  0.6309,  0.0000],
        [ 0.0000,  1.0409,  1.7974,  ...,  0.3634,  0.6309,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[ 1.9339,  0.4830,  0.0000,  ...,  0.6784,  0.0000,  0.0219],
        [ 1.9785,  0.3086,  0.0000,  ...,  0.5677,  0.0000,  0.0000],
        [ 2.0130,  0.2788,  0.0000,  ...,  0.4965,  0.0000,  0.0000],
        ...,
        [ 2.7946,  0.4456,  0.0000,  ...,  0.1131,  0.1088,  0.0000],
        [ 1.9753,  0.3192,  0.0000,  ...,  0.1131,  0.1088,  0.0000],
        [ 1.8349,  0.4402,  0.0000,  ...,  0.1131,  0.1088,  0.0000]], device='cuda:0')
t = 40 / 1000000
 G [bbox_pred]: 0.4754
 G [L1_pixel_loss]: 1.0221
 G [total_loss]: 1.8208
 G [g_gan_obj_loss]: 0.0072
 G [g_gan_img_loss]: 0.0077
 G [ac_loss]: 0.3083
 D_obj [d_ac_loss_real]: 3.1878
 D_obj [d_ac_loss_fake]: 3.0832
 D_obj [d_obj_gan_loss]: 1.3075
 D_img [d_img_gan_loss]: 1.3243
cur_s_vecs
torch.Size([229, 128])
pred_vecs
torch.Size([229, 128])
cur_o_vecs
torch.Size([229, 128])
cur_t_vecs
torch.Size([229, 384])
tensor([[-2.3050e+00, -1.1129e+00,  2.5421e-01,  ...,  1.1242e-01,
          8.4160e-02, -1.6486e+00],
        [-2.3050e+00, -1.1129e+00,  2.5421e-01,  ...,  6.1585e-01,
          1.2161e+00,  6.1391e-01],
        [-2.3050e+00, -1.1129e+00,  2.5421e-01,  ...,  6.1585e-01,
          1.2161e+00,  6.1391e-01],
        ...,
        [ 5.5590e-01, -5.0376e-01,  4.2184e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8268e-01],
        [-8.6649e-01, -1.6689e-01,  2.3613e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8268e-01],
        [ 9.8863e-01,  4.2618e-01, -1.6326e+00,  ..., -1.4424e+00,
          1.1539e+00, -3.8268e-01]], device='cuda:0')
cur_s_vecs
torch.Size([229, 128])
pred_vecs
torch.Size([229, 128])
cur_o_vecs
torch.Size([229, 128])
cur_t_vecs
torch.Size([229, 384])
tensor([[ 0.6062,  0.0000,  2.9437,  ...,  1.0579,  2.1305,  0.0000],
        [ 0.6062,  0.0000,  2.9437,  ...,  0.3488,  1.3899,  0.0000],
        [ 0.6062,  0.0000,  2.9437,  ...,  0.3488,  1.3899,  0.0000],
        ...,
        [ 0.0000,  0.0000,  3.3908,  ...,  2.2473,  2.9153,  0.0000],
        [ 0.0000,  0.0000,  2.7026,  ...,  2.2473,  2.9153,  0.0000],
        [ 0.0000,  0.0000,  2.5881,  ...,  2.2473,  2.9153,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([229, 128])
pred_vecs
torch.Size([229, 128])
cur_o_vecs
torch.Size([229, 128])
cur_t_vecs
torch.Size([229, 384])
tensor([[ 0.9514,  0.8760,  0.2695,  ...,  1.3704,  0.5234,  0.1390],
        [ 0.9514,  0.8760,  0.2695,  ...,  1.9461,  0.4668,  0.6237],
        [ 0.9514,  0.8760,  0.2695,  ...,  1.9461,  0.4668,  0.6237],
        ...,
        [ 1.1387,  0.4544,  0.0000,  ...,  2.0574,  1.4859,  0.7912],
        [ 0.2497,  0.0000,  0.0000,  ...,  2.0574,  1.4859,  0.7912],
        [ 1.0745,  0.3846,  0.0992,  ...,  2.0574,  1.4859,  0.7912]], device='cuda:0')
cur_s_vecs
torch.Size([229, 128])
pred_vecs
torch.Size([229, 128])
cur_o_vecs
torch.Size([229, 128])
cur_t_vecs
torch.Size([229, 384])
tensor([[ 0.0000,  0.8229,  1.9854,  ...,  0.0000,  0.9033,  0.0000],
        [ 0.0000,  0.8229,  1.9854,  ...,  0.0000,  1.1543,  0.0000],
        [ 0.0000,  0.8229,  1.9854,  ...,  0.0000,  1.1543,  0.0000],
        ...,
        [ 0.0000,  0.5506,  1.6976,  ...,  0.0558,  0.6274,  0.0000],
        [ 0.0000,  1.2077,  2.7157,  ...,  0.0558,  0.6274,  0.0000],
        [ 0.0000,  0.8018,  1.1588,  ...,  0.0558,  0.6274,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([229, 128])
pred_vecs
torch.Size([229, 128])
cur_o_vecs
torch.Size([229, 128])
cur_t_vecs
torch.Size([229, 384])
tensor([[ 1.9720,  0.0311,  0.0000,  ...,  0.2614,  0.0000,  0.0000],
        [ 1.9720,  0.0311,  0.0000,  ...,  0.1015,  0.0000,  0.0000],
        [ 1.9720,  0.0311,  0.0000,  ...,  0.1015,  0.0000,  0.0000],
        ...,
        [ 2.1566,  0.4763,  0.0000,  ...,  0.0000,  0.5613,  0.0000],
        [ 3.2185,  0.6163,  0.0000,  ...,  0.0000,  0.5613,  0.0000],
        [ 1.8634,  0.3532,  0.0000,  ...,  0.0000,  0.5613,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[-8.6650e-01, -1.6689e-01,  2.3613e-01,  ...,  1.0867e+00,
          2.7679e-01, -1.7420e+00],
        [ 9.4035e-01, -1.4325e+00, -2.2145e-03,  ..., -9.6654e-01,
          4.7546e-01, -6.4608e-01],
        [-8.6650e-01, -1.6689e-01,  2.3613e-01,  ...,  1.0867e+00,
          2.7679e-01, -1.7420e+00],
        ...,
        [ 2.9292e+00,  1.9589e-01,  2.8144e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8270e-01],
        [-8.6650e-01, -1.6689e-01,  2.3613e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8270e-01],
        [ 2.9292e+00,  1.9589e-01,  2.8144e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8270e-01]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.0906,  0.0000,  0.4299,  ...,  0.0000,  1.5745,  0.0000],
        [ 0.7393,  0.0000,  1.7980,  ...,  0.4222,  1.0652,  0.0000],
        [ 0.0906,  0.0000,  0.4299,  ...,  0.0000,  1.5745,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.6835,  ...,  2.1771,  2.6287,  0.0000],
        [ 0.0000,  0.0000,  2.4448,  ...,  2.1771,  2.6287,  0.0000],
        [ 0.0000,  0.0000,  3.1819,  ...,  2.1771,  2.6287,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[ 1.0013,  1.0136,  0.0000,  ...,  1.3941,  0.0815,  0.0681],
        [ 0.9656,  1.1828,  0.1226,  ...,  1.2875,  0.0000,  0.2845],
        [ 1.0013,  1.0136,  0.0000,  ...,  1.3941,  0.0815,  0.0681],
        ...,
        [ 0.7056,  0.7912,  0.3839,  ...,  1.1305,  1.0380,  0.8590],
        [ 0.8752,  0.8304,  0.0000,  ...,  1.1305,  1.0380,  0.8590],
        [ 0.9197,  0.7350,  0.2057,  ...,  1.1305,  1.0380,  0.8590]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.0000,  0.5298,  2.4489,  ...,  0.0000,  1.1955,  0.0000],
        [ 0.1482,  0.3847,  1.6387,  ...,  0.0000,  0.5934,  0.0000],
        [ 0.0000,  0.5298,  2.4489,  ...,  0.0000,  1.1955,  0.0000],
        ...,
        [ 0.0000,  0.7237,  1.7296,  ...,  0.7449,  0.7383,  0.0000],
        [ 0.0000,  0.8061,  1.7685,  ...,  0.7449,  0.7383,  0.0000],
        [ 0.0000,  0.7082,  1.6198,  ...,  0.7449,  0.7383,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[ 2.9226,  0.1938,  0.0000,  ...,  0.3016,  0.0000,  0.0000],
        [ 2.1680,  0.5286,  0.0000,  ...,  0.7317,  0.0000,  0.0000],
        [ 2.9226,  0.1938,  0.0000,  ...,  0.3016,  0.0000,  0.0000],
        ...,
        [ 1.7951,  0.2756,  0.0000,  ...,  0.0000,  0.2535,  0.0000],
        [ 1.9060,  0.0819,  0.0000,  ...,  0.0000,  0.2535,  0.0000],
        [ 1.7417,  0.4432,  0.0000,  ...,  0.0000,  0.2535,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([227, 128])
pred_vecs
torch.Size([227, 128])
cur_o_vecs
torch.Size([227, 128])
cur_t_vecs
torch.Size([227, 384])
tensor([[ 2.0461e-01, -6.2960e-01,  6.5575e-01,  ..., -1.8745e+00,
          8.0660e-01, -1.2541e+00],
        [ 7.7902e-01, -1.0547e+00, -1.0576e+00,  ...,  6.1586e-01,
          1.2161e+00,  6.1389e-01],
        [-8.6651e-01, -1.6688e-01,  2.3612e-01,  ..., -1.8745e+00,
          8.0660e-01, -1.2541e+00],
        ...,
        [-2.6902e+00,  6.3617e-01, -6.3048e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8271e-01],
        [-8.6651e-01, -1.6688e-01,  2.3612e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8271e-01],
        [ 1.2187e+00, -3.3001e-01,  1.6752e+00,  ..., -1.4424e+00,
          1.1539e+00, -3.8271e-01]], device='cuda:0')
cur_s_vecs
torch.Size([227, 128])
pred_vecs
torch.Size([227, 128])
cur_o_vecs
torch.Size([227, 128])
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.1211,  0.0000,  2.1555,  ...,  0.3115,  1.5920,  0.0000],
        [ 0.2006,  0.0000,  1.8358,  ...,  0.0000,  0.9735,  0.0000],
        [ 0.6757,  0.0000,  1.5372,  ...,  0.3115,  1.5920,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.0878,  ...,  2.0667,  2.1131,  0.0000],
        [ 1.0973,  0.0000,  2.0808,  ...,  2.0667,  2.1131,  0.0000],
        [ 0.0000,  0.2066,  1.8875,  ...,  2.0667,  2.1131,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([227, 128])
pred_vecs
torch.Size([227, 128])
cur_o_vecs
torch.Size([227, 128])
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  0.8188,  0.0000,  ...,  1.3440,  0.4964,  0.1445],
        [ 1.1447,  0.9846,  0.0000,  ...,  0.4301,  0.9329,  0.1616],
        [ 0.4394,  0.9436,  0.0000,  ...,  1.3440,  0.4964,  0.1445],
        ...,
        [ 0.5667,  0.7810,  0.0000,  ...,  1.5436,  1.5887,  0.6202],
        [ 0.8805,  0.5408,  0.0557,  ...,  1.5436,  1.5887,  0.6202],
        [ 0.9511,  1.2811,  0.3617,  ...,  1.5436,  1.5887,  0.6202]], device='cuda:0')
cur_s_vecs
torch.Size([227, 128])
pred_vecs
torch.Size([227, 128])
cur_o_vecs
torch.Size([227, 128])
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  0.7555,  2.3431,  ...,  0.0000,  0.8748,  0.0000],
        [ 0.0000,  0.3147,  1.8342,  ...,  0.0000,  0.7438,  0.0000],
        [ 0.0124,  0.9893,  1.8963,  ...,  0.0000,  0.8748,  0.0000],
        ...,
        [ 0.0000,  0.3770,  1.8949,  ...,  0.2396,  0.5609,  0.0000],
        [ 0.0000,  0.9742,  2.2946,  ...,  0.2396,  0.5609,  0.0000],
        [ 0.0000,  0.6009,  1.7490,  ...,  0.2396,  0.5609,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([227, 128])
pred_vecs
torch.Size([227, 128])
cur_o_vecs
torch.Size([227, 128])
cur_t_vecs
torch.Size([227, 384])
tensor([[ 2.2632,  0.7013,  0.0000,  ...,  0.1986,  0.0000,  0.0000],
        [ 1.8815,  0.3648,  0.0000,  ...,  0.6378,  0.0000,  0.3025],
        [ 1.8491,  0.2204,  0.0000,  ...,  0.1986,  0.0000,  0.0000],
        ...,
        [ 2.5960,  0.6187,  0.0000,  ...,  0.1811,  0.3793,  0.0000],
        [ 2.7890,  0.0222,  0.0000,  ...,  0.1811,  0.3793,  0.0000],
        [ 2.3941,  0.4140,  0.0000,  ...,  0.1811,  0.3793,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([46, 128])
pred_vecs
torch.Size([46, 128])
cur_o_vecs
torch.Size([46, 128])
cur_t_vecs
torch.Size([46, 384])
tensor([[ 2.9701e-01, -6.5259e-01, -1.2016e-01,  ...,  8.1899e-01,
          7.3572e-01,  1.6565e+00],
        [ 2.3081e-01, -7.2241e-01,  4.8058e-01,  ..., -1.1890e+00,
          1.8208e+00,  4.7364e-01],
        [ 2.9701e-01, -6.5259e-01, -1.2016e-01,  ...,  8.1899e-01,
          7.3572e-01,  1.6565e+00],
        ...,
        [-8.6652e-01, -1.6688e-01,  2.3609e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8272e-01],
        [ 9.4030e-01, -1.4325e+00, -2.2669e-03,  ..., -1.4424e+00,
          1.1539e+00, -3.8272e-01],
        [ 6.1601e-01, -1.9229e+00,  6.5503e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8272e-01]], device='cuda:0')
cur_s_vecs
torch.Size([46, 128])
pred_vecs
torch.Size([46, 128])
cur_o_vecs
torch.Size([46, 128])
cur_t_vecs
torch.Size([46, 384])
tensor([[ 0.4314,  0.0000,  2.2886,  ...,  0.0405,  2.1676,  0.0000],
        [ 0.0000,  0.0000,  2.1210,  ...,  0.2473,  1.7936,  0.0000],
        [ 0.4314,  0.0000,  2.2886,  ...,  0.0405,  2.1676,  0.0000],
        ...,
        [ 0.3444,  0.0000,  1.0062,  ...,  1.8404,  1.7186,  0.0000],
        [ 0.8574,  0.1160,  2.0795,  ...,  1.8404,  1.7186,  0.0000],
        [ 0.0000,  0.0000,  2.5157,  ...,  1.8404,  1.7186,  0.0000]], device='cuda:0')207573a
520389c
167074b
244122d
529944e
107108a
581061b
113019c
480576d
282978b
573149e
81035b
550278a
230570b
308295c
396369b
131374d
173814c
6710a
84815e
557434a
459208b
443086d
312359c
393647a
511143a
308803a
224629e
546261e
43742e
22658d
101877c
310518e
570579a
254589a
257713b
90869b
169395c
525273e
502557d
560563d
299643b
176726c
320537b
113619d
75362a
457086c
103558b
359164c
216026b
4761e
455877a
208347b
416188a
331302b
323479a
185963c
293576a
160152a
388923b
102834e
187803e
323129a
313608d
139789e
2477b
507148b
569174b
103582a
163829e
488583b
346915c
71631c
144371b
174303b
332292c
245242c
237859c
101426a
153574c
47774c
457448d
438267e
233112e
189187a
336854d
66309b
23176c
288313e
500982b
531778b
152245e
76802b
488980a
5383d
557408d
455902d
269015d
478805d
329151a
107620e
297009a
409754e
91263a
132860e
554319c
485064e
213530e
462929c
545929c
215612c
322121b
146120b
412992d
61202b
533452e
306127c
102421d
344025a
452459c
170687a
191690d
58979c
327536c
188498c
522235a
43171d
278899b
159403e
569602c
572147e
127750c
78286b
126204e
285357c
412384d
246099a
549098e
241178a
30958c
576526e
522489d
517417b
288921b
408946a
109568a
18155c
567305a
493485a
245534b
324740d
210266a
189648b
89707e
217991b
39360d
150354d
389772d
477468a
572042e
364571b
277346a
84896e
302576c
243796d
6421c
365027d
261664e
4764e
553401b
233869d
104537e
197029b
521995d
444399d
515300d
529352e
177381e
377278b
163412b
47909e
20087d
431997e
208267a
154597e
566547e
119761c
545257e
223420c
349527d
189033e
432627d
150594d
53464b
327413b
121172a
400848e
349153c
518918b
355175a
31442c
577712e
459110b
183539b
137339b
578119d
353982b
472320a
540926b
400850e
474105b
346724d
13576e
295491a
414212a
552461b
363190c
195894e
92107d
327813a
324611a
274424a
295693b
463168c
134413c
276694e
438899c
259853a
42704a
11690a
454044a
142587b
194050c
404395b
509267e
466134b
385540c
13595b
49286d
173565d
522704b
85549b
568677b
37291d
250724b
404271d
10138e
218886e
367605a
340897e
217720d
285651a
426880c
238712c
505642a
543224b
289100a
390298c
441816e
330954d
157356a
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
354938e
524924d
494795d
10082e
217135c
134849b
126808e
167995e
88325e
159199a
96728b
555800d
485368b
103575d
242167b
20291d
400999a
60378b
6075a
28349d
310564d
295850e
260109a
397938a
283809a
248591a
39716b
367442b
257951c
71737d
110777e
21531c
302397b
97170c
279345a
535265c
134597e
468751d
14798d
102609d
316353e
26747c
165299d
96067b
84034b
214873b
167126b
24026a
485491e
208585b
392476a
127450a
52324b
168417b
3001a
59582d
428304c
171309a
132516a
289172d
221633e
509514e
491558e
135989c
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_s_vecs
torch.Size([46, 128])
pred_vecs
torch.Size([46, 128])
cur_o_vecs
torch.Size([46, 128])
cur_t_vecs
torch.Size([46, 384])
tensor([[ 0.6176,  1.1592,  0.1416,  ...,  2.0325,  0.8176,  0.0502],
        [ 0.9587,  0.7207,  0.1177,  ...,  1.1835,  0.4018,  0.1425],
        [ 0.6176,  1.1592,  0.1416,  ...,  2.0325,  0.8176,  0.0502],
        ...,
        [ 0.5239,  0.6409,  0.0000,  ...,  1.6993,  2.0652,  0.6563],
        [ 1.1727,  0.6647,  0.0000,  ...,  1.6993,  2.0652,  0.6563],
        [ 0.6265,  0.6386,  0.1140,  ...,  1.6993,  2.0652,  0.6563]], device='cuda:0')
cur_s_vecs
torch.Size([46, 128])
pred_vecs
torch.Size([46, 128])
cur_o_vecs
torch.Size([46, 128])
cur_t_vecs
torch.Size([46, 384])
tensor([[ 0.0000,  0.8217,  2.9454,  ...,  0.0000,  1.1568,  0.0000],
        [ 0.0000,  0.6745,  1.9821,  ...,  0.0000,  0.7203,  0.0000],
        [ 0.0000,  0.8217,  2.9454,  ...,  0.0000,  1.1568,  0.0000],
        ...,
        [ 0.0000,  0.7092,  2.1265,  ...,  0.2902,  0.4976,  0.0000],
        [ 0.0000,  0.5453,  1.9317,  ...,  0.2902,  0.4976,  0.0000],
        [ 0.0000,  0.3614,  2.1953,  ...,  0.2902,  0.4976,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([46, 128])
pred_vecs
torch.Size([46, 128])
cur_o_vecs
torch.Size([46, 128])
cur_t_vecs
torch.Size([46, 384])
tensor([[ 2.7748,  0.4315,  0.0000,  ...,  0.0000,  0.0031,  0.0000],
        [ 2.3343,  0.5213,  0.0000,  ...,  0.5658,  0.0000,  0.0000],
        [ 2.7748,  0.4315,  0.0000,  ...,  0.0000,  0.0031,  0.0000],
        ...,
        [ 2.6739,  0.0000,  0.0000,  ...,  0.0317,  0.5049,  0.0000],
        [ 2.4632,  0.4403,  0.0000,  ...,  0.0317,  0.5049,  0.0000],
        [ 2.4644,  0.2377,  0.0000,  ...,  0.0317,  0.5049,  0.0000]], device='cuda:0')
Starting epoch 5
cur_s_vecs
torch.Size([221, 128])
pred_vecs
torch.Size([221, 128])
cur_o_vecs
torch.Size([221, 128])
cur_t_vecs
torch.Size([221, 384])
tensor([[-2.3049e+00, -1.1127e+00,  2.5418e-01,  ...,  1.1262e-01,
          8.4127e-02, -1.6484e+00],
        [-2.6902e+00,  6.3620e-01, -6.3049e-01,  ...,  6.1586e-01,
          1.2161e+00,  6.1388e-01],
        [-8.6652e-01, -1.6690e-01,  2.3607e-01,  ...,  1.1262e-01,
          8.4127e-02, -1.6484e+00],
        ...,
        [ 2.9697e-01, -6.5263e-01, -1.2023e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8272e-01],
        [ 1.4344e+00, -5.8315e-01,  2.7270e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8272e-01],
        [ 2.3072e-01, -7.2236e-01,  4.8065e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8272e-01]], device='cuda:0')
cur_s_vecs
torch.Size([221, 128])
pred_vecs
torch.Size([221, 128])
cur_o_vecs
torch.Size([221, 128])
cur_t_vecs
torch.Size([221, 384])
tensor([[ 1.3003,  0.0000,  2.2774,  ...,  0.4107,  2.1635,  0.0000],
        [ 0.1105,  0.0000,  1.9317,  ...,  0.0000,  1.7983,  0.0000],
        [ 0.1161,  0.0000,  1.9170,  ...,  0.4107,  2.1635,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.7212,  ...,  2.2239,  2.0933,  0.0000],
        [ 0.0000,  0.0000,  3.9709,  ...,  2.2239,  2.0933,  0.0000],
        [ 0.7542,  0.0000,  2.3466,  ...,  2.2239,  2.0933,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([221, 128])
pred_vecs
torch.Size([221, 128])
cur_o_vecs
torch.Size([221, 128])
cur_t_vecs
torch.Size([221, 384])
tensor([[ 0.8914,  0.5365,  0.0298,  ...,  0.8943,  0.5846,  0.0514],
        [ 0.7448,  0.5706,  0.0000,  ...,  1.2027,  0.5484,  0.1950],
        [ 0.7618,  0.4429,  0.1318,  ...,  0.8943,  0.5846,  0.0514],
        ...,
        [ 0.7462,  0.4593,  0.2376,  ...,  2.1687,  1.6863,  0.5839],
        [ 0.7958,  0.5907,  0.0000,  ...,  2.1687,  1.6863,  0.5839],
        [ 0.7941,  0.1032,  0.0000,  ...,  2.1687,  1.6863,  0.5839]], device='cuda:0')
cur_s_vecs
torch.Size([221, 128])
pred_vecs
torch.Size([221, 128])
cur_o_vecs
torch.Size([221, 128])
cur_t_vecs
torch.Size([221, 384])
tensor([[ 0.0000,  1.2446,  2.8911,  ...,  0.0000,  0.7078,  0.0000],
        [ 0.0000,  0.4336,  1.8059,  ...,  0.0000,  0.6620,  0.0000],
        [ 0.0000,  0.7325,  2.0228,  ...,  0.0000,  0.7078,  0.0000],
        ...,
        [ 0.0000,  0.9534,  1.5710,  ...,  0.0000,  0.5313,  0.0000],
        [ 0.0000,  0.4596,  1.7202,  ...,  0.0000,  0.5313,  0.0000],
        [ 0.0000,  0.6159,  2.3383,  ...,  0.0000,  0.5313,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([221, 128])
pred_vecs
torch.Size([221, 128])
cur_o_vecs
torch.Size([221, 128])
cur_t_vecs
torch.Size([221, 384])
tensor([[ 2.8364,  0.3098,  0.0000,  ...,  0.5485,  0.0000,  0.0000],
        [ 1.9234,  0.2131,  0.0000,  ...,  0.6600,  0.0000,  0.0378],
        [ 2.1305,  0.3803,  0.0000,  ...,  0.5485,  0.0000,  0.0000],
        ...,
        [ 2.0198,  0.4989,  0.0000,  ...,  0.0000,  0.5293,  0.0000],
        [ 1.9743,  0.2013,  0.0000,  ...,  0.0000,  0.5293,  0.0000],
        [ 2.4292,  0.7085,  0.0000,  ...,  0.0000,  0.5293,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[-1.6386e+00, -5.3016e-02,  4.5501e-01,  ..., -1.6993e-01,
         -1.2385e+00, -1.5371e+00],
        [-6.4215e-01,  5.3470e-01,  1.3882e-01,  ..., -2.1134e+00,
          4.5548e-01,  1.3511e-01],
        [-1.6386e+00, -5.3016e-02,  4.5501e-01,  ...,  6.4888e-01,
          2.1316e+00,  7.4353e-01],
        ...,
        [ 2.5854e+00,  9.7414e-01, -7.5345e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8273e-01],
        [-8.6652e-01, -1.6693e-01,  2.3604e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8273e-01],
        [ 9.4026e-01, -1.4323e+00, -2.2557e-03,  ..., -1.4424e+00,
          1.1539e+00, -3.8273e-01]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.9976,  0.0000,  2.0316,  ...,  0.1819,  0.9907,  0.0000],
        [ 0.2168,  0.0000,  2.1474,  ...,  1.0316,  1.5601,  0.0000],
        [ 0.9976,  0.0000,  2.0316,  ...,  0.4789,  1.5293,  0.0000],
        ...,
        [ 0.2091,  0.0000,  1.6055,  ...,  1.7332,  1.5917,  0.0000],
        [ 0.2329,  0.0000,  1.8900,  ...,  1.7332,  1.5917,  0.0000],
        [ 0.9973,  0.0000,  3.0633,  ...,  1.7332,  1.5917,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.2544,  0.2972,  0.0000,  ...,  1.2870,  0.3193,  0.5028],
        [ 1.0921,  0.4522,  0.1951,  ...,  1.2181,  0.3667,  0.0649],
        [ 0.2544,  0.2972,  0.0000,  ...,  0.9656,  0.0000,  0.0363],
        ...,
        [ 0.7222,  0.9776,  0.0246,  ...,  1.8874,  1.9330,  0.4769],
        [ 0.8577,  0.4236,  0.0000,  ...,  1.8874,  1.9330,  0.4769],
        [ 1.0459,  0.9206,  0.1249,  ...,  1.8874,  1.9330,  0.4769]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.0000,  0.8800,  2.4258,  ...,  0.0000,  1.0642,  0.0000],
        [ 0.0000,  0.5434,  1.6304,  ...,  0.0000,  0.4510,  0.0000],
        [ 0.0000,  0.8800,  2.4258,  ...,  0.0000,  0.8663,  0.0000],
        ...,
        [ 0.0000,  0.7972,  2.4991,  ...,  0.3039,  0.6429,  0.0000],
        [ 0.0000,  0.7029,  1.9254,  ...,  0.3039,  0.6429,  0.0000],
        [ 0.0000,  0.2113,  1.7223,  ...,  0.3039,  0.6429,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[ 2.3807,  0.0000,  0.0000,  ...,  0.5922,  0.0000,  0.0000],
        [ 2.1310,  0.3915,  0.0000,  ...,  0.2489,  0.0000,  0.0000],
        [ 2.3807,  0.0000,  0.0000,  ...,  0.5593,  0.0000,  0.0000],
        ...,
        [ 2.6400,  0.6641,  0.0000,  ...,  0.0000,  0.3789,  0.0000],
        [ 2.0522,  0.2727,  0.0000,  ...,  0.0000,  0.3789,  0.0000],
        [ 2.1654,  0.4376,  0.0000,  ...,  0.0000,  0.3789,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([240, 128])
pred_vecs
torch.Size([240, 128])
cur_o_vecs
torch.Size([240, 128])
cur_t_vecs
torch.Size([240, 384])
tensor([[ 6.1618e-01, -1.9229e+00,  6.5511e-01,  ...,  1.8038e+00,
         -1.4481e-01, -2.3641e+00],
        [-8.6653e-01, -1.6696e-01,  2.3603e-01,  ...,  1.8038e+00,
         -1.4481e-01, -2.3641e+00],
        [ 6.1618e-01, -1.9229e+00,  6.5511e-01,  ...,  6.1587e-01,
          1.2161e+00,  6.1389e-01],
        ...,
        [-6.4213e-01,  5.3470e-01,  1.3881e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8274e-01],
        [ 5.9672e-01, -2.6362e-01, -1.7056e+00,  ..., -1.4424e+00,
          1.1539e+00, -3.8274e-01],
        [ 3.4973e-01,  3.4845e-01,  3.0764e-02,  ..., -1.4424e+00,
          1.1539e+00, -3.8274e-01]], device='cuda:0')
cur_s_vecs
torch.Size([240, 128])
pred_vecs
torch.Size([240, 128])
cur_o_vecs
torch.Size([240, 128])
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.9328,  0.0000,  2.1123,  ...,  0.5034,  1.9304,  0.0000],
        [ 0.0000,  0.0000,  1.9005,  ...,  0.5034,  1.9304,  0.0000],
        [ 0.9328,  0.0000,  2.1123,  ...,  0.0000,  2.2975,  0.0000],
        ...,
        [ 0.7854,  0.0000,  2.0717,  ...,  2.0748,  2.6496,  0.0000],
        [ 0.6481,  0.0000,  1.6395,  ...,  2.0748,  2.6496,  0.0000],
        [ 0.0000,  0.0000,  2.5610,  ...,  2.0748,  2.6496,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([240, 128])
pred_vecs
torch.Size([240, 128])
cur_o_vecs
torch.Size([240, 128])
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.6230,  0.1921,  0.0000,  ...,  1.4219,  0.8114,  0.0857],
        [ 0.8767,  0.8858,  0.0000,  ...,  1.4219,  0.8114,  0.0857],
        [ 0.6230,  0.1921,  0.0000,  ...,  1.1063,  0.9044,  0.3496],
        ...,
        [ 1.5084,  0.0327,  0.3440,  ...,  1.7745,  1.5983,  0.3311],
        [ 0.3935,  0.7850,  0.0000,  ...,  1.7745,  1.5983,  0.3311],
        [ 1.4256,  1.0986,  0.0000,  ...,  1.7745,  1.5983,  0.3311]], device='cuda:0')
cur_s_vecs
torch.Size([240, 128])
pred_vecs
torch.Size([240, 128])
cur_o_vecs
torch.Size([240, 128])
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  0.6609,  2.8336,  ...,  0.0000,  0.9408,  0.0000],
        [ 0.0000,  0.9686,  2.3127,  ...,  0.0000,  0.9408,  0.0000],
        [ 0.0000,  0.6609,  2.8336,  ...,  0.0000,  0.9519,  0.0000],
        ...,
        [ 0.0000,  0.8479,  1.8538,  ...,  0.1241,  0.6229,  0.0000],
        [ 0.0000,  1.0696,  2.5615,  ...,  0.1241,  0.6229,  0.0000],
        [ 0.0770,  0.4575,  1.7126,  ...,  0.1241,  0.6229,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([240, 128])
pred_vecs
torch.Size([240, 128])
cur_o_vecs
torch.Size([240, 128])
cur_t_vecs
torch.Size([240, 384])
tensor([[ 2.9551,  0.4777,  0.0000,  ...,  0.2919,  0.0000,  0.0000],
        [ 2.4918,  0.5232,  0.0000,  ...,  0.2919,  0.0000,  0.0000],
        [ 2.9551,  0.4777,  0.0000,  ...,  1.0065,  0.0000,  0.2358],
        ...,
        [ 2.6757,  0.4735,  0.0000,  ...,  0.1334,  0.2933,  0.0000],
        [ 2.8208,  0.4025,  0.0000,  ...,  0.1334,  0.2933,  0.0000],
        [ 2.2309,  0.5129,  0.0000,  ...,  0.1334,  0.2933,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 9.4020e-01, -1.4322e+00, -2.2643e-03,  ..., -1.7433e+00,
         -9.4707e-01,  2.7800e-01],
        [ 6.1622e-01, -1.9229e+00,  6.5513e-01,  ...,  6.1588e-01,
          1.2161e+00,  6.1387e-01],
        [-6.4211e-01,  5.3469e-01,  1.3881e-01,  ...,  1.0870e+00,
          2.7697e-01, -1.7418e+00],
        ...,
        [-8.6652e-01, -1.6698e-01,  2.3603e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8275e-01],
        [ 9.7739e-01, -1.9916e+00,  5.0800e-01,  ..., -1.4424e+00,
          1.1539e+00, -3.8275e-01],
        [ 9.4020e-01, -1.4322e+00, -2.2643e-03,  ..., -1.4424e+00,
          1.1539e+00, -3.8275e-01]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.8461,  0.1745,  2.4482,  ...,  0.0000,  1.7550,  0.0000],
        [ 0.9692,  0.0000,  3.0014,  ...,  0.4257,  2.0771,  0.0000],
        [ 1.0222,  0.0000,  1.9655,  ...,  0.0000,  1.9129,  0.0000],
        ...,
        [ 0.2338,  0.0000,  2.3472,  ...,  1.9662,  1.7496,  0.0000],
        [ 0.0000,  0.0000,  2.7937,  ...,  1.9662,  1.7496,  0.0000],
        [ 0.9312,  0.0000,  2.8889,  ...,  1.9662,  1.7496,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 1.2027,  1.0398,  0.3900,  ...,  1.7424,  0.9384,  0.0062],
        [ 0.1791,  0.0071,  0.0000,  ...,  2.0961,  1.0842,  0.5293],
        [ 1.0752,  0.0000,  0.1826,  ...,  1.2763,  0.5435,  0.5612],
        ...,
        [ 0.7610,  1.0095,  0.1270,  ...,  1.7531,  1.9158,  1.2967],
        [ 0.0000,  0.1481,  0.0000,  ...,  1.7531,  1.9158,  1.2967],
        [ 1.4123,  0.8277,  0.3813,  ...,  1.7531,  1.9158,  1.2967]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.0000,  0.5616,  2.0278,  ...,  0.0000,  0.5146,  0.0000],
        [ 0.0000,  0.2578,  2.2714,  ...,  0.0000,  0.7984,  0.0000],
        [ 0.0000,  1.1392,  2.0215,  ...,  0.0000,  0.6699,  0.0000],
        ...,
        [ 0.0000,  0.4164,  1.3847,  ...,  0.2047,  0.6938,  0.0000],
        [ 0.0000,  1.1253,  2.7461,  ...,  0.2047,  0.6938,  0.0000],
        [ 0.0000,  0.7214,  1.9626,  ...,  0.2047,  0.6938,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 2.4076,  0.5364,  0.0000,  ...,  0.5406,  0.0000,  0.0000],
        [ 3.2363,  0.3115,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.1855,  0.4181,  0.0000,  ...,  0.7841,  0.0000,  0.0000],
        ...,
        [ 2.5912,  0.6206,  0.0000,  ...,  0.0000,  0.4370,  0.0000],
        [ 2.8190,  0.1824,  0.0000,  ...,  0.0000,  0.4370,  0.0000],
        [ 2.2250,  0.5516,  0.0000,  ...,  0.0000,  0.4370,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 6.1625e-01, -1.9229e+00,  6.5513e-01,  ..., -2.1134e+00,
          4.5539e-01,  1.3511e-01],
        [-8.6652e-01, -1.6698e-01,  2.3604e-01,  ..., -2.8330e+00,
          1.8447e-01, -8.5832e-01],
        [-1.2821e+00, -7.9176e-01,  4.7019e-01,  ...,  6.1589e-01,
          1.2161e+00,  6.1385e-01],
        ...,
        [ 2.9289e+00,  1.9590e-01,  2.8165e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8277e-01],
        [-8.6652e-01, -1.6698e-01,  2.3604e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8277e-01],
        [ 2.9289e+00,  1.9590e-01,  2.8165e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8277e-01]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.4613,  0.0000,  2.0776,  ...,  0.0983,  2.2580,  0.0000],
        [ 0.0000,  0.0000,  1.8896,  ...,  0.0000,  2.1904,  0.0000],
        [ 0.5762,  0.0395,  2.1264,  ...,  0.0000,  1.9257,  0.0000],
        ...,
        [ 0.9062,  0.0000,  2.4401,  ...,  2.2318,  2.5939,  0.0000],
        [ 0.0000,  0.0000,  2.5895,  ...,  2.2318,  2.5939,  0.0000],
        [ 0.0000,  0.1270,  2.3594,  ...,  2.2318,  2.5939,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.5320,  0.8693,  0.0000,  ...,  1.3144,  0.0000,  0.2768],
        [ 0.7777,  0.2537,  0.0000,  ...,  1.4683,  0.5221,  0.0000],
        [ 1.6005,  0.4046,  0.0000,  ...,  1.1313,  0.1142,  0.5038],
        ...,
        [ 0.8452,  0.5534,  0.0000,  ...,  0.9758,  1.2110,  1.0926],
        [ 1.2620,  1.1568,  0.0000,  ...,  0.9758,  1.2110,  1.0926],
        [ 0.8569,  1.0541,  0.0000,  ...,  0.9758,  1.2110,  1.0926]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.9185,  2.3508,  ...,  0.0000,  0.3696,  0.0000],
        [ 0.0000,  0.7150,  2.1055,  ...,  0.0000,  0.7743,  0.0000],
        [ 0.0000,  0.7843,  2.1502,  ...,  0.0000,  0.4709,  0.0000],
        ...,
        [ 0.0000,  0.9612,  2.1135,  ...,  0.8955,  0.8020,  0.0000],
        [ 0.0000,  0.4977,  1.1459,  ...,  0.8955,  0.8020,  0.0000],
        [ 0.0000,  0.7748,  1.4167,  ...,  0.8955,  0.8020,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 1.9828,  0.4726,  0.0000,  ...,  0.5238,  0.0000,  0.0000],
        [ 2.1210,  0.0000,  0.0000,  ...,  0.3814,  0.0000,  0.0912],
        [ 1.7172,  0.4611,  0.0000,  ...,  0.7516,  0.0000,  0.3410],
        ...,
        [ 2.3314,  0.4899,  0.0000,  ...,  0.0000,  0.2198,  0.0000],
        [ 1.8316,  0.5516,  0.0000,  ...,  0.0000,  0.2198,  0.0000],
        [ 1.9879,  0.6553,  0.0000,  ...,  0.0000,  0.2198,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 1.5925e-01,  8.8069e-01,  2.2912e+00,  ..., -9.7769e-01,
          1.6872e+00, -8.0746e-01],
        [ 1.5925e-01,  8.8069e-01,  2.2912e+00,  ..., -9.7769e-01,
          1.6872e+00, -8.0746e-01],
        [ 2.4734e-01,  2.3575e+00, -1.1855e+00,  ..., -1.7808e-01,
         -1.1739e+00,  4.7747e-01],
        ...,
        [ 6.1628e-01, -1.9229e+00,  6.5515e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8278e-01],
        [ 1.2187e+00, -3.2997e-01,  1.6750e+00,  ..., -1.4423e+00,
          1.1539e+00, -3.8278e-01],
        [-8.6652e-01, -1.6698e-01,  2.3604e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8278e-01]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 0.3544,  0.0000,  2.2572,  ...,  0.6698,  1.4932,  0.0000],
        [ 0.3544,  0.0000,  2.2572,  ...,  0.6698,  1.4932,  0.0000],
        [ 0.1973,  0.0000,  1.2822,  ...,  0.0000,  2.4869,  0.0000],
        ...,
        [ 0.3371,  0.0000,  2.7428,  ...,  2.7803,  2.1507,  0.0000],
        [ 1.0108,  0.0000,  2.1685,  ...,  2.7803,  2.1507,  0.0000],
        [ 0.4931,  0.0000,  1.4667,  ...,  2.7803,  2.1507,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 0.0000,  0.4429,  0.0000,  ...,  1.3595,  0.2990,  0.4824],
        [ 0.0000,  0.4429,  0.0000,  ...,  1.3595,  0.2990,  0.4824],
        [ 0.8564,  0.9684,  0.4589,  ...,  0.5219,  0.1327,  0.0000],
        ...,
        [ 0.7144,  0.6872,  0.0000,  ...,  1.4442,  1.6789,  0.8906],
        [ 1.3058,  0.8388,  0.3707,  ...,  1.4442,  1.6789,  0.8906],
        [ 0.0938,  0.7395,  0.0000,  ...,  1.4442,  1.6789,  0.8906]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 0.0000,  0.3227,  2.0708,  ...,  0.0000,  1.2054,  0.0000],
        [ 0.0000,  0.3227,  2.0708,  ...,  0.0000,  1.2054,  0.0000],
        [ 0.0000,  0.5226,  1.8279,  ...,  0.0000,  0.7569,  0.0000],
        ...,
        [ 0.0000,  0.5656,  2.2997,  ...,  0.2050,  0.6322,  0.0000],
        [ 0.0000,  0.8932,  1.9699,  ...,  0.2050,  0.6322,  0.0000],
        [ 0.0000,  0.9338,  2.3775,  ...,  0.2050,  0.6322,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([239, 128])
pred_vecs
torch.Size([239, 128])
cur_o_vecs
torch.Size([239, 128])
cur_t_vecs
torch.Size([239, 384])
tensor([[ 2.3004,  0.0564,  0.0000,  ...,  0.1575,  0.0603,  0.0000],
        [ 2.3004,  0.0564,  0.0000,  ...,  0.1575,  0.0603,  0.0000],
        [ 2.0160,  0.4434,  0.0000,  ...,  0.4235,  0.0000,  0.0000],
        ...,
        [ 2.2207,  0.2379,  0.0000,  ...,  0.0000,  0.5829,  0.0000],
        [ 2.5207,  0.5907,  0.0000,  ...,  0.0000,  0.5829,  0.0000],
        [ 2.2214,  0.0000,  0.0000,  ...,  0.0000,  0.5829,  0.0000]], device='cuda:0')
t = 50 / 1000000
 G [bbox_pred]: 0.4556
 G [L1_pixel_loss]: 0.9119
 G [total_loss]: 1.6737
 G [g_gan_obj_loss]: 0.0077
 G [g_gan_img_loss]: 0.0080
 G [ac_loss]: 0.2906
 D_obj [d_ac_loss_real]: 3.1753
 D_obj [d_ac_loss_fake]: 2.9059
 D_obj [d_obj_gan_loss]: 1.2542
 D_img [d_img_gan_loss]: 1.2807
cur_s_vecs
torch.Size([217, 128])
pred_vecs
torch.Size([217, 128])
cur_o_vecs
torch.Size([217, 128])
cur_t_vecs
torch.Size([217, 384])
tensor([[-8.6651e-01, -1.6698e-01,  2.3605e-01,  ...,  5.0026e-01,
         -1.2089e+00, -1.2393e-01],
        [ 9.4010e-01, -1.4320e+00, -2.3504e-03,  ..., -1.5234e+00,
         -9.5850e-02, -1.0261e+00],
        [-9.4611e-01,  1.0841e+00, -3.1546e-01,  ...,  6.1589e-01,
          1.2161e+00,  6.1378e-01],
        ...,
        [-6.4205e-01,  5.3469e-01,  1.3880e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8278e-01],
        [ 5.9674e-01, -2.6354e-01, -1.7057e+00,  ..., -1.4423e+00,
          1.1539e+00, -3.8278e-01],
        [-9.0841e-02, -6.1148e-01,  1.5164e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8278e-01]], device='cuda:0')
cur_s_vecs
torch.Size([217, 128])
pred_vecs
torch.Size([217, 128])
cur_o_vecs
torch.Size([217, 128])
cur_t_vecs
torch.Size([217, 384])
tensor([[ 0.0947,  0.0000,  1.9962,  ...,  0.1915,  2.9739,  0.0000],
        [ 1.2598,  0.0000,  2.5013,  ...,  0.0000,  1.9134,  0.0000],
        [ 1.3095,  0.0000,  3.4093,  ...,  0.0000,  1.4197,  0.0000],
        ...,
        [ 1.0724,  0.0000,  2.0214,  ...,  1.8312,  2.0535,  0.0000],
        [ 0.3695,  0.0000,  1.7318,  ...,  1.8312,  2.0535,  0.0000],
        [ 0.1113,  0.0018,  2.5826,  ...,  1.8312,  2.0535,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([217, 128])
pred_vecs
torch.Size([217, 128])
cur_o_vecs
torch.Size([217, 128])
cur_t_vecs
torch.Size([217, 384])
tensor([[ 0.9786,  0.5989,  0.0000,  ...,  0.8052,  0.0738,  0.0418],
        [ 0.8665,  1.1647,  0.0093,  ...,  1.5708,  0.5031,  0.0000],
        [ 0.4862,  1.0067,  0.0951,  ...,  1.1879,  0.6866,  0.6545],
        ...,
        [ 0.6704,  0.1420,  0.1338,  ...,  1.9439,  2.0752,  0.0086],
        [ 0.4480,  0.8030,  0.0071,  ...,  1.9439,  2.0752,  0.0086],
        [ 0.0934,  0.8222,  0.3831,  ...,  1.9439,  2.0752,  0.0086]], device='cuda:0')
cur_s_vecs
torch.Size([217, 128])
pred_vecs
torch.Size([217, 128])
cur_o_vecs
torch.Size([217, 128])
cur_t_vecs
torch.Size([217, 384])
tensor([[ 0.0000,  0.2094,  1.8772,  ...,  0.2250,  0.3300,  0.0000],
        [ 0.0000,  0.7248,  2.5051,  ...,  0.0000,  0.6288,  0.0000],
        [ 0.0000,  0.6203,  2.2604,  ...,  0.0000,  0.7018,  0.0000],
        ...,
        [ 0.0000,  1.2206,  2.1072,  ...,  0.0746,  0.5090,  0.0000],
        [ 0.0000,  0.5011,  1.8639,  ...,  0.0746,  0.5090,  0.0000],
        [ 0.0000,  0.5927,  1.9910,  ...,  0.0746,  0.5090,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([217, 128])
pred_vecs
torch.Size([217, 128])
cur_o_vecs
torch.Size([217, 128])
cur_t_vecs
torch.Size([217, 384])
tensor([[ 1.9357,  0.1282,  0.0000,  ...,  0.6127,  0.0000,  0.0000],
        [ 2.1608,  0.0036,  0.0000,  ...,  0.5725,  0.0000,  0.0000],
        [ 2.0503,  0.2533,  0.0000,  ...,  0.2749,  0.0000,  0.0000],
        ...,
        [ 1.9407,  0.4495,  0.0000,  ...,  0.0000,  0.4899,  0.0000],
        [ 2.2147,  0.6129,  0.0000,  ...,  0.0000,  0.4899,  0.0000],
        [ 2.1154,  0.3389,  0.0000,  ...,  0.0000,  0.4899,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([251, 128])
pred_vecs
torch.Size([251, 128])
cur_o_vecs
torch.Size([251, 128])
cur_t_vecs
torch.Size([251, 384])
tensor([[-6.4205e-01,  5.3471e-01,  1.3879e-01,  ...,  7.7904e-01,
         -1.6072e+00, -3.0189e-01],
        [-8.6649e-01, -1.6702e-01,  2.3604e-01,  ...,  7.7904e-01,
         -1.6072e+00, -3.0189e-01],
        [-8.6649e-01, -1.6702e-01,  2.3604e-01,  ...,  7.7904e-01,
         -1.6072e+00, -3.0189e-01],
        ...,
        [ 2.9679e-01, -6.5275e-01, -1.2045e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8276e-01],
        [ 1.4339e+00, -5.8326e-01,  2.7269e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8276e-01],
        [ 2.3036e-01, -7.2208e-01,  4.8099e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8276e-01]], device='cuda:0')
cur_s_vecs
torch.Size([251, 128])
pred_vecs
torch.Size([251, 128])
cur_o_vecs
torch.Size([251, 128])
cur_t_vecs
torch.Size([251, 384])
tensor([[ 0.7310,  0.0000,  2.0135,  ...,  0.8285,  1.4563,  0.0000],
        [ 0.6782,  0.0000,  1.8942,  ...,  0.8285,  1.4563,  0.0000],
        [ 0.6782,  0.0000,  1.8942,  ...,  0.8285,  1.4563,  0.0000],
        ...,
        [ 0.1584,  0.0000,  2.6833,  ...,  2.2706,  2.1578,  0.0000],
        [ 0.5886,  0.0000,  2.7313,  ...,  2.2706,  2.1578,  0.0000],
        [ 0.0000,  0.0000,  2.6850,  ...,  2.2706,  2.1578,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([251, 128])
pred_vecs
torch.Size([251, 128])
cur_o_vecs
torch.Size([251, 128])
cur_t_vecs
torch.Size([251, 384])
tensor([[ 0.7760,  0.0019,  0.0476,  ...,  1.5583,  0.9602,  0.3485],
        [ 0.0000,  0.5099,  0.0000,  ...,  1.5583,  0.9602,  0.3485],
        [ 0.0000,  0.5099,  0.0000,  ...,  1.5583,  0.9602,  0.3485],
        ...,
        [ 0.4526,  0.8725,  0.0000,  ...,  1.8033,  1.9168,  0.8425],
        [ 1.1386,  0.2828,  0.0000,  ...,  1.8033,  1.9168,  0.8425],
        [ 0.6798,  0.8982,  0.0000,  ...,  1.8033,  1.9168,  0.8425]], device='cuda:0')
cur_s_vecs
torch.Size([251, 128])
pred_vecs
torch.Size([251, 128])
cur_o_vecs
torch.Size([251, 128])
cur_t_vecs
torch.Size([251, 384])
tensor([[ 0.0000,  1.1284,  2.0118,  ...,  0.0000,  0.9299,  0.0000],
        [ 0.0000,  1.3434,  2.2149,  ...,  0.0000,  0.9299,  0.0000],
        [ 0.0000,  1.3434,  2.2149,  ...,  0.0000,  0.9299,  0.0000],
        ...,
        [ 0.0000,  0.9966,  2.4362,  ...,  0.2507,  0.8647,  0.0000],
        [ 0.0000,  0.8466,  2.3518,  ...,  0.2507,  0.8647,  0.0000],
        [ 0.0382,  0.1849,  1.9719,  ...,  0.2507,  0.8647,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([251, 128])
pred_vecs
torch.Size([251, 128])
cur_o_vecs
torch.Size([251, 128])
cur_t_vecs
torch.Size([251, 384])
tensor([[ 2.6035,  0.4238,  0.0000,  ...,  0.0000,  0.0301,  0.0000],
        [ 2.9226,  0.5656,  0.0000,  ...,  0.0000,  0.0301,  0.0000],
        [ 2.9226,  0.5656,  0.0000,  ...,  0.0000,  0.0301,  0.0000],
        ...,
        [ 2.1856,  0.7828,  0.0000,  ...,  0.0000,  0.4264,  0.0000],
        [ 2.3884,  0.7738,  0.0000,  ...,  0.0000,  0.4264,  0.0000],
        [ 1.9731,  0.4971,  0.0000,  ...,  0.0000,  0.4264,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 6.1639e-01, -1.9229e+00,  6.5521e-01,  ...,  6.1586e-01,
          1.2161e+00,  6.1372e-01],
        [-8.6647e-01, -1.6703e-01,  2.3602e-01,  ..., -1.7432e+00,
         -9.4700e-01,  2.7807e-01],
        [-8.6647e-01, -1.6703e-01,  2.3602e-01,  ..., -1.7432e+00,
         -9.4700e-01,  2.7807e-01],
        ...,
        [-1.3899e-01, -6.6484e-01, -2.7762e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8274e-01],
        [-7.2256e-02,  7.4293e-01,  1.0939e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8274e-01],
        [-8.6647e-01, -1.6703e-01,  2.3602e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8274e-01]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.8024,  0.0000,  2.2880,  ...,  0.0000,  2.4961,  0.0000],
        [ 0.3519,  0.0000,  2.0581,  ...,  0.4841,  1.3963,  0.0000],
        [ 0.3519,  0.0000,  2.0581,  ...,  0.4841,  1.3963,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.9617,  ...,  2.0389,  2.4690,  0.0000],
        [ 0.2601,  0.0000,  1.1041,  ...,  2.0389,  2.4690,  0.0000],
        [ 0.6218,  0.0000,  1.7124,  ...,  2.0389,  2.4690,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.6721,  0.9547,  0.0000,  ...,  0.7952,  0.9110,  0.0000],
        [ 0.6589,  0.2982,  0.0000,  ...,  1.0491,  0.7985,  0.2109],
        [ 0.6589,  0.2982,  0.0000,  ...,  1.0491,  0.7985,  0.2109],
        ...,
        [ 0.8324,  0.7670,  0.0000,  ...,  1.6582,  2.1497,  0.7028],
        [ 0.3724,  0.6473,  0.0000,  ...,  1.6582,  2.1497,  0.7028],
        [ 0.6601,  0.9971,  0.0000,  ...,  1.6582,  2.1497,  0.7028]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.0000,  0.8110,  3.2107,  ...,  0.0000,  0.3186,  0.0000],
        [ 0.0000,  0.6817,  2.3116,  ...,  0.0000,  0.8313,  0.0000],
        [ 0.0000,  0.6817,  2.3116,  ...,  0.0000,  0.8313,  0.0000],
        ...,
        [ 0.0000,  0.8203,  2.1854,  ...,  0.2276,  0.4631,  0.0000],
        [ 0.0000,  0.6238,  2.1542,  ...,  0.2276,  0.4631,  0.0000],
        [ 0.7449,  0.6188,  1.7166,  ...,  0.2276,  0.4631,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 2.5373,  0.3726,  0.0000,  ...,  0.7124,  0.0000,  0.3678],
        [ 2.3805,  0.2641,  0.0000,  ...,  0.0963,  0.0000,  0.0000],
        [ 2.3805,  0.2641,  0.0000,  ...,  0.0963,  0.0000,  0.0000],
        ...,
        [ 1.9734,  0.5393,  0.0000,  ...,  0.0000,  0.3551,  0.0000],
        [ 2.0872,  0.0000,  0.0000,  ...,  0.0000,  0.3551,  0.0000],
        [ 2.6517,  0.7051,  0.0000,  ...,  0.0000,  0.3551,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([264, 128])
pred_vecs
torch.Size([264, 128])
cur_o_vecs
torch.Size([264, 128])
cur_t_vecs
torch.Size([264, 384])
tensor([[ 5.5425e-01, -3.3984e-01, -1.9770e+00,  ..., -2.8981e-01,
          3.8759e-01, -1.3368e+00],
        [-8.6646e-01, -1.6706e-01,  2.3601e-01,  ..., -2.8981e-01,
          3.8759e-01, -1.3368e+00],
        [ 9.4003e-01, -1.4318e+00, -2.4175e-03,  ...,  6.1584e-01,
          1.2161e+00,  6.1369e-01],
        ...,
        [-6.1594e-02, -5.1621e-01, -5.7149e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8272e-01],
        [-8.6646e-01, -1.6706e-01,  2.3601e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8272e-01],
        [-1.1286e+00, -9.1548e-01,  8.1165e-02,  ..., -1.4423e+00,
          1.1539e+00, -3.8272e-01]], device='cuda:0')
cur_s_vecs
torch.Size([264, 128])
pred_vecs
torch.Size([264, 128])
cur_o_vecs
torch.Size([264, 128])
cur_t_vecs
torch.Size([264, 384])
tensor([[ 0.0000,  0.0000,  1.9944,  ...,  0.0000,  2.4215,  0.0000],
        [ 0.0000,  0.0000,  2.5367,  ...,  0.0000,  2.5145,  0.0000],
        [ 0.1770,  0.0000,  1.8499,  ...,  0.0000,  0.9935,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.5855,  ...,  2.7342,  2.3272,  0.0000],
        [ 0.0000,  0.0000,  1.6292,  ...,  2.7342,  2.3272,  0.0000],
        [ 0.0000,  0.1181,  1.1250,  ...,  2.7342,  2.3272,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([264, 128])
pred_vecs
torch.Size([264, 128])
cur_o_vecs
torch.Size([264, 128])
cur_t_vecs
torch.Size([264, 384])
tensor([[ 0.7159,  0.9575,  0.4356,  ...,  0.3206,  0.9516,  0.3992],
        [ 0.5025,  1.3405,  0.0000,  ...,  0.9725,  0.6353,  0.0000],
        [ 0.8845,  1.1128,  0.0000,  ...,  0.8068,  0.6130,  0.4082],
        ...,
        [ 0.5446,  1.0068,  0.0000,  ...,  1.3977,  2.0343,  1.3118],
        [ 0.1944,  1.0937,  0.0000,  ...,  1.3977,  2.0343,  1.3118],
        [ 0.7959,  2.2576,  0.0000,  ...,  1.3977,  2.0343,  1.3118]], device='cuda:0')
cur_s_vecs
torch.Size([264, 128])
pred_vecs
torch.Size([264, 128])
cur_o_vecs
torch.Size([264, 128])
cur_t_vecs
torch.Size([264, 384])
tensor([[ 0.0000,  1.1896,  2.1080,  ...,  0.0000,  1.3741,  0.0000],
        [ 0.0000,  0.7651,  2.1397,  ...,  0.0000,  0.7229,  0.0000],
        [ 0.0000,  0.7653,  2.0604,  ...,  0.0000,  0.3556,  0.0000],
        ...,
        [ 0.0000,  0.6919,  2.0407,  ...,  0.3732,  0.4021,  0.0000],
        [ 0.0000,  0.7103,  2.5324,  ...,  0.3732,  0.4021,  0.0000],
        [ 0.4419,  0.7276,  2.0434,  ...,  0.3732,  0.4021,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([264, 128])
pred_vecs
torch.Size([264, 128])
cur_o_vecs
torch.Size([264, 128])
cur_t_vecs
torch.Size([264, 384])
tensor([[ 2.0229,  0.1594,  0.0000,  ...,  0.5676,  0.0000,  0.0000],
        [ 1.8040,  0.2398,  0.0000,  ...,  0.6682,  0.0000,  0.1274],
        [ 1.8221,  0.4199,  0.0000,  ...,  0.8214,  0.0000,  0.1616],
        ...,
        [ 2.5449,  0.7201,  0.0000,  ...,  0.0000,  0.2048,  0.0000],
        [ 2.8244,  0.0000,  0.0000,  ...,  0.0000,  0.2048,  0.0000],
        [ 2.7525,  1.1482,  0.0000,  ...,  0.0000,  0.2048,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([38, 128])
pred_vecs
torch.Size([38, 128])
cur_o_vecs
torch.Size([38, 128])
cur_t_vecs
torch.Size([38, 384])
tensor([[ 2.9289e+00,  1.9587e-01,  2.8168e-01,  ..., -1.6984e-01,
          8.2040e-01, -2.7791e-01],
        [ 2.9289e+00,  1.9587e-01,  2.8168e-01,  ..., -1.6984e-01,
          8.2040e-01, -2.7791e-01],
        [-8.6646e-01, -1.6707e-01,  2.3599e-01,  ..., -1.6984e-01,
          8.2040e-01, -2.7791e-01],
        ...,
        [ 2.9681e-01, -6.5285e-01, -1.2050e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8271e-01],
        [ 6.1643e-01, -1.9230e+00,  6.5524e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8271e-01],
        [ 1.3914e+00,  1.1433e+00, -1.0841e+00,  ..., -1.4423e+00,
          1.1539e+00, -3.8271e-01]], device='cuda:0')
cur_s_vecs
torch.Size([38, 128])
pred_vecs
torch.Size([38, 128])
cur_o_vecs
torch.Size([38, 128])
cur_t_vecs
torch.Size([38, 384])
tensor([[ 0.0000,  0.0000,  1.9578,  ...,  0.4307,  1.2279,  0.0000],
        [ 0.0000,  0.0000,  1.9578,  ...,  0.4307,  1.2279,  0.0000],
        [ 0.5829,  0.0000,  1.5732,  ...,  0.4307,  1.2279,  0.0000],
        ...,
        [ 0.0165,  0.0000,  2.7337,  ...,  1.9526,  2.1995,  0.0000],
        [ 0.2873,  0.0000,  2.0885,  ...,  1.9526,  2.1995,  0.0000],
        [ 0.0000,  0.0000,  1.4895,  ...,  1.9526,  2.1995,  0.0000]], device='cuda:0')127750c
509514e
6421c
533452e
150354d
332292c
89707e
454044a
455902d
243796d
208585b
104537e
521995d
517417b
107108a
522235a
26747c
4764e
167074b
336854d
540926b
168417b
142587b
552461b
388923b
24026a
163412b
109568a
367605a
81035b
276694e
289100a
353982b
480576d
377278b
242167b
349527d
101877c
23176c
71737d
18155c
119761c
485064e
224629e
462929c
569602c
555800d
302397b
20087d
346915c
121172a
159403e
173814c
90869b
560563d
189187a
52324b
327813a
535265c
323479a
223420c
568677b
570579a
557408d
396369b
260109a
572147e
531778b
160152a
216026b
288921b
170687a
39360d
485491e
312359c
283809a
217720d
244122d
208267a
188498c
511143a
241178a
576526e
581061b
285357c
474105b
66309b
189648b
567305a
75362a
173565d
438267e
237859c
367442b
412384d
47909e
316353e
21531c
144371b
310518e
573149e
502557d
329151a
354938e
191690d
295850e
102609d
174303b
459110b
569174b
43171d
472320a
13595b
282978b
400848e
397938a
6075a
59582d
85549b
549098e
452459c
455877a
84815e
92107d
409754e
102834e
254589a
493485a
553401b
183539b
404395b
31442c
330954d
507148b
210266a
485368b
146120b
566547e
217135c
478805d
177381e
47774c
6710a
327536c
126204e
187803e
107620e
102421d
11690a
215612c
58979c
491558e
365027d
135989c
3001a
127450a
431997e
103582a
400850e
134849b
554319c
39716b
577712e
408946a
10138e
295491a
545929c
167126b
84034b
522489d
10082e
2477b
189033e
299643b
288313e
404271d
359164c
269015d
289172d
42704a
393647a
543224b
463168c
363190c
257713b
13576e
468751d
340897e
213530e
61202b
546261e
525273e
323129a
477468a
488980a
84896e
152245e
20291d
349153c
113619d
113019c
444399d
520389c
313608d
71631c
153574c
171309a
154597e
238712c
248591a
91263a
557434a
389772d
76802b
230570b
5383d
245242c
441816e
132516a
14798d
400999a
132860e
524924d
28349d
390298c
500982b
414212a
550278a
412992d
522704b
131374d
428304c
279345a
457448d
355175a
30958c
274424a
505642a
4761e
364571b
101426a
432627d
488583b
103575d
578119d
214873b
159199a
494795d
96067b
103558b
60378b
302576c
197029b
327413b
438899c
324611a
194050c
295693b
310564d
150594d
207573a
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
157356a
426880c
385540c
515300d
529352e
97170c
259853a
250724b
308295c
308803a
466134b
285651a
293576a
459208b
509267e
134597e
246099a
167995e
37291d
324740d
320537b
169395c
221633e
392476a
43742e
176726c
134413c
22658d
278899b
297009a
518918b
139789e
416188a
233112e
443086d
344025a
195894e
137339b
457086c
257951c
529944e
78286b
163829e
218886e
306127c
217991b
110777e
233869d
346724d
277346a
208347b
322121b
96728b
165299d
185963c
126808e
245534b
49286d
572042e
261664e
88325e
331302b
53464b
545257e
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_s_vecs
torch.Size([38, 128])
pred_vecs
torch.Size([38, 128])
cur_o_vecs
torch.Size([38, 128])
cur_t_vecs
torch.Size([38, 384])
tensor([[ 1.1913,  0.7009,  0.0864,  ...,  1.0177,  0.3585,  0.3694],
        [ 1.1913,  0.7009,  0.0864,  ...,  1.0177,  0.3585,  0.3694],
        [ 0.2606,  0.8312,  0.0000,  ...,  1.0177,  0.3585,  0.3694],
        ...,
        [ 0.6561,  0.9394,  0.0000,  ...,  1.7066,  1.8951,  0.3780],
        [ 1.1183,  1.1396,  0.0000,  ...,  1.7066,  1.8951,  0.3780],
        [ 1.1658,  1.0065,  0.0000,  ...,  1.7066,  1.8951,  0.3780]], device='cuda:0')
cur_s_vecs
torch.Size([38, 128])
pred_vecs
torch.Size([38, 128])
cur_o_vecs
torch.Size([38, 128])
cur_t_vecs
torch.Size([38, 384])
tensor([[ 0.0000,  0.8946,  2.4526,  ...,  0.0687,  1.1531,  0.0000],
        [ 0.0000,  0.8946,  2.4526,  ...,  0.0687,  1.1531,  0.0000],
        [ 0.0000,  1.1068,  2.8430,  ...,  0.0687,  1.1531,  0.0000],
        ...,
        [ 0.0000,  0.7339,  2.1376,  ...,  0.3305,  0.8817,  0.0000],
        [ 0.0000,  0.8292,  2.4635,  ...,  0.3305,  0.8817,  0.0000],
        [ 0.0000,  0.8526,  1.8596,  ...,  0.3305,  0.8817,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([38, 128])
pred_vecs
torch.Size([38, 128])
cur_o_vecs
torch.Size([38, 128])
cur_t_vecs
torch.Size([38, 384])
tensor([[ 1.7795,  0.4550,  0.0000,  ...,  0.0783,  0.0000,  0.0000],
        [ 1.7795,  0.4550,  0.0000,  ...,  0.0783,  0.0000,  0.0000],
        [ 2.6997,  0.1121,  0.0000,  ...,  0.0783,  0.0000,  0.0000],
        ...,
        [ 1.7373,  0.4462,  0.0000,  ...,  0.0000,  0.4478,  0.0000],
        [ 1.9779,  0.6010,  0.0000,  ...,  0.0000,  0.4478,  0.0000],
        [ 1.7925,  0.5589,  0.0000,  ...,  0.0000,  0.4478,  0.0000]], device='cuda:0')
Starting epoch 6
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 2.7243e+00, -4.5174e-01,  3.9224e-01,  ...,  6.1581e-01,
          1.2161e+00,  6.1370e-01],
        [ 2.7243e+00, -4.5174e-01,  3.9224e-01,  ..., -2.8330e+00,
          1.8450e-01, -8.5833e-01],
        [ 9.8825e-01,  4.2650e-01, -1.6327e+00,  ...,  6.1581e-01,
          1.2161e+00,  6.1370e-01],
        ...,
        [-6.1576e-02, -5.1623e-01, -5.7147e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8269e-01],
        [-6.1576e-02, -5.1623e-01, -5.7147e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8269e-01],
        [-6.4208e-01,  5.3474e-01,  1.3876e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8269e-01]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 0.4645,  0.0000,  2.8310,  ...,  0.4751,  1.6115,  0.0000],
        [ 0.4645,  0.0000,  2.8310,  ...,  0.0000,  2.0321,  0.0000],
        [ 0.9670,  0.0000,  2.3426,  ...,  0.4751,  1.6115,  0.0000],
        ...,
        [ 0.0610,  0.0000,  2.4918,  ...,  2.6941,  2.9199,  0.0000],
        [ 0.0000,  0.0000,  2.1162,  ...,  2.6941,  2.9199,  0.0000],
        [ 1.0993,  0.1820,  3.0783,  ...,  2.6941,  2.9199,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 0.7093,  0.4471,  0.2011,  ...,  1.0903,  0.8075,  0.8805],
        [ 0.7093,  0.4471,  0.2011,  ...,  1.1128,  0.5710,  0.2016],
        [ 0.4096,  0.5533,  0.0000,  ...,  1.0903,  0.8075,  0.8805],
        ...,
        [ 0.7186,  0.4864,  0.0000,  ...,  1.4810,  1.6954,  0.8469],
        [ 0.5395,  0.7566,  0.0000,  ...,  1.4810,  1.6954,  0.8469],
        [ 1.0308,  0.6897,  0.3082,  ...,  1.4810,  1.6954,  0.8469]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 0.0000,  0.7467,  2.2915,  ...,  0.0000,  0.8739,  0.0000],
        [ 0.0000,  0.7467,  2.2915,  ...,  0.0000,  0.8294,  0.0000],
        [ 0.0000,  1.0968,  2.1144,  ...,  0.0000,  0.8739,  0.0000],
        ...,
        [ 0.0000,  1.0221,  1.8688,  ...,  0.5358,  0.8412,  0.0000],
        [ 0.0000,  0.8750,  1.8779,  ...,  0.5358,  0.8412,  0.0000],
        [ 0.0264,  0.0000,  1.5610,  ...,  0.5358,  0.8412,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 1.7098,  0.1189,  0.0000,  ...,  0.1658,  0.0000,  0.0000],
        [ 1.7098,  0.1189,  0.0000,  ...,  0.0738,  0.0000,  0.0000],
        [ 2.2139,  0.6237,  0.0000,  ...,  0.1658,  0.0000,  0.0000],
        ...,
        [ 1.9335,  0.4992,  0.0000,  ...,  0.0000,  0.0712,  0.0000],
        [ 1.7398,  0.3923,  0.0000,  ...,  0.0000,  0.0712,  0.0000],
        [ 2.1448,  0.5323,  0.0000,  ...,  0.0000,  0.0712,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 4.0551e-01,  3.2456e-01, -1.9935e+00,  ..., -2.3581e-01,
         -1.1316e+00, -2.9472e-01],
        [ 4.0551e-01,  3.2456e-01, -1.9935e+00,  ..., -2.3581e-01,
         -1.1316e+00, -2.9472e-01],
        [-3.2799e-02,  1.5138e+00,  5.0534e-01,  ...,  4.3382e-01,
          9.5410e-01, -5.3082e-01],
        ...,
        [-6.4207e-01,  5.3476e-01,  1.3876e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8267e-01],
        [-5.0211e-01, -2.2743e-01,  1.5247e+00,  ..., -1.4423e+00,
          1.1539e+00, -3.8267e-01],
        [-1.2820e+00, -7.9173e-01,  4.7034e-01,  ..., -1.4423e+00,
          1.1539e+00, -3.8267e-01]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 0.9177,  0.0000,  1.4052,  ...,  0.1025,  2.1621,  0.0000],
        [ 0.9177,  0.0000,  1.4052,  ...,  0.1025,  2.1621,  0.0000],
        [ 0.0000,  0.0000,  2.7047,  ...,  0.0000,  2.2732,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.5870,  ...,  2.0253,  1.8207,  0.0000],
        [ 0.4087,  0.0000,  2.3560,  ...,  2.0253,  1.8207,  0.0000],
        [ 0.6594,  0.1761,  1.1293,  ...,  2.0253,  1.8207,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 0.7002,  0.4004,  0.0000,  ...,  1.0422,  0.7756,  0.0008],
        [ 0.7002,  0.4004,  0.0000,  ...,  1.0422,  0.7756,  0.0008],
        [ 0.6616,  0.9316,  0.0000,  ...,  1.2720,  0.0481,  0.0000],
        ...,
        [ 1.2820,  0.8435,  0.2219,  ...,  1.4047,  1.7158,  0.5960],
        [ 0.4051,  0.8654,  0.6518,  ...,  1.4047,  1.7158,  0.5960],
        [ 1.1460,  0.6470,  0.5097,  ...,  1.4047,  1.7158,  0.5960]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 0.0000,  0.6227,  2.2212,  ...,  0.0000,  0.4457,  0.0000],
        [ 0.0000,  0.6227,  2.2212,  ...,  0.0000,  0.4457,  0.0000],
        [ 0.2253,  0.0000,  1.6613,  ...,  0.0793,  0.6884,  0.0000],
        ...,
        [ 0.0000,  0.1569,  1.5678,  ...,  0.5311,  0.5869,  0.0000],
        [ 0.0000,  0.9150,  2.4967,  ...,  0.5311,  0.5869,  0.0000],
        [ 0.0000,  0.7300,  1.9580,  ...,  0.5311,  0.5869,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([230, 128])
pred_vecs
torch.Size([230, 128])
cur_o_vecs
torch.Size([230, 128])
cur_t_vecs
torch.Size([230, 384])
tensor([[ 1.8028,  0.4879,  0.0000,  ...,  0.0203,  0.0000,  0.0000],
        [ 1.8028,  0.4879,  0.0000,  ...,  0.0203,  0.0000,  0.0000],
        [ 1.8059,  0.3860,  0.0000,  ...,  0.2612,  0.0000,  0.0000],
        ...,
        [ 1.7016,  0.5000,  0.0000,  ...,  0.0000,  0.1043,  0.0000],
        [ 1.8626,  0.1564,  0.0000,  ...,  0.0000,  0.1043,  0.0000],
        [ 2.1860,  0.7523,  0.0000,  ...,  0.0000,  0.1043,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([225, 128])
pred_vecs
torch.Size([225, 128])
cur_o_vecs
torch.Size([225, 128])
cur_t_vecs
torch.Size([225, 384])
tensor([[ 7.0128e-01, -1.1045e+00, -4.4076e-01,  ..., -9.6696e-01,
          4.7565e-01, -6.4602e-01],
        [ 9.7714e-01, -1.9916e+00,  5.0794e-01,  ..., -4.0528e-01,
          9.7792e-01,  2.0470e+00],
        [ 7.0128e-01, -1.1045e+00, -4.4076e-01,  ..., -4.0528e-01,
          9.7792e-01,  2.0470e+00],
        ...,
        [-1.4830e+00,  9.1443e-01,  1.6474e+00,  ..., -1.4423e+00,
          1.1538e+00, -3.8266e-01],
        [-8.6651e-01, -1.6711e-01,  2.3600e-01,  ..., -1.4423e+00,
          1.1538e+00, -3.8266e-01],
        [-6.4207e-01,  5.3477e-01,  1.3876e-01,  ..., -1.4423e+00,
          1.1538e+00, -3.8266e-01]], device='cuda:0')
cur_s_vecs
torch.Size([225, 128])
pred_vecs
torch.Size([225, 128])
cur_o_vecs
torch.Size([225, 128])
cur_t_vecs
torch.Size([225, 384])
tensor([[ 1.9217,  0.0000,  2.3425,  ...,  0.0000,  2.1445,  0.0000],
        [ 0.6479,  0.0000,  2.6460,  ...,  0.8876,  2.5434,  0.0000],
        [ 1.9217,  0.0000,  2.3425,  ...,  0.8876,  2.5434,  0.0000],
        ...,
        [ 0.9201,  0.0000,  1.8071,  ...,  1.4956,  1.8122,  0.0000],
        [ 0.3922,  0.0000,  1.7577,  ...,  1.4956,  1.8122,  0.0000],
        [ 1.1980,  0.0000,  1.6960,  ...,  1.4956,  1.8122,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([225, 128])
pred_vecs
torch.Size([225, 128])
cur_o_vecs
torch.Size([225, 128])
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.9076,  0.1091,  0.0000,  ...,  1.8380,  0.3866,  0.0000],
        [ 0.6884,  0.2921,  0.0000,  ...,  0.8192,  1.1239,  0.9294],
        [ 0.9076,  0.1091,  0.0000,  ...,  0.8192,  1.1239,  0.9294],
        ...,
        [ 0.4861,  0.1680,  0.0000,  ...,  1.6953,  1.9089,  0.4555],
        [ 0.5553,  0.8752,  0.0000,  ...,  1.6953,  1.9089,  0.4555],
        [ 0.2334,  0.3942,  0.0000,  ...,  1.6953,  1.9089,  0.4555]], device='cuda:0')
cur_s_vecs
torch.Size([225, 128])
pred_vecs
torch.Size([225, 128])
cur_o_vecs
torch.Size([225, 128])
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.0000,  1.1691,  2.8105,  ...,  0.0000,  0.8653,  0.0000],
        [ 0.0000,  0.5451,  2.5406,  ...,  0.0000,  1.1220,  0.0000],
        [ 0.0000,  1.1691,  2.8105,  ...,  0.0000,  1.1220,  0.0000],
        ...,
        [ 0.0000,  0.7990,  1.8393,  ...,  0.4440,  0.3160,  0.0000],
        [ 0.0620,  0.4277,  1.7948,  ...,  0.4440,  0.3160,  0.0000],
        [ 0.0000,  1.0616,  1.8696,  ...,  0.4440,  0.3160,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([225, 128])
pred_vecs
torch.Size([225, 128])
cur_o_vecs
torch.Size([225, 128])
cur_t_vecs
torch.Size([225, 384])
tensor([[ 2.2982,  0.7419,  0.0000,  ...,  0.7144,  0.0000,  0.0000],
        [ 1.9538,  0.6526,  0.0000,  ...,  0.0665,  0.1470,  0.0000],
        [ 2.2982,  0.7419,  0.0000,  ...,  0.0665,  0.1470,  0.0000],
        ...,
        [ 1.8161,  0.3453,  0.0000,  ...,  0.0000,  0.4011,  0.0000],
        [ 2.2830,  0.4365,  0.0000,  ...,  0.0000,  0.4011,  0.0000],
        [ 2.1832,  0.0000,  0.0000,  ...,  0.0000,  0.4011,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([265, 128])
pred_vecs
torch.Size([265, 128])
cur_o_vecs
torch.Size([265, 128])
cur_t_vecs
torch.Size([265, 384])
tensor([[ 3.4997e-01,  3.4816e-01,  3.0563e-02,  ..., -2.8331e+00,
          1.8448e-01, -8.5833e-01],
        [ 3.1312e-01,  4.7144e-01,  6.2663e-01,  ...,  6.4900e-01,
          2.1318e+00,  7.4369e-01],
        [ 3.4997e-01,  3.4816e-01,  3.0563e-02,  ..., -1.2746e-01,
         -1.6542e+00, -6.3892e-01],
        ...,
        [ 9.3983e-01, -1.4316e+00, -2.5371e-03,  ..., -1.4423e+00,
          1.1538e+00, -3.8263e-01],
        [-1.0301e-01, -4.2217e-01, -8.4140e-02,  ..., -1.4423e+00,
          1.1538e+00, -3.8263e-01],
        [ 9.7713e-01, -1.9916e+00,  5.0791e-01,  ..., -1.4423e+00,
          1.1538e+00, -3.8263e-01]], device='cuda:0')
cur_s_vecs
torch.Size([265, 128])
pred_vecs
torch.Size([265, 128])
cur_o_vecs
torch.Size([265, 128])
cur_t_vecs
torch.Size([265, 384])
tensor([[ 0.4787,  0.0000,  1.8688,  ...,  0.1291,  2.4826,  0.0000],
        [ 0.4866,  0.0000,  2.9952,  ...,  0.0000,  1.6945,  0.0000],
        [ 0.4787,  0.0000,  1.8688,  ...,  0.3685,  1.7972,  0.0000],
        ...,
        [ 0.8366,  0.0000,  2.4934,  ...,  1.6462,  1.3625,  0.0000],
        [ 0.6787,  0.0000,  0.8128,  ...,  1.6462,  1.3625,  0.0000],
        [ 1.1324,  0.0000,  2.5076,  ...,  1.6462,  1.3625,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([265, 128])
pred_vecs
torch.Size([265, 128])
cur_o_vecs
torch.Size([265, 128])
cur_t_vecs
torch.Size([265, 384])
tensor([[ 0.8652,  0.7098,  0.0491,  ...,  1.4663,  0.5711,  0.2901],
        [ 0.3563,  0.9584,  0.3259,  ...,  2.0333,  0.6289,  0.0000],
        [ 0.8652,  0.7098,  0.0491,  ...,  1.3788,  0.4800,  0.1790],
        ...,
        [ 1.0308,  1.2345,  0.0184,  ...,  1.4742,  1.6361,  0.9794],
        [ 1.0581,  0.5848,  0.0000,  ...,  1.4742,  1.6361,  0.9794],
        [ 0.5418,  0.3346,  0.0000,  ...,  1.4742,  1.6361,  0.9794]], device='cuda:0')
cur_s_vecs
torch.Size([265, 128])
pred_vecs
torch.Size([265, 128])
cur_o_vecs
torch.Size([265, 128])
cur_t_vecs
torch.Size([265, 384])
tensor([[ 0.0000,  1.0048,  2.6560,  ...,  0.0000,  1.3771,  0.0000],
        [ 0.0000,  0.7238,  2.1659,  ...,  0.0000,  0.6003,  0.1236],
        [ 0.0000,  1.0048,  2.6560,  ...,  0.0000,  0.5249,  0.0000],
        ...,
        [ 0.0000,  0.9933,  2.3652,  ...,  0.2909,  0.8370,  0.0000],
        [ 0.0000,  0.8291,  1.7796,  ...,  0.2909,  0.8370,  0.0000],
        [ 0.0000,  1.1101,  2.1611,  ...,  0.2909,  0.8370,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([265, 128])
pred_vecs
torch.Size([265, 128])
cur_o_vecs
torch.Size([265, 128])
cur_t_vecs
torch.Size([265, 384])
tensor([[ 2.0853,  0.3788,  0.0000,  ...,  0.2768,  0.0000,  0.0000],
        [ 1.9879,  0.4003,  0.0000,  ...,  0.4756,  0.0000,  0.0563],
        [ 2.0853,  0.3788,  0.0000,  ...,  0.7001,  0.0000,  0.0000],
        ...,
        [ 1.8583,  0.3559,  0.0000,  ...,  0.0000,  0.3134,  0.0000],
        [ 2.0727,  0.5377,  0.0000,  ...,  0.0000,  0.3134,  0.0000],
        [ 1.6995,  0.2388,  0.0000,  ...,  0.0000,  0.3134,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[-2.9840e-01,  1.8389e+00,  1.0862e+00,  ...,  6.1577e-01,
          1.2161e+00,  6.1383e-01],
        [-6.4204e-01,  5.3479e-01,  1.3874e-01,  ...,  6.1577e-01,
          1.2161e+00,  6.1383e-01],
        [-2.9840e-01,  1.8389e+00,  1.0862e+00,  ..., -1.7432e+00,
         -9.4700e-01,  2.7805e-01],
        ...,
        [-8.6657e-01, -1.6711e-01,  2.3598e-01,  ..., -1.4423e+00,
          1.1538e+00, -3.8260e-01],
        [ 2.7244e+00, -4.5191e-01,  3.9220e-01,  ..., -1.4423e+00,
          1.1538e+00, -3.8260e-01],
        [-2.0914e+00,  2.3484e+00, -1.0712e+00,  ..., -1.4423e+00,
          1.1538e+00, -3.8260e-01]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[ 1.3380,  0.0000,  2.0322,  ...,  0.0583,  1.7562,  0.0000],
        [ 0.5143,  0.0000,  1.8670,  ...,  0.0583,  1.7562,  0.0000],
        [ 1.3380,  0.0000,  2.0322,  ...,  0.0000,  1.2531,  0.0000],
        ...,
        [ 0.6413,  0.0000,  3.0601,  ...,  2.2656,  1.7460,  0.0000],
        [ 1.3953,  0.1185,  2.1420,  ...,  2.2656,  1.7460,  0.0000],
        [ 0.2257,  0.0000,  2.6059,  ...,  2.2656,  1.7460,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[ 0.4584,  0.6890,  0.3642,  ...,  1.5564,  0.2543,  0.5182],
        [ 0.4292,  0.6953,  0.1806,  ...,  1.5564,  0.2543,  0.5182],
        [ 0.4584,  0.6890,  0.3642,  ...,  0.9211,  0.2373,  0.0799],
        ...,
        [ 0.8062,  1.0492,  0.0000,  ...,  1.6110,  1.8692,  0.7142],
        [ 0.0000,  0.7860,  0.1890,  ...,  1.6110,  1.8692,  0.7142],
        [ 0.3761,  0.7906,  0.0000,  ...,  1.6110,  1.8692,  0.7142]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[ 0.0000,  0.4635,  2.5531,  ...,  0.0000,  1.0678,  0.0000],
        [ 0.0000,  0.9601,  1.6956,  ...,  0.0000,  1.0678,  0.0000],
        [ 0.0000,  0.4635,  2.5531,  ...,  0.0000,  1.0156,  0.0000],
        ...,
        [ 0.0000,  0.2667,  2.3425,  ...,  0.4172,  0.9944,  0.0000],
        [ 0.0000,  0.8195,  3.0168,  ...,  0.4172,  0.9944,  0.0000],
        [ 0.0000,  0.1385,  2.0768,  ...,  0.4172,  0.9944,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[ 2.0720,  0.2871,  0.0000,  ...,  0.1183,  0.0000,  0.0000],
        [ 2.0797,  0.2789,  0.0000,  ...,  0.1183,  0.0000,  0.0000],
        [ 2.0720,  0.2871,  0.0000,  ...,  0.5787,  0.0000,  0.0000],
        ...,
        [ 2.0587,  0.3178,  0.0000,  ...,  0.0000,  0.3323,  0.0000],
        [ 2.1110,  0.0056,  0.0000,  ...,  0.0000,  0.3323,  0.0000],
        [ 1.8761,  0.3949,  0.0000,  ...,  0.0000,  0.3323,  0.0000]], device='cuda:0')
t = 60 / 1000000
 G [bbox_pred]: 0.4351
 G [L1_pixel_loss]: 0.9515
 G [total_loss]: 1.6782
 G [g_gan_obj_loss]: 0.0084
 G [g_gan_img_loss]: 0.0081
 G [ac_loss]: 0.2751
 D_obj [d_ac_loss_real]: 3.0303
 D_obj [d_ac_loss_fake]: 2.7511
 D_obj [d_obj_gan_loss]: 1.1699
 D_img [d_img_gan_loss]: 1.2730
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 3.1311e-01,  4.7146e-01,  6.2662e-01,  ..., -1.8740e+00,
          8.0632e-01, -1.2538e+00],
        [ 3.1311e-01,  4.7146e-01,  6.2662e-01,  ..., -4.0524e-01,
          9.7787e-01,  2.0469e+00],
        [ 7.7865e-01, -1.0547e+00, -1.0570e+00,  ..., -1.2751e-01,
         -1.6542e+00, -6.3899e-01],
        ...,
        [ 6.1643e-01, -1.9228e+00,  6.5550e-01,  ..., -1.4423e+00,
          1.1538e+00, -3.8258e-01],
        [ 1.2186e+00, -3.2984e-01,  1.6749e+00,  ..., -1.4423e+00,
          1.1538e+00, -3.8258e-01],
        [-8.6660e-01, -1.6712e-01,  2.3597e-01,  ..., -1.4423e+00,
          1.1538e+00, -3.8258e-01]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.4468,  0.0000,  1.9500,  ...,  0.0000,  2.2129,  0.0000],
        [ 0.4468,  0.0000,  1.9500,  ...,  0.1281,  2.1019,  0.0000],
        [ 0.2607,  0.4156,  1.1105,  ...,  0.1449,  2.0439,  0.0000],
        ...,
        [ 1.3173,  0.0000,  2.2319,  ...,  2.7770,  1.9567,  0.0000],
        [ 0.8545,  0.0000,  2.2934,  ...,  2.7770,  1.9567,  0.0000],
        [ 0.4268,  0.0000,  2.6319,  ...,  2.7770,  1.9567,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.3681,  0.7650,  0.0182,  ...,  1.0366,  0.6917,  0.0819],
        [ 0.3681,  0.7650,  0.0182,  ...,  0.8195,  0.6758,  0.4400],
        [ 0.8761,  1.0347,  0.0794,  ...,  1.1654,  0.3181,  0.0000],
        ...,
        [ 0.0363,  0.3533,  0.0000,  ...,  1.5715,  1.5191,  0.8068],
        [ 0.7283,  0.9401,  0.0000,  ...,  1.5715,  1.5191,  0.8068],
        [ 0.6675,  0.8392,  0.0000,  ...,  1.5715,  1.5191,  0.8068]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.0000,  1.0669,  2.2656,  ...,  0.0000,  0.5117,  0.0221],
        [ 0.0000,  1.0669,  2.2656,  ...,  0.0000,  0.6708,  0.0000],
        [ 0.0000,  0.7076,  2.2586,  ...,  0.0000,  0.8237,  0.0000],
        ...,
        [ 0.0000,  0.5696,  2.7775,  ...,  0.2022,  0.9534,  0.0000],
        [ 0.0000,  0.7251,  2.4698,  ...,  0.2022,  0.9534,  0.0000],
        [ 0.0000,  0.3784,  1.7140,  ...,  0.2022,  0.9534,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 1.7234,  0.5208,  0.0000,  ...,  0.5785,  0.0000,  0.0000],
        [ 1.7234,  0.5208,  0.0000,  ...,  0.4021,  0.0000,  0.0000],
        [ 1.6588,  0.0000,  0.0000,  ...,  0.3285,  0.0000,  0.0000],
        ...,
        [ 2.5718,  0.1292,  0.0000,  ...,  0.0000,  0.2007,  0.0000],
        [ 2.4161,  0.4801,  0.0000,  ...,  0.0000,  0.2007,  0.0000],
        [ 2.7052,  0.5863,  0.0000,  ...,  0.0000,  0.2007,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 1.3915e+00,  1.1432e+00, -1.0841e+00,  ...,  1.6075e+00,
          1.0798e+00,  5.5101e-01],
        [-2.9845e-01,  1.8388e+00,  1.0862e+00,  ..., -3.9382e-01,
         -1.1456e+00, -8.9319e-01],
        [ 1.3915e+00,  1.1432e+00, -1.0841e+00,  ..., -3.9382e-01,
         -1.1456e+00, -8.9319e-01],
        ...,
        [ 9.7708e-01, -1.9916e+00,  5.0783e-01,  ..., -1.4423e+00,
          1.1537e+00, -3.8257e-01],
        [-8.6663e-01, -1.6712e-01,  2.3596e-01,  ..., -1.4423e+00,
          1.1537e+00, -3.8257e-01],
        [ 1.2186e+00, -3.2983e-01,  1.6749e+00,  ..., -1.4423e+00,
          1.1537e+00, -3.8257e-01]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.6655,  0.0000,  1.3953,  ...,  0.2701,  2.1414,  0.0000],
        [ 0.3187,  0.0000,  2.5182,  ...,  0.6018,  2.2501,  0.0000],
        [ 0.6655,  0.0000,  1.3953,  ...,  0.6018,  2.2501,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.0176,  ...,  2.3503,  2.2395,  0.0000],
        [ 0.2465,  0.0000,  2.1657,  ...,  2.3503,  2.2395,  0.0000],
        [ 0.4030,  0.0000,  2.5718,  ...,  2.3503,  2.2395,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.0000,  0.1663,  0.0000,  ...,  1.2942,  0.2222,  0.1908],
        [ 0.2189,  0.7444,  0.7546,  ...,  1.4754,  0.4235,  0.0309],
        [ 0.0000,  0.1663,  0.0000,  ...,  1.4754,  0.4235,  0.0309],
        ...,
        [ 0.7030,  0.5963,  0.0000,  ...,  1.5037,  1.1422,  1.0814],
        [ 0.6942,  0.1237,  0.0000,  ...,  1.5037,  1.1422,  1.0814],
        [ 0.5251,  1.2354,  0.1019,  ...,  1.5037,  1.1422,  1.0814]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.0000,  1.1551,  2.2436,  ...,  0.0000,  1.0710,  0.0000],
        [ 0.0000,  0.3809,  2.0044,  ...,  0.0000,  1.5055,  0.0000],
        [ 0.0000,  1.1551,  2.2436,  ...,  0.0000,  1.5055,  0.0000],
        ...,
        [ 0.0000,  0.2560,  2.2103,  ...,  0.1780,  0.7233,  0.0000],
        [ 0.0000,  1.2503,  2.6135,  ...,  0.1780,  0.7233,  0.0000],
        [ 0.0000,  0.3256,  2.1321,  ...,  0.1780,  0.7233,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([234, 128])
pred_vecs
torch.Size([234, 128])
cur_o_vecs
torch.Size([234, 128])
cur_t_vecs
torch.Size([234, 384])
tensor([[ 1.7623,  0.0000,  0.0000,  ...,  0.8562,  0.0000,  0.0000],
        [ 1.7360,  0.0871,  0.0000,  ...,  0.0000,  0.2434,  0.0000],
        [ 1.7623,  0.0000,  0.0000,  ...,  0.0000,  0.2434,  0.0000],
        ...,
        [ 1.7898,  0.4119,  0.0000,  ...,  0.0000,  0.2886,  0.0000],
        [ 2.1293,  0.4767,  0.0000,  ...,  0.0000,  0.2886,  0.0000],
        [ 1.8384,  0.3965,  0.0000,  ...,  0.0000,  0.2886,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([220, 128])
pred_vecs
torch.Size([220, 128])
cur_o_vecs
torch.Size([220, 128])
cur_t_vecs
torch.Size([220, 384])
tensor([[ 7.8741e-01, -7.1551e-01, -2.5874e+00,  ...,  1.7407e+00,
          5.2102e-01,  9.9093e-01],
        [ 7.1081e-01,  2.5016e-01,  2.0089e-01,  ...,  1.7407e+00,
          5.2102e-01,  9.9093e-01],
        [ 1.3915e+00,  1.1432e+00, -1.0842e+00,  ...,  1.2227e+00,
          6.4094e-01,  3.3591e-01],
        ...,
        [-6.4201e-01,  5.3483e-01,  1.3869e-01,  ..., -1.4423e+00,
          1.1537e+00, -3.8255e-01],
        [-9.4582e-01,  1.0840e+00, -3.1569e-01,  ..., -1.4423e+00,
          1.1537e+00, -3.8255e-01],
        [-2.6902e+00,  6.3666e-01, -6.3043e-01,  ..., -1.4423e+00,
          1.1537e+00, -3.8255e-01]], device='cuda:0')
cur_s_vecs
torch.Size([220, 128])
pred_vecs
torch.Size([220, 128])
cur_o_vecs
torch.Size([220, 128])
cur_t_vecs
torch.Size([220, 384])
tensor([[ 0.6491,  0.0000,  2.1822,  ...,  0.6793,  2.0687,  0.0000],
        [ 0.4807,  0.0000,  2.5427,  ...,  0.6793,  2.0687,  0.0000],
        [ 0.8036,  0.0000,  1.7841,  ...,  0.0000,  2.6683,  0.0000],
        ...,
        [ 1.3542,  0.0000,  1.9779,  ...,  1.7536,  1.8165,  0.0000],
        [ 0.0957,  0.2390,  1.4233,  ...,  1.7536,  1.8165,  0.0000],
        [ 0.0703,  0.0000,  2.1467,  ...,  1.7536,  1.8165,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([220, 128])
pred_vecs
torch.Size([220, 128])
cur_o_vecs
torch.Size([220, 128])
cur_t_vecs
torch.Size([220, 384])
tensor([[ 0.2738,  1.0579,  0.0000,  ...,  2.0658,  0.6915,  0.5543],
        [ 0.0000,  1.0613,  0.2702,  ...,  2.0658,  0.6915,  0.5543],
        [ 0.8486,  0.1600,  0.0000,  ...,  0.7617,  0.4622,  0.5009],
        ...,
        [ 1.2524,  0.1550,  0.3071,  ...,  1.7508,  1.6609,  0.5789],
        [ 1.0260,  0.8661,  0.0061,  ...,  1.7508,  1.6609,  0.5789],
        [ 0.5075,  0.3823,  0.0000,  ...,  1.7508,  1.6609,  0.5789]], device='cuda:0')
cur_s_vecs
torch.Size([220, 128])
pred_vecs
torch.Size([220, 128])
cur_o_vecs
torch.Size([220, 128])
cur_t_vecs
torch.Size([220, 384])
tensor([[ 0.0000,  0.5008,  2.0679,  ...,  0.0000,  0.7758,  0.0000],
        [ 0.0000,  1.0910,  2.9512,  ...,  0.0000,  0.7758,  0.0000],
        [ 0.0000,  1.1155,  2.0747,  ...,  0.0000,  0.3099,  0.0000],
        ...,
        [ 0.0000,  1.3785,  2.3696,  ...,  0.2455,  0.4108,  0.0000],
        [ 0.0000,  0.4863,  1.5610,  ...,  0.2455,  0.4108,  0.0000],
        [ 0.0000,  0.9811,  1.5159,  ...,  0.2455,  0.4108,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([220, 128])
pred_vecs
torch.Size([220, 128])
cur_o_vecs
torch.Size([220, 128])
cur_t_vecs
torch.Size([220, 384])
tensor([[ 2.0886,  0.2531,  0.0000,  ...,  0.1273,  0.0049,  0.0000],
        [ 2.4222,  0.0000,  0.0000,  ...,  0.1273,  0.0049,  0.0000],
        [ 2.2837,  0.4619,  0.0000,  ...,  0.8756,  0.0000,  0.0000],
        ...,
        [ 2.2824,  0.1058,  0.0000,  ...,  0.0991,  0.1629,  0.0000],
        [ 2.1213,  0.6017,  0.0000,  ...,  0.0991,  0.1629,  0.0000],
        [ 1.6612,  0.2444,  0.0000,  ...,  0.0991,  0.1629,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 1.2185e+00, -3.2980e-01,  1.6749e+00,  ...,  6.1572e-01,
          1.2161e+00,  6.1387e-01],
        [ 1.2185e+00, -3.2980e-01,  1.6749e+00,  ..., -2.8331e+00,
          1.8445e-01, -8.5827e-01],
        [ 6.1637e-01, -1.9227e+00,  6.5562e-01,  ...,  6.1572e-01,
          1.2161e+00,  6.1387e-01],
        ...,
        [ 9.8810e-01,  4.2658e-01, -1.6327e+00,  ..., -1.4423e+00,
          1.1537e+00, -3.8253e-01],
        [ 1.2185e+00, -3.2980e-01,  1.6749e+00,  ..., -1.4423e+00,
          1.1537e+00, -3.8253e-01],
        [-8.6665e-01, -1.6711e-01,  2.3591e-01,  ..., -1.4423e+00,
          1.1537e+00, -3.8253e-01]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.9919,  0.0000,  2.4317,  ...,  0.5840,  1.7715,  0.0000],
        [ 0.9919,  0.0000,  2.4317,  ...,  0.0000,  3.1175,  0.0000],
        [ 0.0099,  0.0000,  1.8930,  ...,  0.5840,  1.7715,  0.0000],
        ...,
        [ 1.1993,  0.0000,  1.8298,  ...,  2.1285,  2.0799,  0.0000],
        [ 0.9789,  0.0000,  1.7595,  ...,  2.1285,  2.0799,  0.0000],
        [ 0.3219,  0.0000,  1.4287,  ...,  2.1285,  2.0799,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 1.0664,  1.1034,  0.0000,  ...,  1.1328,  0.9669,  0.5704],
        [ 1.0664,  1.1034,  0.0000,  ...,  1.7535,  0.0000,  0.5521],
        [ 1.0790,  1.0583,  0.0000,  ...,  1.1328,  0.9669,  0.5704],
        ...,
        [ 0.0000,  0.1222,  0.0000,  ...,  1.5450,  1.3183,  0.9338],
        [ 0.5116,  1.2799,  0.2100,  ...,  1.5450,  1.3183,  0.9338],
        [ 0.3988,  0.9169,  0.0000,  ...,  1.5450,  1.3183,  0.9338]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  1.0466,  2.3960,  ...,  0.0000,  0.7037,  0.0000],
        [ 0.0000,  1.0466,  2.3960,  ...,  0.0000,  0.8241,  0.0000],
        [ 0.0000,  0.8579,  2.5112,  ...,  0.0000,  0.7037,  0.0000],
        ...,
        [ 0.0000,  1.1884,  2.5556,  ...,  0.0000,  0.6667,  0.0000],
        [ 0.0000,  0.7073,  2.0139,  ...,  0.0000,  0.6667,  0.0000],
        [ 0.1404,  0.6193,  1.5150,  ...,  0.0000,  0.6667,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([232, 128])
pred_vecs
torch.Size([232, 128])
cur_o_vecs
torch.Size([232, 128])
cur_t_vecs
torch.Size([232, 384])
tensor([[ 2.1777,  0.4262,  0.0000,  ...,  0.3439,  0.0000,  0.0000],
        [ 2.1777,  0.4262,  0.0000,  ...,  0.3977,  0.0000,  0.0430],
        [ 1.8087,  0.5065,  0.0000,  ...,  0.3439,  0.0000,  0.0000],
        ...,
        [ 2.2397,  0.2051,  0.0000,  ...,  0.2490,  0.2949,  0.0000],
        [ 1.9288,  0.2418,  0.0000,  ...,  0.2490,  0.2949,  0.0000],
        [ 2.0027,  0.6660,  0.0000,  ...,  0.2490,  0.2949,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 2.7246e+00, -4.5221e-01,  3.9220e-01,  ..., -2.8331e+00,
          1.8446e-01, -8.5827e-01],
        [ 8.2252e-02, -2.4487e-01,  1.5332e+00,  ..., -2.1133e+00,
          4.5527e-01,  1.3494e-01],
        [-1.2819e+00, -7.9162e-01,  4.7034e-01,  ..., -3.7445e-01,
          1.3337e-02,  6.9597e-01],
        ...,
        [ 3.5009e-01,  3.4805e-01,  3.0471e-02,  ..., -1.4423e+00,
          1.1537e+00, -3.8251e-01],
        [ 6.1634e-01, -1.9227e+00,  6.5566e-01,  ..., -1.4423e+00,
          1.1537e+00, -3.8251e-01],
        [ 4.1119e-01,  1.4785e+00, -2.0320e+00,  ..., -1.4423e+00,
          1.1537e+00, -3.8251e-01]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 1.3282,  0.0000,  1.6842,  ...,  0.0000,  2.0087,  0.0000],
        [ 0.1570,  0.0000,  2.1212,  ...,  1.0045,  1.0683,  0.0000],
        [ 0.6402,  0.0000,  2.5255,  ...,  0.0000,  1.6599,  0.0000],
        ...,
        [ 1.3073,  0.6038,  2.6383,  ...,  2.2499,  1.8677,  0.0000],
        [ 0.7589,  0.0000,  1.9134,  ...,  2.2499,  1.8677,  0.0000],
        [ 2.1085,  0.0000,  1.1975,  ...,  2.2499,  1.8677,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.9891,  0.3193,  0.0000,  ...,  1.5218,  0.6428,  0.1357],
        [ 0.7803,  0.3386,  0.0000,  ...,  1.1155,  0.4921,  0.3448],
        [ 0.5297,  0.5056,  0.0000,  ...,  2.2039,  0.6301,  0.1561],
        ...,
        [ 0.9143,  0.4453,  0.2054,  ...,  1.5879,  1.9631,  0.4408],
        [ 0.0000,  0.5331,  0.4373,  ...,  1.5879,  1.9631,  0.4408],
        [ 0.0000,  0.6391,  0.0000,  ...,  1.5879,  1.9631,  0.4408]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.0000,  1.0715,  2.4094,  ...,  0.0000,  1.0951,  0.0000],
        [ 0.0000,  1.0894,  2.4360,  ...,  0.0000,  0.7225,  0.0000],
        [ 0.0000,  0.5223,  1.8117,  ...,  0.0000,  0.8506,  0.0391],
        ...,
        [ 0.0000,  0.8437,  1.9865,  ...,  0.6236,  0.8544,  0.0000],
        [ 0.0000,  0.7917,  3.1230,  ...,  0.6236,  0.8544,  0.0000],
        [ 0.0000,  0.3565,  2.5165,  ...,  0.6236,  0.8544,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 1.8635,  0.4799,  0.0000,  ...,  0.2728,  0.0000,  0.0374],
        [ 1.7898,  0.2800,  0.0000,  ...,  0.4630,  0.0000,  0.0000],
        [ 1.7795,  0.5146,  0.0000,  ...,  0.3840,  0.0000,  0.0000],
        ...,
        [ 2.4861,  0.7340,  0.0000,  ...,  0.2233,  0.0446,  0.0000],
        [ 2.1998,  0.2331,  0.0000,  ...,  0.2233,  0.0446,  0.0000],
        [ 2.1306,  0.0212,  0.0000,  ...,  0.2233,  0.0446,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([42, 128])
pred_vecs
torch.Size([42, 128])
cur_o_vecs
torch.Size([42, 128])
cur_t_vecs
torch.Size([42, 384])
tensor([[-0.1160,  1.2264,  0.6010,  ...,  0.6157,  1.2161,  0.6138],
        [ 0.6163, -1.9226,  0.6557,  ..., -1.2296, -1.5085, -0.1495],
        [ 1.2185, -0.3298,  1.6748,  ..., -2.8331,  0.1845, -0.8583],
        ...,
        [-0.6420,  0.5349,  0.1386,  ..., -1.4423,  1.1536, -0.3825],
        [ 0.5968, -0.2636, -1.7062,  ..., -1.4423,  1.1536, -0.3825],
        [ 0.3501,  0.3480,  0.0305,  ..., -1.4423,  1.1536, -0.3825]], device='cuda:0')
cur_s_vecs
torch.Size([42, 128])
pred_vecs
torch.Size([42, 128])
cur_o_vecs
torch.Size([42, 128])
cur_t_vecs
torch.Size([42, 384])
tensor([[ 0.6284,  0.0000,  2.1488,  ...,  0.0000,  1.7291,  0.0000],
        [ 0.0000,  0.0000,  1.5212,  ...,  0.0000,  2.2125,  0.0000],
        [ 0.5504,  0.0000,  2.0253,  ...,  0.0000,  1.4096,  0.0000],
        ...,
        [ 0.8745,  0.0000,  2.2781,  ...,  1.9942,  2.3239,  0.0000],
        [ 0.8995,  0.0000,  1.3722,  ...,  1.9942,  2.3239,  0.0000],
        [ 0.4693,  0.0000,  2.8932,  ...,  1.9942,  2.3239,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([42, 128])
pred_vecs
torch.Size([42, 128])
cur_o_vecs
torch.Size([42, 128])
cur_t_vecs
torch.Size([42, 384])
tensor([[ 0.9710,  0.4818,  0.0000,  ...,  0.6160,  0.6381,  0.7159],
        [ 0.7212,  1.1751,  0.0000,  ...,  1.2461,  0.3370,  0.0000],
        [ 0.7794,  1.7546,  0.5875,  ...,  2.1222,  0.8743,  0.0713],
        ...,
        [ 1.1859,  0.0531,  0.4626,  ...,  1.9994,  1.5725,  0.3167],
        [ 0.5339,  0.4808,  0.0000,  ...,  1.9994,  1.5725,  0.3167],
        [ 0.9265,  0.8629,  0.3047,  ...,  1.9994,  1.5725,  0.3167]], device='cuda:0')
cur_s_vecs
torch.Size([42, 128])
pred_vecs
torch.Size([42, 128])
cur_o_vecs
torch.Size([42, 128])
cur_t_vecs
torch.Size([42, 384])
tensor([[ 0.0000,  0.7115,  2.1319,  ...,  0.0000,  0.7333,  0.0000],
        [ 0.0564,  0.3277,  3.1627,  ...,  0.0000,  0.3842,  0.0000],
        [ 0.0000,  1.2814,  3.9285,  ...,  0.0000,  0.5405,  0.0000],
        ...,
        [ 0.0000,  1.1800,  1.9908,  ...,  0.1920,  0.5690,  0.0000],
        [ 0.0000,  1.5921,  2.6353,  ...,  0.1920,  0.5690,  0.0000],
        [ 0.0000,  0.3618,  1.8519,  ...,  0.1920,  0.5690,  0.0000]], device='cuda:0')254589a
102421d
20087d
119761c
288921b
316353e
400848e
214873b
443086d
459110b
299643b
457086c
552461b
90869b
246099a
570579a
377278b
459208b
546261e
302397b
279345a
142587b
488980a
97170c
96728b
20291d
581061b
104537e
238712c
213530e
241178a
474105b
230570b
101426a
49286d
177381e
515300d
282978b
543224b
480576d
320537b
167995e
438899c
462929c
208347b
349153c
88325e
390298c
245534b
438267e
23176c
243796d
244122d
71631c
91263a
39716b
189033e
389772d
31442c
257713b
233112e
310518e
324740d
216026b
346915c
53464b
150354d
71737d
485368b
416188a
327536c
10082e
441816e
96067b
127750c
210266a
363190c
109568a
131374d
245242c
540926b
126808e
285357c
557408d
47909e
535265c
491558e
310564d
554319c
165299d
84896e
353982b
42704a
107108a
185963c
346724d
134597e
485064e
84034b
278899b
313608d
412992d
102834e
85549b
509514e
218886e
295693b
274424a
159199a
511143a
163829e
113019c
171309a
13595b
493485a
553401b
400850e
14798d
478805d
412384d
444399d
146120b
452459c
195894e
485491e
58979c
170687a
102609d
365027d
520389c
217720d
84815e
549098e
43171d
567305a
531778b
75362a
578119d
404271d
289172d
393647a
392476a
522235a
533452e
103575d
550278a
340897e
81035b
4764e
573149e
505642a
160152a
4761e
569174b
6710a
223420c
24026a
288313e
132860e
134849b
173565d
89707e
488583b
560563d
21531c
144371b
22658d
577712e
52324b
126204e
400999a
248591a
26747c
61202b
78286b
2477b
367442b
276694e
11690a
545257e
150594d
568677b
324611a
224629e
261664e
157356a
327413b
354938e
37291d
283809a
308295c
10138e
167126b
463168c
76802b
576526e
153574c
572042e
323129a
521995d
306127c
468751d
359164c
183539b
509267e
295850e
250724b
302576c
349527d
432627d
197029b
308803a
59582d
60378b
454044a
388923b
502557d
176726c
572147e
169395c
524924d
329151a
494795d
367605a
277346a
529352e
187803e
39360d
188498c
194050c
477468a
139789e
217991b
344025a
269015d
110777e
566547e
285651a
518918b
134413c
336854d
312359c
414212a
522489d
215612c
221633e
507148b
3001a
557434a
397938a
207573a
426880c
6075a
30958c
101877c
152245e
295491a
529944e
330954d
396369b
28349d
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
189187a
233869d
113619d
66309b
545929c
297009a
208267a
404395b
322121b
525273e
173814c
455902d
517417b
569602c
408946a
257951c
237859c
555800d
472320a
428304c
191690d
43742e
522704b
323479a
174303b
259853a
18155c
208585b
293576a
217135c
167074b
431997e
5383d
327813a
121172a
385540c
455877a
331302b
168417b
189648b
159403e
409754e
154597e
132516a
457448d
242167b
47774c
107620e
289100a
127450a
260109a
103558b
355175a
466134b
92107d
135989c
103582a
364571b
163412b
137339b
13576e
332292c
500982b
6421c
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_s_vecs
torch.Size([42, 128])
pred_vecs
torch.Size([42, 128])
cur_o_vecs
torch.Size([42, 128])
cur_t_vecs
torch.Size([42, 384])
tensor([[ 1.5773,  0.6226,  0.0000,  ...,  0.8492,  0.0000,  0.2675],
        [ 2.0406,  0.6638,  0.0000,  ...,  0.6012,  0.0000,  0.0000],
        [ 1.7832,  0.2168,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 2.0813,  0.7246,  0.0000,  ...,  0.1240,  0.1567,  0.0000],
        [ 2.6958,  0.2678,  0.0000,  ...,  0.1240,  0.1567,  0.0000],
        [ 1.9837,  0.3653,  0.0000,  ...,  0.1240,  0.1567,  0.0000]], device='cuda:0')
Starting epoch 7
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[-6.4195e-01,  5.3496e-01,  1.3864e-01,  ..., -2.8330e+00,
          1.8444e-01, -8.5827e-01],
        [ 3.5010e-01,  3.4798e-01,  3.0471e-02,  ..., -1.7431e+00,
         -9.4686e-01,  2.7817e-01],
        [-6.4195e-01,  5.3496e-01,  1.3864e-01,  ...,  8.8160e-01,
         -2.6291e-01,  1.0674e+00],
        ...,
        [-8.6671e-01, -1.6708e-01,  2.3585e-01,  ..., -1.4423e+00,
          1.1536e+00, -3.8250e-01],
        [ 1.3915e+00,  1.1431e+00, -1.0841e+00,  ..., -1.4423e+00,
          1.1536e+00, -3.8250e-01],
        [ 2.6632e+00, -9.4966e-01,  1.3984e-01,  ..., -1.4423e+00,
          1.1536e+00, -3.8250e-01]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.5414,  0.0000,  1.5791,  ...,  0.0000,  1.8313,  0.0000],
        [ 0.9504,  0.0000,  2.4471,  ...,  0.0000,  2.5304,  0.0000],
        [ 0.5414,  0.0000,  1.5791,  ...,  1.0531,  2.1891,  0.0000],
        ...,
        [ 0.9993,  0.0000,  0.7811,  ...,  2.1152,  1.8396,  0.0000],
        [ 0.5388,  0.0000,  2.1500,  ...,  2.1152,  1.8396,  0.0000],
        [ 0.0000,  0.0000,  1.8606,  ...,  2.1152,  1.8396,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.6686,  0.3093,  0.3408,  ...,  1.6061,  0.4888,  0.1199],
        [ 0.5142,  0.6818,  0.0000,  ...,  1.5752,  0.0000,  0.0000],
        [ 0.6686,  0.3093,  0.3408,  ...,  1.3108,  0.3151,  0.4632],
        ...,
        [ 0.4529,  0.5221,  0.0000,  ...,  1.5929,  1.7082,  0.8876],
        [ 0.0422,  1.5834,  0.0000,  ...,  1.5929,  1.7082,  0.8876],
        [ 0.9147,  0.7046,  0.0000,  ...,  1.5929,  1.7082,  0.8876]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.0000,  1.0152,  1.9887,  ...,  0.0000,  0.9687,  0.0000],
        [ 0.0000,  0.5620,  2.5967,  ...,  0.0000,  0.7207,  0.0000],
        [ 0.0000,  1.0152,  1.9887,  ...,  0.0000,  1.1820,  0.0000],
        ...,
        [ 0.0000,  0.9488,  2.5826,  ...,  0.4521,  0.6154,  0.0000],
        [ 0.0000,  0.5152,  1.5622,  ...,  0.4521,  0.6154,  0.0000],
        [ 0.0000,  0.4580,  2.1013,  ...,  0.4521,  0.6154,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 2.2063,  0.2002,  0.0000,  ...,  0.0000,  0.0419,  0.0000],
        [ 2.1619,  0.1567,  0.0000,  ...,  0.6451,  0.0000,  0.1627],
        [ 2.2063,  0.2002,  0.0000,  ...,  0.0696,  0.0000,  0.0000],
        ...,
        [ 2.3198,  0.2190,  0.0000,  ...,  0.0445,  0.4384,  0.0000],
        [ 2.1903,  0.7770,  0.0000,  ...,  0.0445,  0.4384,  0.0000],
        [ 1.7024,  0.1337,  0.0000,  ...,  0.0445,  0.4384,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([229, 128])
pred_vecs
torch.Size([229, 128])
cur_o_vecs
torch.Size([229, 128])
cur_t_vecs
torch.Size([229, 384])
tensor([[-8.6674e-01, -1.6705e-01,  2.3583e-01,  ..., -1.2774e-01,
         -1.6544e+00, -6.3921e-01],
        [ 3.1302e-01,  4.7170e-01,  6.2645e-01,  ...,  6.1565e-01,
          1.2161e+00,  6.1374e-01],
        [-8.6674e-01, -1.6705e-01,  2.3583e-01,  ...,  4.1934e-01,
         -8.2504e-01,  5.6557e-01],
        ...,
        [ 6.1630e-01, -1.9225e+00,  6.5574e-01,  ..., -1.4423e+00,
          1.1536e+00, -3.8250e-01],
        [ 2.9698e-01, -6.5333e-01, -1.2044e-01,  ..., -1.4423e+00,
          1.1536e+00, -3.8250e-01],
        [-8.6674e-01, -1.6705e-01,  2.3583e-01,  ..., -1.4423e+00,
          1.1536e+00, -3.8250e-01]], device='cuda:0')
cur_s_vecs
torch.Size([229, 128])
pred_vecs
torch.Size([229, 128])
cur_o_vecs
torch.Size([229, 128])
cur_t_vecs
torch.Size([229, 384])
tensor([[ 0.6756,  0.0000,  1.2713,  ...,  0.2341,  1.5784,  0.0000],
        [ 0.1767,  0.0000,  1.8794,  ...,  0.0000,  1.8867,  0.0000],
        [ 0.6756,  0.0000,  1.2713,  ...,  0.0000,  2.1609,  0.0000],
        ...,
        [ 1.4763,  0.0000,  1.9212,  ...,  2.2319,  1.9669,  0.0000],
        [ 0.0000,  0.0000,  1.6499,  ...,  2.2319,  1.9669,  0.0000],
        [ 0.0000,  0.0000,  1.9251,  ...,  2.2319,  1.9669,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([229, 128])
pred_vecs
torch.Size([229, 128])
cur_o_vecs
torch.Size([229, 128])
cur_t_vecs
torch.Size([229, 384])
tensor([[ 0.2354,  0.9678,  0.0000,  ...,  1.2858,  0.3819,  0.0664],
        [ 0.5703,  0.5809,  0.0834,  ...,  1.1487,  0.6399,  0.1701],
        [ 0.2354,  0.9678,  0.0000,  ...,  1.3135,  0.0000,  0.2717],
        ...,
        [ 0.3982,  0.4654,  0.0000,  ...,  1.4433,  2.3864,  0.8102],
        [ 0.3876,  1.3503,  0.0000,  ...,  1.4433,  2.3864,  0.8102],
        [ 0.7076,  1.0438,  0.0000,  ...,  1.4433,  2.3864,  0.8102]], device='cuda:0')
cur_s_vecs
torch.Size([229, 128])
pred_vecs
torch.Size([229, 128])
cur_o_vecs
torch.Size([229, 128])
cur_t_vecs
torch.Size([229, 384])
tensor([[ 0.0000,  0.8624,  2.3350,  ...,  0.0000,  0.5619,  0.0000],
        [ 0.0000,  0.5014,  2.2258,  ...,  0.0097,  0.6420,  0.0000],
        [ 0.0000,  0.8624,  2.3350,  ...,  0.0000,  0.5804,  0.0000],
        ...,
        [ 0.0000,  1.3316,  3.1075,  ...,  0.3127,  0.9250,  0.0000],
        [ 0.0000,  0.8271,  1.9381,  ...,  0.3127,  0.9250,  0.0000],
        [ 0.0000,  0.9499,  2.4268,  ...,  0.3127,  0.9250,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([229, 128])
pred_vecs
torch.Size([229, 128])
cur_o_vecs
torch.Size([229, 128])
cur_t_vecs
torch.Size([229, 384])
tensor([[ 2.0138,  0.2417,  0.0000,  ...,  0.8190,  0.0000,  0.2231],
        [ 1.9685,  0.1184,  0.0000,  ...,  0.7213,  0.0000,  0.4334],
        [ 2.0138,  0.2417,  0.0000,  ...,  0.6880,  0.0000,  0.0000],
        ...,
        [ 2.4285,  0.5084,  0.0000,  ...,  0.0000,  0.1991,  0.0000],
        [ 2.1605,  0.9713,  0.0000,  ...,  0.0000,  0.1991,  0.0000],
        [ 2.1016,  0.2514,  0.0000,  ...,  0.0000,  0.1991,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([237, 128])
pred_vecs
torch.Size([237, 128])
cur_o_vecs
torch.Size([237, 128])
cur_t_vecs
torch.Size([237, 384])
tensor([[ 5.5417e-01, -3.3976e-01, -1.9773e+00,  ...,  1.5724e+00,
         -4.7954e-02, -4.2298e-01],
        [ 5.5417e-01, -3.3976e-01, -1.9773e+00,  ...,  6.1563e-01,
          1.2161e+00,  6.1371e-01],
        [ 1.2183e+00, -3.2970e-01,  1.6749e+00,  ...,  6.1563e-01,
          1.2161e+00,  6.1371e-01],
        ...,
        [ 6.1628e-01, -1.9225e+00,  6.5577e-01,  ..., -1.4423e+00,
          1.1536e+00, -3.8249e-01],
        [-6.4197e-01,  5.3503e-01,  1.3861e-01,  ..., -1.4423e+00,
          1.1536e+00, -3.8249e-01],
        [ 3.1301e-01,  4.7178e-01,  6.2642e-01,  ..., -1.4423e+00,
          1.1536e+00, -3.8249e-01]], device='cuda:0')
cur_s_vecs
torch.Size([237, 128])
pred_vecs
torch.Size([237, 128])
cur_o_vecs
torch.Size([237, 128])
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.6835,  0.0000,  2.3206,  ...,  0.0000,  1.5289,  0.0000],
        [ 0.6835,  0.0000,  2.3206,  ...,  0.4106,  1.3041,  0.0000],
        [ 0.0000,  0.0000,  2.9186,  ...,  0.4106,  1.3041,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.0071,  ...,  1.7634,  1.4205,  0.0000],
        [ 1.0769,  0.0000,  1.0206,  ...,  1.7634,  1.4205,  0.0000],
        [ 1.0208,  0.0000,  2.0540,  ...,  1.7634,  1.4205,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([237, 128])
pred_vecs
torch.Size([237, 128])
cur_o_vecs
torch.Size([237, 128])
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.3380,  0.4407,  0.0000,  ...,  1.5722,  0.2430,  0.2411],
        [ 0.3380,  0.4407,  0.0000,  ...,  0.9795,  0.7266,  0.6406],
        [ 0.7454,  0.9045,  0.1279,  ...,  0.9795,  0.7266,  0.6406],
        ...,
        [ 1.0792,  1.5831,  0.0000,  ...,  1.6858,  1.8153,  0.2417],
        [ 1.0593,  0.6858,  0.0000,  ...,  1.6858,  1.8153,  0.2417],
        [ 0.4220,  0.9948,  0.4397,  ...,  1.6858,  1.8153,  0.2417]], device='cuda:0')
cur_s_vecs
torch.Size([237, 128])
pred_vecs
torch.Size([237, 128])
cur_o_vecs
torch.Size([237, 128])
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  1.0592,  2.2740,  ...,  0.0000,  0.7453,  0.0000],
        [ 0.0000,  1.0592,  2.2740,  ...,  0.0000,  1.1830,  0.0000],
        [ 0.0000,  0.3800,  1.7647,  ...,  0.0000,  1.1830,  0.0000],
        ...,
        [ 0.0000,  0.7975,  2.2456,  ...,  0.2590,  0.6385,  0.0000],
        [ 0.0000,  0.7703,  2.0441,  ...,  0.2590,  0.6385,  0.0000],
        [ 0.0000,  1.1152,  3.0429,  ...,  0.2590,  0.6385,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([237, 128])
pred_vecs
torch.Size([237, 128])
cur_o_vecs
torch.Size([237, 128])
cur_t_vecs
torch.Size([237, 384])
tensor([[ 1.9595,  0.4471,  0.0000,  ...,  0.7291,  0.0000,  0.0000],
        [ 1.9595,  0.4471,  0.0000,  ...,  0.3815,  0.0000,  0.0000],
        [ 1.6776,  0.3145,  0.0000,  ...,  0.3815,  0.0000,  0.0000],
        ...,
        [ 1.7959,  0.5807,  0.0000,  ...,  0.0000,  0.5590,  0.0000],
        [ 2.5781,  0.6445,  0.0000,  ...,  0.0000,  0.5590,  0.0000],
        [ 2.3931,  0.0000,  0.0000,  ...,  0.0000,  0.5590,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 6.1626e-01, -1.9224e+00,  6.5580e-01,  ..., -1.7852e-01,
         -1.1741e+00,  4.7697e-01],
        [ 1.2182e+00, -3.2969e-01,  1.6749e+00,  ..., -2.8330e+00,
          1.8440e-01, -8.5822e-01],
        [ 1.2182e+00, -3.2969e-01,  1.6749e+00,  ..., -2.8330e+00,
          1.8440e-01, -8.5822e-01],
        ...,
        [-6.4200e-01,  5.3506e-01,  1.3860e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8249e-01],
        [-8.6683e-01, -1.6703e-01,  2.3580e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8249e-01],
        [-2.6902e+00,  6.3673e-01, -6.3040e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8249e-01]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.0000,  0.0000,  1.8156,  ...,  0.1272,  2.5760,  0.0000],
        [ 0.9456,  0.0000,  2.1161,  ...,  0.0000,  2.0671,  0.0000],
        [ 0.9456,  0.0000,  2.1161,  ...,  0.0000,  2.0671,  0.0000],
        ...,
        [ 0.7542,  0.0000,  1.6100,  ...,  1.5918,  1.7918,  0.0000],
        [ 0.1405,  0.0000,  2.5241,  ...,  1.5918,  1.7918,  0.0000],
        [ 0.2589,  0.0000,  0.9636,  ...,  1.5918,  1.7918,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 1.3092,  0.5239,  0.0000,  ...,  0.6782,  0.0000,  0.0000],
        [ 1.1442,  1.3485,  0.0000,  ...,  1.1813,  0.1094,  0.4511],
        [ 1.1442,  1.3485,  0.0000,  ...,  1.1813,  0.1094,  0.4511],
        ...,
        [ 0.9675,  0.1739,  0.0000,  ...,  1.7082,  1.7673,  0.9426],
        [ 0.6560,  0.9100,  0.0084,  ...,  1.7082,  1.7673,  0.9426],
        [ 0.6944,  0.2378,  0.0000,  ...,  1.7082,  1.7673,  0.9426]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.0000,  0.0000,  2.1550,  ...,  0.0000,  1.1550,  0.0000],
        [ 0.0000,  1.5825,  3.3044,  ...,  0.0000,  0.6323,  0.0000],
        [ 0.0000,  1.5825,  3.3044,  ...,  0.0000,  0.6323,  0.0000],
        ...,
        [ 0.0000,  1.4434,  1.9773,  ...,  0.6499,  0.4391,  0.0000],
        [ 0.0000,  0.0000,  2.0424,  ...,  0.6499,  0.4391,  0.0000],
        [ 0.0000,  1.5841,  2.1550,  ...,  0.6499,  0.4391,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 1.9140,  0.1753,  0.0000,  ...,  0.3354,  0.0000,  0.0000],
        [ 2.6401,  0.7303,  0.0000,  ...,  0.6043,  0.0000,  0.0000],
        [ 2.6401,  0.7303,  0.0000,  ...,  0.6043,  0.0000,  0.0000],
        ...,
        [ 2.2178,  0.7564,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.9907,  0.3200,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.1946,  0.2588,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
t = 70 / 1000000
 G [bbox_pred]: 0.3379
 G [L1_pixel_loss]: 0.9208
 G [total_loss]: 1.5547
 G [g_gan_obj_loss]: 0.0091
 G [g_gan_img_loss]: 0.0081
 G [ac_loss]: 0.2788
 D_obj [d_ac_loss_real]: 3.1024
 D_obj [d_ac_loss_fake]: 2.7884
 D_obj [d_obj_gan_loss]: 1.1633
 D_img [d_img_gan_loss]: 1.2268
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[-6.4202e-01,  5.3509e-01,  1.3858e-01,  ..., -2.8330e+00,
          1.8440e-01, -8.5821e-01],
        [ 6.2699e-01,  7.1959e-01, -1.0827e+00,  ..., -3.7472e-01,
          1.3237e-02,  6.9596e-01],
        [ 2.4782e-01,  2.3569e+00, -1.1858e+00,  ..., -1.7431e+00,
         -9.4683e-01,  2.7833e-01],
        ...,
        [ 1.2069e+00,  6.5384e-01, -9.2770e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8250e-01],
        [-5.0184e-01, -2.2705e-01,  1.5245e+00,  ..., -1.4423e+00,
          1.1535e+00, -3.8250e-01],
        [ 2.7247e+00, -4.5256e-01,  3.9225e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8250e-01]], device='cuda:0')
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[ 0.3053,  0.0000,  1.8772,  ...,  0.0000,  2.7817,  0.0000],
        [ 0.8213,  0.0000,  1.8400,  ...,  0.0000,  1.9543,  0.0000],
        [ 0.3352,  0.0000,  2.6043,  ...,  0.0000,  2.1556,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.2012,  ...,  2.3160,  1.6841,  0.0000],
        [ 0.6684,  0.0000,  2.7376,  ...,  2.3160,  1.6841,  0.0000],
        [ 0.1041,  0.0000,  1.8622,  ...,  2.3160,  1.6841,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[ 0.9316,  0.2749,  0.1490,  ...,  1.2356,  0.2593,  0.4941],
        [ 1.0520,  0.0000,  0.0726,  ...,  2.2686,  0.5689,  0.3370],
        [ 0.7652,  0.4905,  0.0808,  ...,  1.1054,  0.0000,  0.1992],
        ...,
        [ 0.7331,  1.1424,  0.3749,  ...,  1.5693,  1.8138,  1.3501],
        [ 1.1583,  0.2411,  0.1538,  ...,  1.5693,  1.8138,  1.3501],
        [ 0.8869,  0.5752,  0.1281,  ...,  1.5693,  1.8138,  1.3501]], device='cuda:0')
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[ 0.0000,  1.1063,  2.0817,  ...,  0.0000,  1.0292,  0.0000],
        [ 0.0000,  1.5049,  2.5887,  ...,  0.0000,  0.4893,  0.0000],
        [ 0.0000,  0.9401,  2.1797,  ...,  0.0000,  0.7992,  0.0000],
        ...,
        [ 0.0000,  0.5893,  3.2568,  ...,  0.3196,  0.7527,  0.0000],
        [ 0.0000,  1.3169,  2.6871,  ...,  0.3196,  0.7527,  0.0000],
        [ 0.0000,  1.1313,  2.2204,  ...,  0.3196,  0.7527,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([235, 128])
pred_vecs
torch.Size([235, 128])
cur_o_vecs
torch.Size([235, 128])
cur_t_vecs
torch.Size([235, 384])
tensor([[ 1.7176,  0.1143,  0.0000,  ...,  0.1764,  0.0000,  0.0000],
        [ 2.1884,  0.5501,  0.0000,  ...,  0.6122,  0.0000,  0.0000],
        [ 1.4913,  0.2263,  0.0000,  ...,  0.7625,  0.0000,  0.0000],
        ...,
        [ 2.4032,  0.1153,  0.0000,  ...,  0.0000,  0.2555,  0.0000],
        [ 2.1451,  0.0000,  0.0000,  ...,  0.0000,  0.2555,  0.0000],
        [ 1.9926,  0.1267,  0.0000,  ...,  0.0000,  0.2555,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([248, 128])
pred_vecs
torch.Size([248, 128])
cur_o_vecs
torch.Size([248, 128])
cur_t_vecs
torch.Size([248, 384])
tensor([[-8.6692e-01, -1.6709e-01,  2.3579e-01,  ..., -1.7431e+00,
         -9.4683e-01,  2.7837e-01],
        [-6.4205e-01,  5.3510e-01,  1.3857e-01,  ...,  6.1561e-01,
          1.2161e+00,  6.1366e-01],
        [-6.4205e-01,  5.3510e-01,  1.3857e-01,  ...,  7.7939e-01,
         -1.6075e+00, -3.0134e-01],
        ...,
        [ 2.4780e-01,  2.3569e+00, -1.1858e+00,  ..., -1.4423e+00,
          1.1535e+00, -3.8250e-01],
        [ 1.6009e-01,  8.8044e-01,  2.2909e+00,  ..., -1.4423e+00,
          1.1535e+00, -3.8250e-01],
        [ 6.1620e-01, -1.9224e+00,  6.5587e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8250e-01]], device='cuda:0')
cur_s_vecs
torch.Size([248, 128])
pred_vecs
torch.Size([248, 128])
cur_o_vecs
torch.Size([248, 128])
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.4903,  0.0000,  2.2423,  ...,  0.0000,  2.4385,  0.0000],
        [ 0.8778,  0.0000,  1.8268,  ...,  0.0190,  1.3515,  0.0000],
        [ 0.8778,  0.0000,  1.8268,  ...,  0.0000,  1.3591,  0.0000],
        ...,
        [ 0.8015,  0.0000,  1.7442,  ...,  2.1495,  1.4346,  0.0000],
        [ 0.0000,  0.0000,  3.8775,  ...,  2.1495,  1.4346,  0.0000],
        [ 0.3960,  0.0000,  2.3446,  ...,  2.1495,  1.4346,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([248, 128])
pred_vecs
torch.Size([248, 128])
cur_o_vecs
torch.Size([248, 128])
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.6101,  0.6393,  0.0000,  ...,  1.8327,  0.2127,  0.0000],
        [ 0.5280,  0.0495,  0.0000,  ...,  1.5604,  0.5970,  0.1592],
        [ 0.5280,  0.0495,  0.0000,  ...,  1.6460,  0.0830,  0.2611],
        ...,
        [ 0.9565,  1.0190,  0.4450,  ...,  1.4614,  1.5942,  0.8343],
        [ 1.4195,  0.1453,  0.0000,  ...,  1.4614,  1.5942,  0.8343],
        [ 0.0000,  0.5049,  0.0000,  ...,  1.4614,  1.5942,  0.8343]], device='cuda:0')
cur_s_vecs
torch.Size([248, 128])
pred_vecs
torch.Size([248, 128])
cur_o_vecs
torch.Size([248, 128])
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.0000,  0.3348,  2.2407,  ...,  0.0000,  0.7887,  0.0000],
        [ 0.0000,  1.5738,  2.0788,  ...,  0.0000,  0.7332,  0.0000],
        [ 0.0000,  1.5738,  2.0788,  ...,  0.0000,  0.7599,  0.0000],
        ...,
        [ 0.0000,  0.8116,  2.2578,  ...,  0.3314,  1.5124,  0.0000],
        [ 0.0000,  0.0000,  1.4960,  ...,  0.3314,  1.5124,  0.0000],
        [ 0.0000,  1.0521,  3.3693,  ...,  0.3314,  1.5124,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([248, 128])
pred_vecs
torch.Size([248, 128])
cur_o_vecs
torch.Size([248, 128])
cur_t_vecs
torch.Size([248, 384])
tensor([[ 2.3168,  0.2379,  0.0000,  ...,  0.5712,  0.0000,  0.0000],
        [ 2.1471,  0.8019,  0.0000,  ...,  0.4547,  0.0000,  0.0000],
        [ 2.1471,  0.8019,  0.0000,  ...,  0.7785,  0.0000,  0.0000],
        ...,
        [ 2.1363,  0.7720,  0.0000,  ...,  0.0000,  0.2038,  0.0000],
        [ 1.5953,  0.5278,  0.0000,  ...,  0.0000,  0.2038,  0.0000],
        [ 2.6148,  0.0891,  0.0000,  ...,  0.0000,  0.2038,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[ 5.9702e-01, -2.6347e-01, -1.7066e+00,  ..., -1.7431e+00,
         -9.4681e-01,  2.7840e-01],
        [ 5.9702e-01, -2.6347e-01, -1.7066e+00,  ..., -1.6897e-01,
         -1.2376e+00, -1.5369e+00],
        [ 5.9702e-01, -2.6347e-01, -1.7066e+00,  ..., -1.6897e-01,
         -1.2376e+00, -1.5369e+00],
        ...,
        [-2.9832e-01,  1.8382e+00,  1.0864e+00,  ..., -1.4423e+00,
          1.1535e+00, -3.8252e-01],
        [-8.6696e-01, -1.6711e-01,  2.3578e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8252e-01],
        [ 6.1619e-01, -1.9223e+00,  6.5591e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8252e-01]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[ 1.0855,  0.0000,  1.4605,  ...,  0.0000,  1.5002,  0.0000],
        [ 1.0855,  0.0000,  1.4605,  ...,  0.4008,  1.2695,  0.0000],
        [ 1.0855,  0.0000,  1.4605,  ...,  0.4008,  1.2695,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.7574,  ...,  2.3061,  2.0212,  0.0000],
        [ 0.0335,  0.0000,  1.7594,  ...,  2.3061,  2.0212,  0.0000],
        [ 0.3813,  0.0000,  1.1661,  ...,  2.3061,  2.0212,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.0000,  0.2927,  0.0000,  ...,  2.0330,  0.0000,  0.0801],
        [ 0.0000,  0.2927,  0.0000,  ...,  1.3794,  0.5914,  0.7663],
        [ 0.0000,  0.2927,  0.0000,  ...,  1.3794,  0.5914,  0.7663],
        ...,
        [ 0.2022,  0.6574,  0.0000,  ...,  1.3862,  2.2407,  1.0573],
        [ 0.1434,  0.6987,  0.0000,  ...,  1.3862,  2.2407,  1.0573],
        [ 1.1157,  1.0823,  0.0000,  ...,  1.3862,  2.2407,  1.0573]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.0000,  1.0681,  2.5405,  ...,  0.0000,  1.1403,  0.0000],
        [ 0.0000,  1.0681,  2.5405,  ...,  0.0000,  0.9597,  0.0000],
        [ 0.0000,  1.0681,  2.5405,  ...,  0.0000,  0.9597,  0.0000],
        ...,
        [ 0.0000,  0.9543,  2.2471,  ...,  0.1867,  0.6234,  0.0000],
        [ 0.0000,  1.1706,  2.1625,  ...,  0.1867,  0.6234,  0.0000],
        [ 0.0000,  1.0422,  2.6160,  ...,  0.1867,  0.6234,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([242, 128])
pred_vecs
torch.Size([242, 128])
cur_o_vecs
torch.Size([242, 128])
cur_t_vecs
torch.Size([242, 384])
tensor([[ 1.9402,  0.1794,  0.0000,  ...,  0.5212,  0.0000,  0.0000],
        [ 1.9402,  0.1794,  0.0000,  ...,  0.0501,  0.0000,  0.0000],
        [ 1.9402,  0.1794,  0.0000,  ...,  0.0501,  0.0000,  0.0000],
        ...,
        [ 1.8570,  0.1069,  0.0000,  ...,  0.0000,  0.2355,  0.0000],
        [ 2.1640,  0.0000,  0.0000,  ...,  0.0000,  0.2355,  0.0000],
        [ 2.7225,  0.6712,  0.0000,  ...,  0.0000,  0.2355,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[-8.6701e-01, -1.6711e-01,  2.3576e-01,  ..., -2.8330e+00,
          1.8436e-01, -8.5820e-01],
        [-1.1573e-01,  1.2263e+00,  6.0139e-01,  ...,  6.1559e-01,
          1.2161e+00,  6.1361e-01],
        [ 2.4778e-01,  2.3568e+00, -1.1859e+00,  ...,  1.2230e+00,
          6.4092e-01,  3.3591e-01],
        ...,
        [ 6.1617e-01, -1.9223e+00,  6.5595e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8254e-01],
        [-8.6701e-01, -1.6711e-01,  2.3576e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8254e-01],
        [-6.4207e-01,  5.3511e-01,  1.3856e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8254e-01]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.4451,  0.0000,  1.8311,  ...,  0.0000,  1.9706,  0.0000],
        [ 1.0162,  0.0000,  1.7981,  ...,  0.0000,  1.9730,  0.0000],
        [ 0.0000,  0.0000,  2.0384,  ...,  0.0000,  2.7575,  0.0000],
        ...,
        [ 0.5939,  0.0000,  1.3938,  ...,  1.9329,  1.9301,  0.0000],
        [ 0.7744,  0.0000,  0.5946,  ...,  1.9329,  1.9301,  0.0000],
        [ 0.8044,  0.1084,  1.1879,  ...,  1.9329,  1.9301,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.8154,  0.6841,  0.0000,  ...,  1.2889,  0.8007,  0.5126],
        [ 0.6403,  1.1849,  0.0000,  ...,  0.3980,  0.2595,  0.4474],
        [ 0.6230,  0.8750,  0.2132,  ...,  1.7046,  0.0447,  0.0327],
        ...,
        [ 1.3194,  1.3665,  0.2548,  ...,  1.3733,  1.8535,  1.2861],
        [ 0.4256,  0.6151,  0.0000,  ...,  1.3733,  1.8535,  1.2861],
        [ 1.0313,  0.3146,  0.0000,  ...,  1.3733,  1.8535,  1.2861]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.0000,  0.8456,  2.4339,  ...,  0.0000,  1.1704,  0.0000],
        [ 0.0000,  1.2054,  2.8397,  ...,  0.0000,  0.7899,  0.5373],
        [ 0.0000,  1.0442,  3.1336,  ...,  0.0000,  0.7231,  0.0988],
        ...,
        [ 0.5145,  0.4793,  1.8830,  ...,  0.3077,  0.7202,  0.0000],
        [ 0.0000,  0.8564,  3.1156,  ...,  0.3077,  0.7202,  0.0000],
        [ 0.0000,  0.9373,  2.5264,  ...,  0.3077,  0.7202,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 1.7860,  0.0458,  0.0000,  ...,  0.0000,  0.1622,  0.0000],
        [ 1.8466,  0.2084,  0.0000,  ...,  0.7679,  0.0000,  0.5884],
        [ 1.9407,  0.0000,  0.0000,  ...,  0.3825,  0.0000,  0.0000],
        ...,
        [ 1.7187,  0.5437,  0.0000,  ...,  0.0000,  0.4253,  0.0000],
        [ 2.1984,  0.2799,  0.0000,  ...,  0.0000,  0.4253,  0.0000],
        [ 2.2873,  0.3826,  0.0000,  ...,  0.0000,  0.4253,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[-8.6707e-01, -1.6710e-01,  2.3575e-01,  ...,  1.5728e+00,
         -4.7738e-02, -4.2296e-01],
        [ 6.1618e-01, -1.9222e+00,  6.5599e-01,  ...,  1.5728e+00,
         -4.7738e-02, -4.2296e-01],
        [ 1.2180e+00, -3.2968e-01,  1.6749e+00,  ..., -2.8330e+00,
          1.8435e-01, -8.5820e-01],
        ...,
        [-2.7252e+00,  1.2282e+00,  8.0664e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8255e-01],
        [-8.6707e-01, -1.6710e-01,  2.3575e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8255e-01],
        [-1.2820e+00, -7.9156e-01,  4.7013e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8255e-01]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.5998,  0.0000,  2.3852,  ...,  0.4648,  1.7083,  0.0000],
        [ 0.0000,  0.0000,  2.0817,  ...,  0.4648,  1.7083,  0.0000],
        [ 0.8093,  0.0000,  2.1281,  ...,  0.0000,  1.8996,  0.0000],
        ...,
        [ 1.0557,  0.0000,  1.5100,  ...,  2.1055,  1.9959,  0.0000],
        [ 0.4055,  0.0000,  0.1619,  ...,  2.1055,  1.9959,  0.0000],
        [ 0.1775,  0.0005,  1.6619,  ...,  2.1055,  1.9959,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.5766,  0.7985,  0.2539,  ...,  1.5618,  0.2986,  0.6073],
        [ 0.7191,  0.9370,  0.0000,  ...,  1.5618,  0.2986,  0.6073],
        [ 0.6105,  1.2181,  0.0487,  ...,  1.2792,  0.0000,  0.1898],
        ...,
        [ 0.2389,  1.2095,  0.0000,  ...,  1.3516,  1.5244,  1.1747],
        [ 0.8357,  0.5882,  0.0000,  ...,  1.3516,  1.5244,  1.1747],
        [ 0.7745,  1.3285,  0.0000,  ...,  1.3516,  1.5244,  1.1747]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.0000,  0.4114,  2.3850,  ...,  0.0000,  0.8356,  0.0000],
        [ 0.0000,  0.8743,  2.6346,  ...,  0.0000,  0.8356,  0.0000],
        [ 0.1228,  1.0461,  2.6797,  ...,  0.0000,  0.9431,  0.0000],
        ...,
        [ 0.0000,  0.6249,  2.2117,  ...,  0.0000,  0.6062,  0.0000],
        [ 0.0000,  0.8749,  2.5990,  ...,  0.0000,  0.6062,  0.0000],
        [ 0.0000,  0.6634,  1.8253,  ...,  0.0000,  0.6062,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([250, 128])
pred_vecs
torch.Size([250, 128])
cur_o_vecs
torch.Size([250, 128])
cur_t_vecs
torch.Size([250, 384])
tensor([[ 2.2431,  0.0000,  0.0000,  ...,  0.2506,  0.0000,  0.0000],
        [ 1.9392,  0.5272,  0.0000,  ...,  0.2506,  0.0000,  0.0000],
        [ 2.1549,  0.7050,  0.0000,  ...,  0.5991,  0.0000,  0.0000],
        ...,
        [ 2.1909,  0.3273,  0.0000,  ...,  0.0000,  0.5969,  0.0000],
        [ 2.1810,  0.4521,  0.0000,  ...,  0.0000,  0.5969,  0.0000],
        [ 2.7369,  1.0905,  0.0000,  ...,  0.0000,  0.5969,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([217, 128])
pred_vecs
torch.Size([217, 128])
cur_o_vecs
torch.Size([217, 128])
cur_t_vecs
torch.Size([217, 384])
tensor([[-8.6712e-01, -1.6710e-01,  2.3573e-01,  ..., -4.0498e-01,
          9.7799e-01,  2.0466e+00],
        [-2.3050e+00, -1.1128e+00,  2.5454e-01,  ..., -4.0498e-01,
          9.7799e-01,  2.0466e+00],
        [-8.6712e-01, -1.6710e-01,  2.3573e-01,  ...,  1.1815e-01,
          1.0592e+00, -6.4833e-01],
        ...,
        [-1.1574e-01,  1.2263e+00,  6.0143e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8257e-01],
        [-8.6712e-01, -1.6710e-01,  2.3573e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8257e-01],
        [ 6.1618e-01, -1.9222e+00,  6.5604e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8257e-01]], device='cuda:0')
cur_s_vecs
torch.Size([217, 128])
pred_vecs
torch.Size([217, 128])
cur_o_vecs
torch.Size([217, 128])
cur_t_vecs
torch.Size([217, 384])
tensor([[ 0.1902,  0.0000,  1.4845,  ...,  0.6704,  2.5726,  0.0000],
        [ 0.8143,  0.0000,  2.1548,  ...,  0.6704,  2.5726,  0.0000],
        [ 0.1902,  0.0000,  1.4845,  ...,  0.0000,  2.0268,  0.0000],
        ...,
        [ 0.8246,  0.0000,  2.4039,  ...,  2.0486,  1.4291,  0.0000],
        [ 0.8753,  0.0000,  1.1564,  ...,  2.0486,  1.4291,  0.0000],
        [ 0.6282,  0.0000,  1.9282,  ...,  2.0486,  1.4291,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([217, 128])
pred_vecs
torch.Size([217, 128])
cur_o_vecs
torch.Size([217, 128])
cur_t_vecs
torch.Size([217, 384])
tensor([[ 0.1342,  0.7227,  0.0000,  ...,  1.6220,  0.6864,  0.6204],
        [ 0.6717,  0.5366,  0.1369,  ...,  1.6220,  0.6864,  0.6204],
        [ 0.1342,  0.7227,  0.0000,  ...,  0.8430,  0.4030,  0.0429],
        ...,
        [ 0.6844,  0.3879,  0.1027,  ...,  1.7705,  1.8778,  0.6731],
        [ 0.1917,  0.6694,  0.0000,  ...,  1.7705,  1.8778,  0.6731],
        [ 0.3834,  0.4749,  0.0000,  ...,  1.7705,  1.8778,  0.6731]], device='cuda:0')
cur_s_vecs
torch.Size([217, 128])
pred_vecs
torch.Size([217, 128])
cur_o_vecs
torch.Size([217, 128])
cur_t_vecs
torch.Size([217, 384])
tensor([[ 0.0000,  0.8858,  2.5270,  ...,  0.0000,  1.1697,  0.0000],
        [ 0.0000,  0.7486,  2.1791,  ...,  0.0000,  1.1697,  0.0000],
        [ 0.0000,  0.8858,  2.5270,  ...,  0.0000,  0.8813,  0.0000],
        ...,
        [ 0.0000,  0.2881,  1.9131,  ...,  0.0096,  0.9012,  0.0000],
        [ 0.0000,  1.1353,  2.4306,  ...,  0.0096,  0.9012,  0.0000],
        [ 0.0000,  1.1394,  3.3509,  ...,  0.0096,  0.9012,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([217, 128])
pred_vecs
torch.Size([217, 128])
cur_o_vecs
torch.Size([217, 128])
cur_t_vecs
torch.Size([217, 384])
tensor([[ 2.4722,  0.0000,  0.0000,  ...,  0.0000,  0.3485,  0.0000],
        [ 2.2449,  0.3983,  0.0000,  ...,  0.0000,  0.3485,  0.0000],
        [ 2.4722,  0.0000,  0.0000,  ...,  0.5223,  0.0000,  0.0000],
        ...,
        [ 1.8244,  0.2106,  0.0000,  ...,  0.0000,  0.0545,  0.0000],
        [ 2.5073,  0.8689,  0.0000,  ...,  0.0000,  0.0545,  0.0000],
        [ 1.7574,  0.3172,  0.0000,  ...,  0.0000,  0.0545,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([31, 128])
pred_vecs
torch.Size([31, 128])
cur_o_vecs
torch.Size([31, 128])
cur_t_vecs
torch.Size([31, 384])
tensor([[-6.4211e-01,  5.3511e-01,  1.3852e-01,  ...,  6.4945e-01,
          2.1325e+00,  7.4418e-01],
        [-1.6382e+00, -5.3694e-02,  4.5623e-01,  ..., -1.7430e+00,
         -9.4669e-01,  2.7844e-01],
        [-1.6382e+00, -5.3694e-02,  4.5623e-01,  ..., -1.7430e+00,
         -9.4669e-01,  2.7844e-01],
        ...,
        [ 4.0571e-01,  3.2409e-01, -1.9931e+00,  ..., -1.4423e+00,
          1.1535e+00, -3.8257e-01],
        [-3.2730e-02,  1.5134e+00,  5.0519e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8257e-01],
        [-2.0908e+00,  2.3487e+00, -1.0709e+00,  ..., -1.4423e+00,
          1.1535e+00, -3.8257e-01]], device='cuda:0')
cur_s_vecs
torch.Size([31, 128])
pred_vecs
torch.Size([31, 128])
cur_o_vecs
torch.Size([31, 128])
cur_t_vecs
torch.Size([31, 384])
tensor([[ 0.7612,  0.0000,  2.2374,  ...,  0.0000,  2.0696,  0.0000],
        [ 1.0898,  0.0000,  1.4114,  ...,  0.4533,  1.7965,  0.0000],
        [ 1.0898,  0.0000,  1.4114,  ...,  0.4533,  1.7965,  0.0000],
        ...,
        [ 1.1458,  0.0000,  1.7502,  ...,  1.8534,  1.4435,  0.0000],
        [ 0.1060,  0.0000,  3.4087,  ...,  1.8534,  1.4435,  0.0000],
        [ 0.7182,  0.0000,  2.3827,  ...,  1.8534,  1.4435,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([31, 128])
pred_vecs
torch.Size([31, 128])
cur_o_vecs
torch.Size([31, 128])
cur_t_vecs
torch.Size([31, 384])
tensor([[ 1.1785,  0.5143,  0.5721,  ...,  1.3986,  0.1524,  0.0711],
        [ 0.1609,  0.5812,  0.0000,  ...,  2.1226,  0.0990,  0.2547],
        [ 0.1609,  0.5812,  0.0000,  ...,  2.1226,  0.0990,  0.2547],
        ...,
        [ 0.7739,  0.6128,  0.0000,  ...,  1.9801,  1.2217,  0.4453],
        [ 0.9874,  0.9351,  0.0000,  ...,  1.9801,  1.2217,  0.4453],
        [ 0.7441,  0.8295,  0.0000,  ...,  1.9801,  1.2217,  0.4453]], device='cuda:0')569602c
438267e
549098e
517417b
4761e
404395b
31442c
49286d
485064e
477468a
282978b
428304c
23176c
553401b
577712e
279345a
20087d
2477b
320537b
127750c
28349d
195894e
132860e
520389c
518918b
312359c
529352e
183539b
566547e
444399d
217991b
113019c
322121b
71631c
37291d
488980a
581061b
26747c
103558b
107620e
42704a
570579a
159199a
102421d
269015d
97170c
308295c
346724d
466134b
557434a
126808e
188498c
455877a
392476a
573149e
295693b
438899c
167074b
569174b
543224b
88325e
150594d
210266a
522704b
346915c
393647a
524924d
81035b
13576e
568677b
59582d
244122d
259853a
30958c
522235a
552461b
66309b
21531c
310518e
452459c
349527d
131374d
505642a
75362a
400850e
340897e
576526e
408946a
323479a
233869d
567305a
20291d
295850e
431997e
257951c
102834e
132516a
144371b
377278b
146120b
189187a
43171d
468751d
316353e
367442b
507148b
103575d
246099a
121172a
336854d
546261e
84896e
113619d
327413b
485368b
531778b
260109a
207573a
89707e
385540c
494795d
171309a
11690a
409754e
5383d
119761c
18155c
323129a
416188a
85549b
353982b
61202b
24026a
331302b
43742e
187803e
215612c
572042e
330954d
96728b
327813a
560563d
243796d
134413c
327536c
274424a
332292c
71737d
230570b
84034b
522489d
150354d
365027d
278899b
167995e
426880c
92107d
10138e
302576c
101426a
127450a
390298c
277346a
478805d
557408d
233112e
550278a
221633e
462929c
4764e
165299d
47909e
217720d
443086d
126204e
257713b
313608d
245242c
396369b
540926b
302397b
103582a
52324b
545257e
137339b
185963c
194050c
441816e
261664e
159403e
160152a
53464b
485491e
173565d
78286b
218886e
400999a
285357c
533452e
535265c
457086c
578119d
310564d
157356a
474105b
6710a
217135c
509267e
349153c
139789e
58979c
22658d
555800d
208585b
102609d
472320a
13595b
197029b
306127c
388923b
189648b
173814c
3001a
324740d
324611a
91263a
245534b
223420c
414212a
276694e
295491a
288921b
216026b
104537e
153574c
163829e
367605a
293576a
254589a
163412b
6421c
299643b
47774c
529944e
285651a
400848e
297009a
502557d
214873b
170687a
459110b
168417b
412384d
500982b
545929c
237859c
363190c
289100a
355175a
90869b
134597e
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
134849b
177381e
154597e
96067b
488583b
60378b
208347b
6075a
174303b
289172d
142587b
109568a
76802b
241178a
554319c
515300d
250724b
329151a
511143a
110777e
525273e
101877c
283809a
344025a
191690d
454044a
397938a
288313e
248591a
389772d
135989c
14798d
308803a
572147e
364571b
463168c
412992d
404271d
480576d
509514e
493485a
359164c
455902d
354938e
208267a
176726c
432627d
39360d
169395c
459208b
521995d
152245e
242167b
10082e
107108a
238712c
167126b
39716b
84815e
224629e
457448d
491558e
189033e
213530e
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_s_vecs
torch.Size([31, 128])
pred_vecs
torch.Size([31, 128])
cur_o_vecs
torch.Size([31, 128])
cur_t_vecs
torch.Size([31, 384])
tensor([[ 0.0000,  1.1248,  2.3037,  ...,  0.0000,  0.9936,  0.0000],
        [ 0.0000,  1.2440,  2.5416,  ...,  0.0000,  1.0348,  0.0000],
        [ 0.0000,  1.2440,  2.5416,  ...,  0.0000,  1.0348,  0.0000],
        ...,
        [ 0.0000,  1.2407,  2.3884,  ...,  0.0000,  0.7660,  0.0000],
        [ 0.2178,  0.0000,  1.5218,  ...,  0.0000,  0.7660,  0.0000],
        [ 0.0000,  0.8434,  2.0751,  ...,  0.0000,  0.7660,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([31, 128])
pred_vecs
torch.Size([31, 128])
cur_o_vecs
torch.Size([31, 128])
cur_t_vecs
torch.Size([31, 384])
tensor([[ 3.1168,  0.9518,  0.0000,  ...,  0.6637,  0.0000,  0.0000],
        [ 2.6623,  0.0000,  0.0000,  ...,  0.0362,  0.0000,  0.0000],
        [ 2.6623,  0.0000,  0.0000,  ...,  0.0362,  0.0000,  0.0000],
        ...,
        [ 1.7598,  0.1229,  0.0000,  ...,  0.0000,  0.2491,  0.0000],
        [ 1.8125,  0.5150,  0.0000,  ...,  0.0000,  0.2491,  0.0000],
        [ 1.9099,  0.0980,  0.0000,  ...,  0.0000,  0.2491,  0.0000]], device='cuda:0')
Starting epoch 8
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[-6.4216e-01,  5.3510e-01,  1.3850e-01,  ..., -1.6873e-01,
         -1.2373e+00, -1.5371e+00],
        [-8.6723e-01, -1.6712e-01,  2.3570e-01,  ..., -1.7430e+00,
         -9.4665e-01,  2.7846e-01],
        [-9.0462e-02, -6.1119e-01,  1.5138e-01,  ...,  6.1551e-01,
          1.2161e+00,  6.1351e-01],
        ...,
        [ 5.5455e-01, -3.3994e-01, -1.9776e+00,  ..., -1.4423e+00,
          1.1535e+00, -3.8256e-01],
        [-8.8850e-01,  5.5845e-01,  1.1287e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8256e-01],
        [-8.6723e-01, -1.6712e-01,  2.3570e-01,  ..., -1.4423e+00,
          1.1535e+00, -3.8256e-01]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.8016,  0.0000,  1.9820,  ...,  0.0000,  1.5766,  0.0000],
        [ 0.3219,  0.0000,  1.4980,  ...,  0.0000,  1.9471,  0.0000],
        [ 0.1497,  0.0000,  0.9153,  ...,  0.0000,  2.0707,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.9152,  ...,  1.9898,  1.9973,  0.0000],
        [ 0.0000,  0.0000,  2.5010,  ...,  1.9898,  1.9973,  0.0000],
        [ 0.0222,  0.0000,  2.0445,  ...,  1.9898,  1.9973,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.5025,  0.2909,  0.0450,  ...,  0.8408,  0.2588,  0.2671],
        [ 0.2030,  0.4811,  0.0000,  ...,  1.6452,  0.0000,  0.0000],
        [ 0.4058,  1.0203,  0.0457,  ...,  0.7580,  0.4610,  0.0000],
        ...,
        [ 0.8918,  0.3931,  0.3185,  ...,  1.2910,  1.3015,  0.8777],
        [ 0.1077,  1.2144,  0.0977,  ...,  1.2910,  1.3015,  0.8777],
        [ 0.3236,  0.9270,  0.0000,  ...,  1.2910,  1.3015,  0.8777]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.0000,  0.7485,  2.2490,  ...,  0.0000,  0.8055,  0.0479],
        [ 0.0000,  1.1528,  2.1755,  ...,  0.0000,  0.3951,  0.0000],
        [ 0.0000,  0.8553,  2.3765,  ...,  0.0123,  1.0486,  0.0931],
        ...,
        [ 0.0000,  0.7557,  2.1733,  ...,  0.0000,  0.6017,  0.0000],
        [ 0.0000,  1.2185,  3.2696,  ...,  0.0000,  0.6017,  0.0000],
        [ 0.0000,  1.0290,  2.1701,  ...,  0.0000,  0.6017,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 2.0026,  0.4483,  0.0000,  ...,  0.7192,  0.0000,  0.1122],
        [ 2.0680,  0.0000,  0.0000,  ...,  0.4281,  0.0000,  0.0000],
        [ 1.8249,  0.0849,  0.0000,  ...,  0.7030,  0.0000,  0.7794],
        ...,
        [ 2.7614,  0.7187,  0.0000,  ...,  0.0000,  0.5420,  0.0000],
        [ 2.8995,  0.0000,  0.0000,  ...,  0.0000,  0.5420,  0.0000],
        [ 2.4496,  0.1708,  0.0000,  ...,  0.0000,  0.5420,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([252, 128])
pred_vecs
torch.Size([252, 128])
cur_o_vecs
torch.Size([252, 128])
cur_t_vecs
torch.Size([252, 384])
tensor([[-5.4622e-02, -3.7173e-01, -1.2104e+00,  ..., -3.7508e-01,
          1.3103e-02,  6.9593e-01],
        [ 2.7248e+00, -4.5281e-01,  3.9234e-01,  ..., -1.2066e+00,
          9.8374e-01,  2.7134e-01],
        [-5.4622e-02, -3.7173e-01, -1.2104e+00,  ..., -1.2066e+00,
          9.8374e-01,  2.7134e-01],
        ...,
        [ 5.9708e-01, -2.6329e-01, -1.7067e+00,  ..., -1.4422e+00,
          1.1535e+00, -3.8258e-01],
        [ 4.0563e-01,  3.2419e-01, -1.9931e+00,  ..., -1.4422e+00,
          1.1535e+00, -3.8258e-01],
        [ 6.2695e-01,  7.1955e-01, -1.0827e+00,  ..., -1.4422e+00,
          1.1535e+00, -3.8258e-01]], device='cuda:0')
cur_s_vecs
torch.Size([252, 128])
pred_vecs
torch.Size([252, 128])
cur_o_vecs
torch.Size([252, 128])
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.0000,  0.0000,  2.8090,  ...,  0.0000,  1.4066,  0.0000],
        [ 0.6695,  0.4338,  2.0418,  ...,  0.0733,  1.3408,  0.0000],
        [ 0.0000,  0.0000,  2.8090,  ...,  0.0733,  1.3408,  0.0000],
        ...,
        [ 0.4726,  0.0000,  1.6057,  ...,  1.6772,  1.5888,  0.0000],
        [ 0.3266,  0.0000,  1.7228,  ...,  1.6772,  1.5888,  0.0000],
        [ 0.0656,  0.0000,  2.7918,  ...,  1.6772,  1.5888,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([252, 128])
pred_vecs
torch.Size([252, 128])
cur_o_vecs
torch.Size([252, 128])
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.8741,  1.2357,  0.0000,  ...,  1.2972,  0.8947,  0.2047],
        [ 1.2394,  0.2515,  0.4584,  ...,  1.3082,  0.8339,  0.6086],
        [ 0.8741,  1.2357,  0.0000,  ...,  1.3082,  0.8339,  0.6086],
        ...,
        [ 0.4671,  0.8832,  0.0000,  ...,  1.9687,  1.6560,  0.4714],
        [ 0.9223,  0.6681,  0.0000,  ...,  1.9687,  1.6560,  0.4714],
        [ 1.3024,  0.7536,  0.0000,  ...,  1.9687,  1.6560,  0.4714]], device='cuda:0')
cur_s_vecs
torch.Size([252, 128])
pred_vecs
torch.Size([252, 128])
cur_o_vecs
torch.Size([252, 128])
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.0000,  1.6667,  2.6951,  ...,  0.0000,  0.9705,  0.0000],
        [ 0.0000,  1.4099,  2.4360,  ...,  0.0000,  1.0319,  0.0000],
        [ 0.0000,  1.6667,  2.6951,  ...,  0.0000,  1.0319,  0.0000],
        ...,
        [ 0.0000,  1.0638,  2.5056,  ...,  0.0000,  0.7140,  0.0000],
        [ 0.0000,  1.0060,  2.4257,  ...,  0.0000,  0.7140,  0.0000],
        [ 0.0537,  0.3895,  2.0337,  ...,  0.0000,  0.7140,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([252, 128])
pred_vecs
torch.Size([252, 128])
cur_o_vecs
torch.Size([252, 128])
cur_t_vecs
torch.Size([252, 384])
tensor([[ 2.2869,  0.6007,  0.0000,  ...,  0.7749,  0.0000,  0.2179],
        [ 1.9519,  0.5074,  0.0000,  ...,  0.2298,  0.0000,  0.0000],
        [ 2.2869,  0.6007,  0.0000,  ...,  0.2298,  0.0000,  0.0000],
        ...,
        [ 2.0835,  0.2158,  0.0000,  ...,  0.0000,  0.3796,  0.0000],
        [ 1.6233,  0.5155,  0.0000,  ...,  0.0000,  0.3796,  0.0000],
        [ 1.8017,  0.7037,  0.0000,  ...,  0.0000,  0.3796,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([227, 128])
pred_vecs
torch.Size([227, 128])
cur_o_vecs
torch.Size([227, 128])
cur_t_vecs
torch.Size([227, 384])
tensor([[-8.6734e-01, -1.6715e-01,  2.3566e-01,  ..., -3.9364e-01,
         -1.1453e+00, -8.9333e-01],
        [-2.7156e-01,  1.8565e-02, -8.7959e-01,  ...,  6.1546e-01,
          1.2162e+00,  6.1350e-01],
        [-2.7156e-01,  1.8565e-02, -8.7959e-01,  ..., -3.9364e-01,
         -1.1453e+00, -8.9333e-01],
        ...,
        [-6.4224e-01,  5.3505e-01,  1.3846e-01,  ..., -1.4422e+00,
          1.1535e+00, -3.8260e-01],
        [ 5.9709e-01, -2.6328e-01, -1.7067e+00,  ..., -1.4422e+00,
          1.1535e+00, -3.8260e-01],
        [ 3.5023e-01,  3.4725e-01,  3.0086e-02,  ..., -1.4422e+00,
          1.1535e+00, -3.8260e-01]], device='cuda:0')
cur_s_vecs
torch.Size([227, 128])
pred_vecs
torch.Size([227, 128])
cur_o_vecs
torch.Size([227, 128])
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  0.0000,  1.8225,  ...,  0.5359,  2.1351,  0.0000],
        [ 0.0000,  0.0000,  1.8862,  ...,  0.0000,  2.7888,  0.0000],
        [ 0.0000,  0.0000,  1.8862,  ...,  0.5359,  2.1351,  0.0000],
        ...,
        [ 1.1568,  0.0000,  2.3902,  ...,  2.0691,  2.2485,  0.0000],
        [ 0.5685,  0.0000,  1.6982,  ...,  2.0691,  2.2485,  0.0000],
        [ 0.8320,  0.1687,  4.4638,  ...,  2.0691,  2.2485,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([227, 128])
pred_vecs
torch.Size([227, 128])
cur_o_vecs
torch.Size([227, 128])
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.4431,  0.5612,  0.0000,  ...,  1.0023,  0.4912,  0.3661],
        [ 0.7085,  0.7695,  0.0000,  ...,  1.5159,  0.5615,  0.0000],
        [ 0.7085,  0.7695,  0.0000,  ...,  1.0023,  0.4912,  0.3661],
        ...,
        [ 0.8774,  0.0000,  0.1213,  ...,  2.2400,  1.7975,  0.2920],
        [ 0.5392,  0.7858,  0.0000,  ...,  2.2400,  1.7975,  0.2920],
        [ 1.3888,  1.0327,  0.0958,  ...,  2.2400,  1.7975,  0.2920]], device='cuda:0')
cur_s_vecs
torch.Size([227, 128])
pred_vecs
torch.Size([227, 128])
cur_o_vecs
torch.Size([227, 128])
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  0.9373,  2.5448,  ...,  0.0000,  1.0253,  0.0000],
        [ 0.0000,  1.0765,  2.4427,  ...,  0.0000,  0.6257,  0.4719],
        [ 0.0000,  1.0765,  2.4427,  ...,  0.0000,  1.0253,  0.0000],
        ...,
        [ 0.0000,  1.4883,  2.9159,  ...,  0.0000,  0.7264,  0.0000],
        [ 0.0000,  0.5697,  1.6357,  ...,  0.0000,  0.7264,  0.0000],
        [ 0.0000,  0.0000,  1.3141,  ...,  0.0000,  0.7264,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([227, 128])
pred_vecs
torch.Size([227, 128])
cur_o_vecs
torch.Size([227, 128])
cur_t_vecs
torch.Size([227, 384])
tensor([[ 2.0590,  0.2467,  0.0000,  ...,  0.3364,  0.0000,  0.0000],
        [ 1.9572,  0.2137,  0.0000,  ...,  0.4155,  0.0000,  0.2013],
        [ 1.9572,  0.2137,  0.0000,  ...,  0.3364,  0.0000,  0.0000],
        ...,
        [ 3.0553,  1.0705,  0.0000,  ...,  0.0000,  0.1957,  0.0000],
        [ 2.2621,  0.6599,  0.0000,  ...,  0.0000,  0.1957,  0.0000],
        [ 2.2446,  0.7413,  0.0000,  ...,  0.0000,  0.1957,  0.0000]], device='cuda:0')
t = 80 / 1000000
 G [bbox_pred]: 0.3815
 G [L1_pixel_loss]: 0.9084
 G [total_loss]: 1.5653
 G [g_gan_obj_loss]: 0.0094
 G [g_gan_img_loss]: 0.0084
 G [ac_loss]: 0.2576
 D_obj [d_ac_loss_real]: 2.8458
 D_obj [d_ac_loss_fake]: 2.5756
 D_obj [d_obj_gan_loss]: 1.1116
 D_img [d_img_gan_loss]: 1.2163
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 2.4787e-01,  2.3565e+00, -1.1859e+00,  ...,  1.6066e+00,
          1.0793e+00,  5.5085e-01],
        [-2.9804e-01,  1.8378e+00,  1.0867e+00,  ..., -2.8330e+00,
          1.8426e-01, -8.5817e-01],
        [-2.9804e-01,  1.8378e+00,  1.0867e+00,  ..., -9.7782e-01,
          1.6877e+00, -8.0764e-01],
        ...,
        [ 9.3920e-01, -1.4313e+00, -2.6990e-03,  ..., -1.4422e+00,
          1.1535e+00, -3.8264e-01],
        [ 9.7678e-01, -1.9918e+00,  5.0766e-01,  ..., -1.4422e+00,
          1.1535e+00, -3.8264e-01],
        [ 1.2179e+00, -3.2978e-01,  1.6749e+00,  ..., -1.4422e+00,
          1.1535e+00, -3.8264e-01]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.0000,  0.0000,  2.4285,  ...,  0.0000,  2.3120,  0.0000],
        [ 0.0000,  0.0000,  1.6081,  ...,  0.0000,  2.4534,  0.0000],
        [ 0.0000,  0.0000,  1.6081,  ...,  0.0000,  1.8515,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.5955,  ...,  2.1067,  1.4593,  0.0000],
        [ 0.0000,  0.0000,  1.8611,  ...,  2.1067,  1.4593,  0.0000],
        [ 1.2375,  0.0000,  1.6798,  ...,  2.1067,  1.4593,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.3796,  0.6103,  0.3818,  ...,  1.1665,  0.1115,  0.0000],
        [ 0.4608,  0.5807,  0.2064,  ...,  1.1246,  0.4264,  0.3420],
        [ 0.4608,  0.5807,  0.2064,  ...,  1.0851,  0.0732,  0.4472],
        ...,
        [ 1.3786,  1.2225,  0.3147,  ...,  1.8012,  0.9401,  0.9946],
        [ 0.8680,  0.6970,  0.0255,  ...,  1.8012,  0.9401,  0.9946],
        [ 0.8311,  0.5889,  0.4519,  ...,  1.8012,  0.9401,  0.9946]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.0000,  0.8957,  2.0640,  ...,  0.0000,  0.4262,  0.8574],
        [ 0.0000,  1.1104,  2.0420,  ...,  0.0000,  1.4635,  0.0000],
        [ 0.0000,  1.1104,  2.0420,  ...,  0.0000,  0.8056,  0.1383],
        ...,
        [ 0.0000,  0.4128,  1.7507,  ...,  0.0000,  1.3448,  0.0000],
        [ 0.0000,  1.2994,  2.5712,  ...,  0.0000,  1.3448,  0.0000],
        [ 0.0000,  1.6547,  2.5344,  ...,  0.0000,  1.3448,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([224, 128])
pred_vecs
torch.Size([224, 128])
cur_o_vecs
torch.Size([224, 128])
cur_t_vecs
torch.Size([224, 384])
tensor([[ 1.5695,  0.2967,  0.0000,  ...,  0.4295,  0.0000,  0.2071],
        [ 1.5291,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0790],
        [ 1.5291,  0.0000,  0.0000,  ...,  0.2351,  0.0000,  0.1949],
        ...,
        [ 2.0890,  0.5220,  0.0000,  ...,  0.0000,  0.4194,  0.0000],
        [ 1.8479,  0.3821,  0.0000,  ...,  0.0000,  0.4194,  0.0000],
        [ 2.3732,  0.1218,  0.0000,  ...,  0.0000,  0.4194,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 1.1588e+00, -1.2071e+00,  1.3397e+00,  ..., -3.9360e-01,
         -1.1453e+00, -8.9332e-01],
        [ 1.1588e+00, -1.2071e+00,  1.3397e+00,  ...,  6.1540e-01,
          1.2162e+00,  6.1348e-01],
        [ 1.0133e+00,  3.7403e-02,  1.8448e+00,  ...,  6.1540e-01,
          1.2162e+00,  6.1348e-01],
        ...,
        [-1.1606e-01,  1.2260e+00,  6.0164e-01,  ..., -1.4422e+00,
          1.1535e+00, -3.8268e-01],
        [ 3.1244e-01,  4.7228e-01,  6.2593e-01,  ..., -1.4422e+00,
          1.1535e+00, -3.8268e-01],
        [-8.6741e-01, -1.6717e-01,  2.3563e-01,  ..., -1.4422e+00,
          1.1535e+00, -3.8268e-01]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 2.0832,  0.0000,  2.7491,  ...,  0.0000,  1.8531,  0.0000],
        [ 2.0832,  0.0000,  2.7491,  ...,  0.1545,  1.3669,  0.0000],
        [ 0.5669,  0.0000,  1.5383,  ...,  0.1545,  1.3669,  0.0000],
        ...,
        [ 1.1730,  0.0000,  2.6013,  ...,  1.8741,  1.1790,  0.0000],
        [ 1.0998,  0.0000,  2.2661,  ...,  1.8741,  1.1790,  0.0000],
        [ 0.0000,  0.0000,  1.5500,  ...,  1.8741,  1.1790,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 0.0000,  1.3075,  0.0190,  ...,  1.7213,  0.0000,  0.0000],
        [ 0.0000,  1.3075,  0.0190,  ...,  1.6345,  0.9434,  0.5244],
        [ 1.0780,  0.0000,  0.2225,  ...,  1.6345,  0.9434,  0.5244],
        ...,
        [ 0.5266,  0.4048,  0.3020,  ...,  1.6627,  1.5315,  0.8489],
        [ 0.3524,  1.2040,  0.0674,  ...,  1.6627,  1.5315,  0.8489],
        [ 0.3611,  1.6199,  0.0000,  ...,  1.6627,  1.5315,  0.8489]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 0.0000,  0.9780,  2.5521,  ...,  0.0000,  1.1769,  0.0000],
        [ 0.0000,  0.9780,  2.5521,  ...,  0.0000,  0.8567,  0.0000],
        [ 0.0000,  0.7346,  1.9599,  ...,  0.0000,  0.8567,  0.0000],
        ...,
        [ 0.0000,  1.1902,  2.4725,  ...,  0.2840,  0.9187,  0.0000],
        [ 0.0000,  0.7754,  2.1388,  ...,  0.2840,  0.9187,  0.0000],
        [ 0.0000,  0.2609,  1.8319,  ...,  0.2840,  0.9187,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 2.0280,  0.0000,  0.0000,  ...,  0.2756,  0.0000,  0.0000],
        [ 2.0280,  0.0000,  0.0000,  ...,  0.2197,  0.0000,  0.0000],
        [ 2.2567,  0.5527,  0.0000,  ...,  0.2197,  0.0000,  0.0000],
        ...,
        [ 2.1393,  0.5852,  0.0000,  ...,  0.0000,  0.1468,  0.0000],
        [ 2.0124,  0.6942,  0.0000,  ...,  0.0000,  0.1468,  0.0000],
        [ 2.0085,  0.4934,  0.0000,  ...,  0.0000,  0.1468,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 6.1608e-01, -1.9221e+00,  6.5636e-01,  ..., -1.2296e+00,
         -1.5092e+00, -1.4998e-01],
        [ 6.1608e-01, -1.9221e+00,  6.5636e-01,  ...,  6.1536e-01,
          1.2162e+00,  6.1345e-01],
        [ 6.1608e-01, -1.9221e+00,  6.5636e-01,  ..., -1.2296e+00,
         -1.5092e+00, -1.4998e-01],
        ...,
        [-8.6742e-01, -1.6715e-01,  2.3561e-01,  ..., -1.4422e+00,
          1.1535e+00, -3.8272e-01],
        [-2.3261e+00, -8.6006e-01,  1.2484e-01,  ..., -1.4422e+00,
          1.1535e+00, -3.8272e-01],
        [ 4.1104e-01,  1.4784e+00, -2.0317e+00,  ..., -1.4422e+00,
          1.1535e+00, -3.8272e-01]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 1.6765,  0.0000,  1.8356,  ...,  0.7884,  1.5070,  0.0000],
        [ 1.6765,  0.0000,  1.8356,  ...,  0.0000,  2.5030,  0.0000],
        [ 1.6765,  0.0000,  1.8356,  ...,  0.7884,  1.5070,  0.0000],
        ...,
        [ 0.4688,  0.0000,  1.3490,  ...,  2.5466,  2.0244,  0.0000],
        [ 0.0000,  0.0000,  2.3484,  ...,  2.5466,  2.0244,  0.0000],
        [ 0.6499,  0.0000,  3.7117,  ...,  2.5466,  2.0244,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 0.3841,  0.2230,  0.0000,  ...,  1.1001,  1.1099,  0.3692],
        [ 0.3841,  0.2230,  0.0000,  ...,  0.7272,  0.4768,  0.4090],
        [ 0.3841,  0.2230,  0.0000,  ...,  1.1001,  1.1099,  0.3692],
        ...,
        [ 0.7044,  1.0106,  0.2005,  ...,  1.8576,  1.8905,  0.6687],
        [ 0.0000,  0.9673,  0.7284,  ...,  1.8576,  1.8905,  0.6687],
        [ 0.4542,  1.4111,  0.2994,  ...,  1.8576,  1.8905,  0.6687]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 0.0000,  1.4152,  2.9890,  ...,  0.0514,  0.8021,  0.0000],
        [ 0.0000,  1.4152,  2.9890,  ...,  0.0000,  1.2922,  0.0000],
        [ 0.0000,  1.4152,  2.9890,  ...,  0.0514,  0.8021,  0.0000],
        ...,
        [ 0.0000,  0.9305,  1.7626,  ...,  0.1491,  0.9957,  0.0000],
        [ 0.0000,  1.3438,  2.4990,  ...,  0.1491,  0.9957,  0.0000],
        [ 0.0818,  0.1822,  1.9605,  ...,  0.1491,  0.9957,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([243, 128])
pred_vecs
torch.Size([243, 128])
cur_o_vecs
torch.Size([243, 128])
cur_t_vecs
torch.Size([243, 384])
tensor([[ 2.0686,  0.6967,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0686,  0.6967,  0.0000,  ...,  0.2907,  0.0000,  0.4210],
        [ 2.0686,  0.6967,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 1.8051,  0.5590,  0.0000,  ...,  0.0000,  0.2715,  0.0000],
        [ 2.1846,  0.0000,  0.0000,  ...,  0.0000,  0.2715,  0.0000],
        [ 2.2597,  0.5236,  0.0000,  ...,  0.0000,  0.2715,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 5.9712e-01, -2.6326e-01, -1.7067e+00,  ..., -1.7428e+00,
         -9.4636e-01,  2.7860e-01],
        [-9.0524e-02, -6.1113e-01,  1.5094e-01,  ...,  4.3954e-01,
         -7.3615e-01,  8.3869e-01],
        [-9.0524e-02, -6.1113e-01,  1.5094e-01,  ...,  4.3954e-01,
         -7.3615e-01,  8.3869e-01],
        ...,
        [-8.6744e-01, -1.6715e-01,  2.3560e-01,  ..., -1.4422e+00,
          1.1535e+00, -3.8275e-01],
        [-1.2821e+00, -7.9149e-01,  4.7010e-01,  ..., -1.4422e+00,
          1.1535e+00, -3.8275e-01],
        [ 1.2178e+00, -3.2984e-01,  1.6748e+00,  ..., -1.4422e+00,
          1.1535e+00, -3.8275e-01]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.1058,  0.0000,  1.5503,  ...,  0.0000,  1.5654,  0.0000],
        [ 0.1419,  0.0000,  1.1167,  ...,  0.7810,  2.1837,  0.0000],
        [ 0.1419,  0.0000,  1.1167,  ...,  0.7810,  2.1837,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.8215,  ...,  2.0696,  1.3956,  0.0000],
        [ 0.0000,  0.0000,  1.3072,  ...,  2.0696,  1.3956,  0.0000],
        [ 0.4193,  0.0000,  2.5629,  ...,  2.0696,  1.3956,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 1.0238,  1.0823,  0.0000,  ...,  1.6897,  0.0000,  0.0000],
        [ 0.2613,  1.1531,  0.0000,  ...,  1.1529,  0.0792,  0.1815],
        [ 0.2613,  1.1531,  0.0000,  ...,  1.1529,  0.0792,  0.1815],
        ...,
        [ 0.4511,  0.6353,  0.0000,  ...,  1.5552,  1.2895,  1.0223],
        [ 1.1007,  1.4716,  0.0000,  ...,  1.5552,  1.2895,  1.0223],
        [ 0.7551,  1.6138,  0.5732,  ...,  1.5552,  1.2895,  1.0223]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  0.1344,  1.9967,  ...,  0.0000,  0.6667,  0.0000],
        [ 0.0000,  0.7371,  3.0643,  ...,  0.0000,  1.0939,  0.1697],
        [ 0.0000,  0.7371,  3.0643,  ...,  0.0000,  1.0939,  0.1697],
        ...,
        [ 0.0000,  0.8698,  2.8099,  ...,  0.2669,  0.6864,  0.0000],
        [ 0.0000,  0.4625,  2.1132,  ...,  0.2669,  0.6864,  0.0000],
        [ 0.0000,  0.5877,  2.0524,  ...,  0.2669,  0.6864,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 2.4760,  0.5052,  0.0000,  ...,  0.4277,  0.0000,  0.0000],
        [ 2.4523,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.2992],
        [ 2.4523,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.2992],
        ...,
        [ 1.9269,  0.2462,  0.0000,  ...,  0.0000,  0.0563,  0.0000],
        [ 1.7925,  0.8932,  0.0000,  ...,  0.0000,  0.0563,  0.0000],
        [ 1.7893,  0.5140,  0.0000,  ...,  0.0000,  0.0563,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([261, 128])
pred_vecs
torch.Size([261, 128])
cur_o_vecs
torch.Size([261, 128])
cur_t_vecs
torch.Size([261, 384])
tensor([[ 0.6161, -1.9220,  0.6565,  ...,  1.6062,  1.0791,  0.5508],
        [-0.6424,  0.5349,  0.1385,  ...,  1.6062,  1.0791,  0.5508],
        [-0.1161,  1.2259,  0.6017,  ..., -1.7428, -0.9463,  0.2786],
        ...,
        [-2.6902,  0.6366, -0.6304,  ..., -1.4422,  1.1535, -0.3828],
        [-0.8675, -0.1672,  0.2356,  ..., -1.4422,  1.1535, -0.3828],
        [ 2.1204,  2.0343, -0.6783,  ..., -1.4422,  1.1535, -0.3828]], device='cuda:0')
cur_s_vecs
torch.Size([261, 128])
pred_vecs
torch.Size([261, 128])
cur_o_vecs
torch.Size([261, 128])
cur_t_vecs
torch.Size([261, 384])
tensor([[ 0.7485,  0.0000,  1.0146,  ...,  0.2931,  2.5315,  0.0000],
        [ 0.5147,  0.0000,  1.2972,  ...,  0.2931,  2.5315,  0.0000],
        [ 0.6936,  0.0000,  1.3732,  ...,  0.0000,  1.7754,  0.0000],
        ...,
        [ 0.6468,  0.0000,  1.3662,  ...,  1.9818,  1.6428,  0.0000],
        [ 0.0000,  0.0000,  2.3085,  ...,  1.9818,  1.6428,  0.0000],
        [ 0.0000,  0.0000,  2.7796,  ...,  1.9818,  1.6428,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([261, 128])
pred_vecs
torch.Size([261, 128])
cur_o_vecs
torch.Size([261, 128])
cur_t_vecs
torch.Size([261, 384])
tensor([[ 0.3797,  1.2370,  0.3912,  ...,  1.1840,  0.4964,  0.5225],
        [ 0.7414,  0.1453,  0.4923,  ...,  1.1840,  0.4964,  0.5225],
        [ 0.7636,  0.2241,  0.2317,  ...,  1.1974,  0.1135,  0.1904],
        ...,
        [ 0.2650,  0.7772,  0.0000,  ...,  1.5570,  1.6984,  1.0991],
        [ 0.4024,  1.5551,  0.2531,  ...,  1.5570,  1.6984,  1.0991],
        [ 0.8087,  1.1918,  0.1754,  ...,  1.5570,  1.6984,  1.0991]], device='cuda:0')
cur_s_vecs
torch.Size([261, 128])
pred_vecs
torch.Size([261, 128])
cur_o_vecs
torch.Size([261, 128])
cur_t_vecs
torch.Size([261, 384])
tensor([[ 0.0000,  0.8946,  3.2103,  ...,  0.0000,  1.5851,  0.0000],
        [ 0.0000,  0.7293,  1.6136,  ...,  0.0000,  1.5851,  0.0000],
        [ 0.0000,  1.0355,  2.4358,  ...,  0.0000,  0.9196,  0.0000],
        ...,
        [ 0.0000,  1.0934,  2.6822,  ...,  0.3749,  0.4611,  0.0000],
        [ 0.2278,  0.3523,  1.5891,  ...,  0.3749,  0.4611,  0.0000],
        [ 0.0000,  0.6731,  2.9385,  ...,  0.3749,  0.4611,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([261, 128])
pred_vecs
torch.Size([261, 128])
cur_o_vecs
torch.Size([261, 128])
cur_t_vecs
torch.Size([261, 384])
tensor([[ 2.2821,  0.3868,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0691,  0.1127,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0766,  0.2573,  0.0000,  ...,  0.2203,  0.0000,  0.0000],
        ...,
        [ 2.1337,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.7482,  0.8647,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.2506,  0.4175,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.4055,  0.3244, -1.9932,  ..., -0.4851, -0.6112, -0.5739],
        [-0.1388, -0.6650, -0.2770,  ...,  0.6152,  1.2162,  0.6133],
        [-0.8675, -0.1672,  0.2356,  ..., -0.4436,  0.0820,  0.6095],
        ...,
        [-0.9459,  1.0842, -0.3161,  ..., -1.4422,  1.1536, -0.3828],
        [-0.8675, -0.1672,  0.2356,  ..., -1.4422,  1.1536, -0.3828],
        [ 0.9389, -1.4313, -0.0028,  ..., -1.4422,  1.1536, -0.3828]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.5984,  0.0000,  1.0164,  ...,  0.0000,  1.8434,  0.0000],
        [ 0.7056,  0.0000,  2.6258,  ...,  0.0412,  2.3344,  0.0000],
        [ 0.3041,  0.0000,  1.6104,  ...,  0.1070,  1.9088,  0.0000],
        ...,
        [ 0.0274,  0.0000,  2.5926,  ...,  2.3105,  1.6444,  0.0000],
        [ 0.7299,  0.0000,  1.3196,  ...,  2.3105,  1.6444,  0.0000],
        [ 0.8091,  0.0000,  1.4499,  ...,  2.3105,  1.6444,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.9477,  0.5342,  0.0000,  ...,  0.9758,  0.0000,  0.0000],
        [ 0.8653,  0.5762,  0.0950,  ...,  1.6757,  0.5545,  0.4599],
        [ 0.6869,  0.5852,  0.0000,  ...,  1.1630,  0.1945,  0.1997],
        ...,
        [ 0.9951,  1.1993,  0.0000,  ...,  1.8693,  1.5021,  0.8124],
        [ 0.2353,  0.0000,  0.0000,  ...,  1.8693,  1.5021,  0.8124],
        [ 0.5810,  1.7476,  0.3442,  ...,  1.8693,  1.5021,  0.8124]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.0000,  1.3839,  2.8037,  ...,  0.0000,  0.9469,  0.0000],
        [ 0.0000,  0.7255,  2.3574,  ...,  0.0000,  0.5566,  0.0000],
        [ 0.2004,  0.9515,  2.1785,  ...,  0.0000,  0.3308,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.7615,  ...,  0.0000,  0.8771,  0.0000],
        [ 0.0000,  1.1519,  2.8125,  ...,  0.0000,  0.8771,  0.0000],
        [ 0.0000,  1.3098,  3.0918,  ...,  0.0000,  0.8771,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 1.9089,  0.1162,  0.0000,  ...,  0.0566,  0.0000,  0.0986],
        [ 2.0860,  0.4340,  0.0000,  ...,  0.0000,  0.0219,  0.0000],
        [ 2.3151,  0.5284,  0.0000,  ...,  0.5154,  0.0000,  0.0076],
        ...,
        [ 2.4105,  0.6294,  0.0000,  ...,  0.0000,  0.6291,  0.0000],
        [ 2.4525,  0.1052,  0.0000,  ...,  0.0000,  0.6291,  0.0000],
        [ 2.0479,  0.0000,  0.0000,  ...,  0.0000,  0.6291,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[-0.8675, -0.1672,  0.2356,  ...,  0.1132,  0.0839, -1.6467],
        [-0.8675, -0.1672,  0.2356,  ...,  0.1132,  0.0839, -1.6467],
        [ 1.2177, -0.3299,  1.6748,  ...,  0.1132,  0.0839, -1.6467],
        ...,
        [ 0.5554, -0.5039,  0.4227,  ..., -1.4422,  1.1536, -0.3828],
        [-0.8675, -0.1672,  0.2356,  ..., -1.4422,  1.1536, -0.3828],
        [ 0.9881,  0.4268, -1.6325,  ..., -1.4422,  1.1536, -0.3828]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 1.5810,  0.0000,  1.6030,  ...,  0.3227,  2.8012,  0.0000],
        [ 1.5810,  0.0000,  1.6030,  ...,  0.3227,  2.8012,  0.0000],
        [ 1.1041,  0.0000,  2.2577,  ...,  0.3227,  2.8012,  0.0000],
        ...,
        [ 0.1159,  0.0000,  2.5829,  ...,  2.3245,  2.4367,  0.0000],
        [ 0.8820,  0.0000,  1.4798,  ...,  2.3245,  2.4367,  0.0000],
        [ 0.7789,  0.0000,  2.8342,  ...,  2.3245,  2.4367,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 1.0211,  0.0157,  0.0000,  ...,  1.2400,  0.4371,  0.2338],
        [ 1.0211,  0.0157,  0.0000,  ...,  1.2400,  0.4371,  0.2338],
        [ 0.5405,  0.6015,  0.2115,  ...,  1.2400,  0.4371,  0.2338],
        ...,
        [ 0.9741,  0.2242,  0.0000,  ...,  1.7807,  1.6198,  1.1709],
        [ 0.5933,  0.4526,  0.1815,  ...,  1.7807,  1.6198,  1.1709],
        [ 0.1515,  0.7959,  0.4457,  ...,  1.7807,  1.6198,  1.1709]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  1.3262,  2.5939,  ...,  0.0000,  0.9725,  0.0000],
        [ 0.0000,  1.3262,  2.5939,  ...,  0.0000,  0.9725,  0.0000],
        [ 0.0000,  1.4821,  2.5798,  ...,  0.0000,  0.9725,  0.0000],
        ...,
        [ 0.0000,  1.1238,  2.2126,  ...,  0.1644,  0.9287,  0.0000],
        [ 0.0000,  1.1047,  2.0372,  ...,  0.1644,  0.9287,  0.0000],
        [ 0.0000,  1.0107,  2.1479,  ...,  0.1644,  0.9287,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 2.2485,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.2485,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0863,  0.3303,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 2.1749,  0.4129,  0.0000,  ...,  0.0000,  0.2269,  0.0000],
        [ 2.7465,  0.4087,  0.0000,  ...,  0.0000,  0.2269,  0.0000],
        [ 2.1579,  0.3592,  0.0000,  ...,  0.0000,  0.2269,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([32, 128])
pred_vecs
torch.Size([32, 128])
cur_o_vecs
torch.Size([32, 128])
cur_t_vecs
torch.Size([32, 384])
tensor([[ 0.9766, -1.9918,  0.5076,  ..., -0.4047,  0.9780,  2.0465],
        [-0.1035, -0.4222, -0.0844,  ..., -0.9671,  0.4753, -0.6451],
        [-0.1035, -0.4222, -0.0844,  ...,  0.8157, -0.9959,  0.7422],
        ...,
        [-0.6425,  0.5347,  0.1385,  ..., -1.4422,  1.1536, -0.3829],
        [-0.9459,  1.0842, -0.3162,  ..., -1.4422,  1.1536, -0.3829],
        [-2.6901,  0.6366, -0.6307,  ..., -1.4422,  1.1536, -0.3829]], device='cuda:0')
cur_s_vecs
torch.Size([32, 128])
pred_vecs
torch.Size([32, 128])
cur_o_vecs
torch.Size([32, 128])
cur_t_vecs
torch.Size([32, 384])
tensor([[ 0.9252,  0.0000,  1.8802,  ...,  0.0000,  2.4317,  0.0000],
        [ 0.0000,  0.0000,  2.7484,  ...,  0.0000,  2.5447,  0.0000],
        [ 0.0000,  0.0000,  2.7484,  ...,  0.2158,  0.8554,  0.0000],
        ...,
        [ 1.8815,  0.0000,  2.2384,  ...,  1.7322,  1.7004,  0.0000],
        [ 0.8189,  0.9159,  1.4895,  ...,  1.7322,  1.7004,  0.0000],
        [ 0.0000,  0.0000,  1.9893,  ...,  1.7322,  1.7004,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([32, 128])
pred_vecs
torch.Size([32, 128])
cur_o_vecs
torch.Size([32, 128])
cur_t_vecs
torch.Size([32, 384])
tensor([[ 0.3293,  0.3958,  0.0000,  ...,  0.8842,  0.6337,  0.2631],
        [ 1.0522,  0.7776,  0.0653,  ...,  2.0196,  0.0000,  0.0127],
        [ 1.0522,  0.7776,  0.0653,  ...,  1.9641,  0.0000,  0.0000],
        ...,
        [ 1.5607,  0.0000,  0.1286,  ...,  1.6602,  1.4136,  0.3630],
        [ 0.8225,  0.2515,  0.8644,  ...,  1.6602,  1.4136,  0.3630],
        [ 0.8656,  0.4379,  0.0000,  ...,  1.6602,  1.4136,  0.3630]], device='cuda:0')
cur_s_vecs
torch.Size([32, 128])
pred_vecs
torch.Size([32, 128])
cur_o_vecs
torch.Size([32, 128])
cur_t_vecs
torch.Size([32, 384])
tensor([[ 0.0000,  1.5567,  2.8449,  ...,  0.0000,  0.3264,  0.0000],
        [ 0.0000,  0.6349,  2.5268,  ...,  0.0000,  0.6535,  0.1786],
        [ 0.0000,  0.6349,  2.5268,  ...,  0.0000,  1.3578,  0.0000],
        ...,
        [ 0.0000,  1.3717,  2.4048,  ...,  0.2129,  0.6870,  0.0000],
        [ 0.0000,  1.1981,  3.0055,  ...,  0.2129,  0.6870,  0.0000],
        [ 0.0000,  0.4572,  1.5041,  ...,  0.2129,  0.6870,  0.0000]], device='cuda:0')
cur_s_vecs134413c
543224b
500982b
257951c
444399d
5383d
570579a
84034b
58979c
126204e
4761e
71737d
353982b
218886e
524924d
159403e
66309b
377278b
567305a
11690a
173565d
404271d
89707e
187803e
515300d
316353e
30958c
320537b
126808e
306127c
288313e
18155c
568677b
462929c
364571b
355175a
39360d
61202b
349527d
208267a
400850e
43742e
331302b
485064e
277346a
431997e
557434a
250724b
531778b
216026b
131374d
302397b
171309a
409754e
299643b
459110b
408946a
107620e
23176c
104537e
84815e
412384d
20087d
101877c
432627d
102834e
183539b
549098e
245242c
257713b
443086d
167995e
327413b
146120b
92107d
20291d
477468a
480576d
208585b
297009a
518918b
217135c
463168c
160152a
525273e
466134b
327536c
152245e
26747c
428304c
555800d
529352e
581061b
274424a
28349d
135989c
336854d
572147e
4764e
396369b
185963c
230570b
88325e
107108a
163829e
244122d
552461b
53464b
96067b
346915c
213530e
560563d
215612c
10138e
76802b
241178a
400999a
293576a
6710a
173814c
550278a
324740d
533452e
119761c
24026a
389772d
521995d
6075a
414212a
312359c
150354d
310518e
42704a
246099a
191690d
576526e
285651a
102609d
438899c
346724d
90869b
142587b
488583b
144371b
472320a
441816e
454044a
569602c
349153c
245534b
75362a
109568a
237859c
554319c
177381e
121172a
132516a
113619d
404395b
502557d
47909e
59582d
13595b
330954d
71631c
101426a
103558b
388923b
522235a
367605a
189187a
522489d
540926b
313608d
285357c
493485a
134597e
127750c
139789e
397938a
354938e
233112e
110777e
134849b
553401b
310564d
150594d
529944e
102421d
282978b
137339b
390298c
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
176726c
289100a
385540c
279345a
31442c
96728b
474105b
494795d
103575d
60378b
261664e
535265c
174303b
37291d
323479a
455877a
157356a
485491e
416188a
84896e
578119d
132860e
168417b
208347b
289172d
438267e
243796d
127450a
509267e
3001a
14798d
327813a
324611a
546261e
49286d
81035b
22658d
505642a
520389c
259853a
97170c
455902d
238712c
167074b
103582a
332292c
85549b
210266a
207573a
363190c
217991b
566547e
78286b
10082e
344025a
21531c
221633e
359164c
485368b
165299d
572042e
457086c
545257e
269015d
167126b
491558e
195894e
214873b
6421c
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
412992d
113019c
367442b
365027d
517417b
457448d
478805d
260109a
507148b
308803a
340897e
288921b
302576c
323129a
159199a
392476a
153574c
283809a
545929c
47774c
169395c
170687a
224629e
52324b
2477b
242167b
573149e
557408d
276694e
91263a
197029b
278899b
295850e
189033e
308295c
233869d
248591a
163412b
511143a
39716b
322121b
194050c
43171d
393647a
522704b
154597e
329151a
189648b
254589a
217720d
488980a
295693b
426880c
577712e
569174b
509514e
13576e
400848e
468751d
188498c
295491a
223420c
452459c
459208b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

torch.Size([32, 128])
pred_vecs
torch.Size([32, 128])
cur_o_vecs
torch.Size([32, 128])
cur_t_vecs
torch.Size([32, 384])
tensor([[ 2.6264,  0.7701,  0.0000,  ...,  1.3240,  0.0000,  0.2184],
        [ 2.3475,  0.0343,  0.0000,  ...,  0.0000,  0.0258,  0.0284],
        [ 2.3475,  0.0343,  0.0000,  ...,  0.0000,  0.1222,  0.0000],
        ...,
        [ 2.3366,  0.1992,  0.0000,  ...,  0.0000,  0.1965,  0.0000],
        [ 2.4247,  0.0000,  0.0000,  ...,  0.0000,  0.1965,  0.0000],
        [ 2.0138,  0.4941,  0.0000,  ...,  0.0000,  0.1965,  0.0000]], device='cuda:0')
Starting epoch 9
cur_s_vecs
torch.Size([220, 128])
pred_vecs
torch.Size([220, 128])
cur_o_vecs
torch.Size([220, 128])
cur_t_vecs
torch.Size([220, 384])
tensor([[-0.0609, -0.5170, -0.5705,  ..., -0.1282, -1.6545, -0.6402],
        [ 0.3122,  0.4725,  0.6257,  ..., -1.8936,  0.6040, -0.8820],
        [ 0.3122,  0.4725,  0.6257,  ...,  0.4182, -0.8254,  0.5653],
        ...,
        [ 0.6267,  0.7194, -1.0825,  ..., -1.4422,  1.1536, -0.3829],
        [-0.8676, -0.1672,  0.2356,  ..., -1.4422,  1.1536, -0.3829],
        [ 0.7877, -0.7163, -2.5880,  ..., -1.4422,  1.1536, -0.3829]], device='cuda:0')
cur_s_vecs
torch.Size([220, 128])
pred_vecs
torch.Size([220, 128])
cur_o_vecs
torch.Size([220, 128])
cur_t_vecs
torch.Size([220, 384])
tensor([[ 0.2789,  0.0000,  1.7363,  ...,  0.0000,  2.9044,  0.0000],
        [ 0.7130,  0.0000,  1.9728,  ...,  1.2383,  1.5398,  0.0000],
        [ 0.7130,  0.0000,  1.9728,  ...,  0.0000,  1.1544,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.1699,  ...,  1.9006,  2.0519,  0.0000],
        [ 0.6069,  0.0000,  2.2990,  ...,  1.9006,  2.0519,  0.0000],
        [ 0.0000,  0.0000,  2.6140,  ...,  1.9006,  2.0519,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([220, 128])
pred_vecs
torch.Size([220, 128])
cur_o_vecs
torch.Size([220, 128])
cur_t_vecs
torch.Size([220, 384])
tensor([[ 0.2170,  1.5391,  0.0000,  ...,  1.6867,  0.1946,  0.2792],
        [ 1.6566,  0.3166,  0.0000,  ...,  1.0934,  0.1968,  0.0616],
        [ 1.6566,  0.3166,  0.0000,  ...,  0.9790,  0.7567,  0.5228],
        ...,
        [ 1.2222,  0.9705,  0.3242,  ...,  1.9232,  1.2591,  1.0572],
        [ 0.4682,  1.1461,  0.6648,  ...,  1.9232,  1.2591,  1.0572],
        [ 0.1733,  0.6415,  0.0000,  ...,  1.9232,  1.2591,  1.0572]], device='cuda:0')
cur_s_vecs
torch.Size([220, 128])
pred_vecs
torch.Size([220, 128])
cur_o_vecs
torch.Size([220, 128])
cur_t_vecs
torch.Size([220, 384])
tensor([[ 0.0000,  0.6404,  2.3126,  ...,  0.0000,  0.5831,  0.0000],
        [ 0.0000,  1.6953,  2.9338,  ...,  0.0459,  0.6400,  0.0000],
        [ 0.0000,  1.6953,  2.9338,  ...,  0.0000,  0.3550,  0.0000],
        ...,
        [ 0.0115,  0.8880,  1.9728,  ...,  0.4309,  0.7562,  0.0000],
        [ 0.0000,  0.4698,  2.3703,  ...,  0.4309,  0.7562,  0.0000],
        [ 0.0000,  0.9776,  1.8805,  ...,  0.4309,  0.7562,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([220, 128])
pred_vecs
torch.Size([220, 128])
cur_o_vecs
torch.Size([220, 128])
cur_t_vecs
torch.Size([220, 384])
tensor([[ 1.9878,  0.4200,  0.0000,  ...,  0.3403,  0.0000,  0.5042],
        [ 2.1241,  0.5788,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.1241,  0.5788,  0.0000,  ...,  0.7127,  0.0000,  0.0438],
        ...,
        [ 2.2509,  0.6201,  0.0000,  ...,  0.0000,  0.3268,  0.0000],
        [ 2.1594,  0.0315,  0.0000,  ...,  0.0000,  0.3268,  0.0000],
        [ 1.6805,  0.3346,  0.0000,  ...,  0.0000,  0.3268,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.6160, -1.9221,  0.6567,  ..., -0.9779,  1.6879, -0.8076],
        [ 0.2481,  2.3563, -1.1860,  ..., -1.5915, -1.0287, -0.6950],
        [ 0.6160, -1.9221,  0.6567,  ..., -1.5915, -1.0287, -0.6950],
        ...,
        [ 0.6160, -1.9221,  0.6567,  ..., -1.4422,  1.1536, -0.3829],
        [ 0.9881,  0.4268, -1.6325,  ..., -1.4422,  1.1536, -0.3829],
        [ 0.4112,  1.4785, -2.0315,  ..., -1.4422,  1.1536, -0.3829]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 1.0093,  0.0000,  1.5030,  ...,  0.4553,  1.1609,  0.0000],
        [ 0.0000,  0.0000,  1.4149,  ...,  1.1183,  2.2248,  0.0000],
        [ 1.0093,  0.0000,  1.5030,  ...,  1.1183,  2.2248,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.8699,  ...,  2.0970,  1.4683,  0.0000],
        [ 0.0000,  0.0000,  2.6728,  ...,  2.0970,  1.4683,  0.0000],
        [ 0.5535,  0.0000,  1.4055,  ...,  2.0970,  1.4683,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.2940,  1.2094,  0.0962,  ...,  0.4914,  0.4132,  0.1248],
        [ 0.6222,  1.5057,  0.3545,  ...,  1.0412,  0.7559,  0.0784],
        [ 0.2940,  1.2094,  0.0962,  ...,  1.0412,  0.7559,  0.0784],
        ...,
        [ 1.2987,  1.0996,  0.5888,  ...,  1.7187,  1.7048,  0.7724],
        [ 1.0436,  1.1464,  0.1933,  ...,  1.7187,  1.7048,  0.7724],
        [ 0.7947,  0.6281,  0.5449,  ...,  1.7187,  1.7048,  0.7724]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.0000,  1.3005,  3.4769,  ...,  0.0000,  0.9603,  0.0000],
        [ 0.0000,  0.6401,  2.2248,  ...,  0.0000,  1.3212,  0.0000],
        [ 0.0000,  1.3005,  3.4769,  ...,  0.0000,  1.3212,  0.0000],
        ...,
        [ 0.0000,  0.8722,  2.8121,  ...,  0.4481,  0.5927,  0.0000],
        [ 0.0000,  1.2977,  1.5975,  ...,  0.4481,  0.5927,  0.0000],
        [ 0.0000,  1.3475,  2.0994,  ...,  0.4481,  0.5927,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([228, 128])
pred_vecs
torch.Size([228, 128])
cur_o_vecs
torch.Size([228, 128])
cur_t_vecs
torch.Size([228, 384])
tensor([[ 2.5152,  0.2334,  0.0000,  ...,  0.6122,  0.0000,  0.4564],
        [ 1.6127,  0.1751,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.5152,  0.2334,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 2.7795,  1.1208,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 3.2127,  1.2636,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 3.0440,  0.9390,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
t = 90 / 1000000
 G [bbox_pred]: 0.4086
 G [L1_pixel_loss]: 0.9153
 G [total_loss]: 1.6004
 G [g_gan_obj_loss]: 0.0098
 G [g_gan_img_loss]: 0.0086
 G [ac_loss]: 0.2581
 D_obj [d_ac_loss_real]: 2.9169
 D_obj [d_ac_loss_fake]: 2.5809
 D_obj [d_obj_gan_loss]: 1.1342
 D_img [d_img_gan_loss]: 1.2235
cur_s_vecs
torch.Size([265, 128])
pred_vecs
torch.Size([265, 128])
cur_o_vecs
torch.Size([265, 128])
cur_t_vecs
torch.Size([265, 384])
tensor([[-0.8886,  0.5588,  0.1128,  ...,  0.0829, -0.1554,  0.5473],
        [-0.8886,  0.5588,  0.1128,  ...,  0.0829, -0.1554,  0.5473],
        [-0.8886,  0.5588,  0.1128,  ...,  0.0829, -0.1554,  0.5473],
        ...,
        [-0.8678, -0.1673,  0.2356,  ..., -1.4422,  1.1536, -0.3829],
        [ 2.7248, -0.4528,  0.3923,  ..., -1.4422,  1.1536, -0.3829],
        [-2.0914,  2.3493, -1.0713,  ..., -1.4422,  1.1536, -0.3829]], device='cuda:0')
cur_s_vecs
torch.Size([265, 128])
pred_vecs
torch.Size([265, 128])
cur_o_vecs
torch.Size([265, 128])
cur_t_vecs
torch.Size([265, 384])
tensor([[ 0.9633,  0.0000,  3.3569,  ...,  1.3768,  2.2202,  0.0000],
        [ 0.0000,  0.0000,  3.7332,  ...,  1.3768,  2.2202,  0.0000],
        [ 0.0000,  0.0000,  3.5726,  ...,  0.9071,  2.1983,  0.0000],
        ...,
        [ 0.2633,  0.0000,  2.6469,  ...,  2.2544,  1.5453,  0.0000],
        [ 1.5748,  0.0000,  2.8128,  ...,  2.2544,  1.5453,  0.0000],
        [ 1.2062,  0.0000,  2.7839,  ...,  2.2544,  1.5453,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([265, 128])
pred_vecs
torch.Size([265, 128])
cur_o_vecs
torch.Size([265, 128])
cur_t_vecs
torch.Size([265, 384])
tensor([[ 0.2901,  0.6644,  0.0782,  ...,  1.4266,  0.0907,  0.3244],
        [ 0.1846,  0.3104,  0.0000,  ...,  1.4266,  0.0907,  0.3244],
        [ 0.5798,  0.2365,  0.0000,  ...,  1.3423,  0.3004,  0.1475],
        ...,
        [ 0.4685,  1.1058,  0.0000,  ...,  1.3339,  1.6913,  0.8969],
        [ 0.0992,  0.0000,  0.4255,  ...,  1.3339,  1.6913,  0.8969],
        [ 0.3078,  0.1594,  0.0000,  ...,  1.3339,  1.6913,  0.8969]], device='cuda:0')
cur_s_vecs
torch.Size([265, 128])
pred_vecs
torch.Size([265, 128])
cur_o_vecs
torch.Size([265, 128])
cur_t_vecs
torch.Size([265, 384])
tensor([[ 0.0000,  1.0934,  2.5814,  ...,  0.0000,  0.8797,  0.0000],
        [ 0.0000,  0.5297,  2.0870,  ...,  0.0000,  0.8797,  0.0000],
        [ 0.0000,  0.3002,  2.1606,  ...,  0.0000,  0.7173,  0.0000],
        ...,
        [ 0.0000,  0.0562,  1.6145,  ...,  0.2402,  1.0781,  0.0000],
        [ 0.0000,  1.2941,  2.5731,  ...,  0.2402,  1.0781,  0.0000],
        [ 0.0000,  0.8478,  2.2239,  ...,  0.2402,  1.0781,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([265, 128])
pred_vecs
torch.Size([265, 128])
cur_o_vecs
torch.Size([265, 128])
cur_t_vecs
torch.Size([265, 384])
tensor([[ 2.6333,  0.0219,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0246,  0.4847,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.3231,  0.5862,  0.0000,  ...,  0.2702,  0.0000,  0.0000],
        ...,
        [ 2.1268,  0.4565,  0.0000,  ...,  0.0000,  0.3405,  0.0000],
        [ 2.5449,  0.0292,  0.0000,  ...,  0.0000,  0.3405,  0.0000],
        [ 2.2179,  0.2056,  0.0000,  ...,  0.0000,  0.3405,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[-0.0609, -0.5171, -0.5702,  ...,  0.4393, -0.7365,  0.8383],
        [-0.0609, -0.5171, -0.5702,  ..., -1.7427, -0.9463,  0.2788],
        [-0.0609, -0.5171, -0.5702,  ..., -1.7427, -0.9463,  0.2788],
        ...,
        [-0.8678, -0.1673,  0.2356,  ..., -1.4423,  1.1536, -0.3829],
        [-2.6899,  0.6367, -0.6310,  ..., -1.4423,  1.1536, -0.3829],
        [ 2.1203,  2.0342, -0.6782,  ..., -1.4423,  1.1536, -0.3829]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.5086,  0.0000,  1.9729,  ...,  0.0689,  1.9159,  0.0000],
        [ 0.5086,  0.0000,  1.9729,  ...,  1.0254,  2.6348,  0.0000],
        [ 0.5086,  0.0000,  1.9729,  ...,  1.0254,  2.6348,  0.0000],
        ...,
        [ 0.5606,  0.0000,  1.3459,  ...,  2.0958,  1.3738,  0.0000],
        [ 0.4025,  0.0000,  1.3752,  ...,  2.0958,  1.3738,  0.0000],
        [ 0.0000,  0.0000,  2.2315,  ...,  2.0958,  1.3738,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.5427,  0.0302,  0.0000,  ...,  1.2101,  0.0000,  0.4285],
        [ 0.5427,  0.0302,  0.0000,  ...,  0.7876,  0.1122,  0.1336],
        [ 0.5427,  0.0302,  0.0000,  ...,  0.7876,  0.1122,  0.1336],
        ...,
        [ 0.1259,  0.7691,  0.3801,  ...,  1.3265,  1.8401,  1.0161],
        [ 0.0000,  1.2455,  0.0000,  ...,  1.3265,  1.8401,  1.0161],
        [ 1.0538,  0.7441,  0.0000,  ...,  1.3265,  1.8401,  1.0161]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.0000,  1.3950,  2.5646,  ...,  0.0000,  0.7467,  0.0000],
        [ 0.0000,  1.3950,  2.5646,  ...,  0.0000,  0.7191,  0.0000],
        [ 0.0000,  1.3950,  2.5646,  ...,  0.0000,  0.7191,  0.0000],
        ...,
        [ 0.0000,  0.9862,  1.7408,  ...,  0.3942,  0.5757,  0.0000],
        [ 0.0000,  0.3617,  1.5112,  ...,  0.3942,  0.5757,  0.0000],
        [ 0.0000,  1.2299,  2.0333,  ...,  0.3942,  0.5757,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([247, 128])
pred_vecs
torch.Size([247, 128])
cur_o_vecs
torch.Size([247, 128])
cur_t_vecs
torch.Size([247, 384])
tensor([[ 2.6968,  0.6661,  0.0000,  ...,  0.0490,  0.0000,  0.0000],
        [ 2.6968,  0.6661,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.6968,  0.6661,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 2.5164,  0.6940,  0.0000,  ...,  0.0000,  0.2210,  0.0000],
        [ 1.7510,  0.2306,  0.0000,  ...,  0.0000,  0.2210,  0.0000],
        [ 2.3176,  0.2002,  0.0000,  ...,  0.0000,  0.2210,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[-0.1034, -0.4223, -0.0841,  ...,  0.1184,  1.0589, -0.6483],
        [-2.3053, -1.1131,  0.2546,  ..., -0.4047,  0.9781,  2.0464],
        [-0.1034, -0.4223, -0.0841,  ...,  0.6150,  1.2162,  0.6133],
        ...,
        [ 0.6383,  1.3099,  0.2875,  ..., -1.4423,  1.1536, -0.3830],
        [ 1.2176, -0.3299,  1.6745,  ..., -1.4423,  1.1536, -0.3830],
        [-0.8679, -0.1674,  0.2356,  ..., -1.4423,  1.1536, -0.3830]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 1.0814,  0.0000,  2.3467,  ...,  0.0000,  2.4671,  0.0000],
        [ 1.2526,  0.0000,  1.4819,  ...,  0.0000,  1.8395,  0.0000],
        [ 1.0814,  0.0000,  2.3467,  ...,  0.1377,  1.7920,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.5647,  ...,  2.2963,  1.9146,  0.0000],
        [ 1.1379,  0.0000,  2.0015,  ...,  2.2963,  1.9146,  0.0000],
        [ 0.0000,  0.0000,  0.9767,  ...,  2.2963,  1.9146,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.3915,  0.6561,  0.3115,  ...,  1.8840,  0.1222,  0.1559],
        [ 0.8829,  0.4593,  0.3236,  ...,  1.4050,  0.5492,  0.0000],
        [ 0.3915,  0.6561,  0.3115,  ...,  1.9688,  0.1649,  0.1742],
        ...,
        [ 0.4795,  1.9339,  0.0000,  ...,  1.1048,  0.9150,  1.2030],
        [ 0.4838,  0.7355,  0.5159,  ...,  1.1048,  0.9150,  1.2030],
        [ 0.3843,  0.6862,  0.0283,  ...,  1.1048,  0.9150,  1.2030]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  0.9449,  2.1342,  ...,  0.0000,  0.6002,  0.0000],
        [ 0.0000,  1.2773,  2.2091,  ...,  0.0001,  0.0495,  0.0000],
        [ 0.0000,  0.9449,  2.1342,  ...,  0.0000,  0.6134,  0.0000],
        ...,
        [ 0.0379,  0.7209,  2.1673,  ...,  0.3962,  0.5959,  0.0000],
        [ 0.0000,  0.6912,  2.2973,  ...,  0.3962,  0.5959,  0.0000],
        [ 0.0000,  1.3305,  3.0279,  ...,  0.3962,  0.5959,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([236, 128])
pred_vecs
torch.Size([236, 128])
cur_o_vecs
torch.Size([236, 128])
cur_t_vecs
torch.Size([236, 384])
tensor([[ 2.1024,  0.0000,  0.0000,  ...,  0.0000,  0.2327,  0.2279],
        [ 2.2717,  0.4433,  0.0000,  ...,  0.9843,  0.0000,  0.3743],
        [ 2.1024,  0.0000,  0.0000,  ...,  0.0000,  0.4767,  0.0000],
        ...,
        [ 1.9221,  0.4758,  0.0000,  ...,  0.0000,  0.3745,  0.0000],
        [ 2.1949,  0.4000,  0.0000,  ...,  0.0000,  0.3745,  0.0000],
        [ 2.3122,  0.0000,  0.0000,  ...,  0.0000,  0.3745,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([222, 128])
pred_vecs
torch.Size([222, 128])
cur_o_vecs
torch.Size([222, 128])
cur_t_vecs
torch.Size([222, 384])
tensor([[ 0.2965, -0.6538, -0.1203,  ...,  0.4393, -0.7366,  0.8382],
        [ 0.5972, -0.2632, -1.7067,  ...,  0.6150,  1.2162,  0.6133],
        [-0.8680, -0.1674,  0.2356,  ...,  1.8049, -0.1456, -2.3653],
        ...,
        [-0.8888,  0.5590,  0.1128,  ..., -1.4423,  1.1535, -0.3830],
        [-0.8680, -0.1674,  0.2356,  ..., -1.4423,  1.1535, -0.3830],
        [ 0.3501,  0.3469,  0.0296,  ..., -1.4423,  1.1535, -0.3830]], device='cuda:0')
cur_s_vecs
torch.Size([222, 128])
pred_vecs
torch.Size([222, 128])
cur_o_vecs
torch.Size([222, 128])
cur_t_vecs
torch.Size([222, 384])
tensor([[ 0.0000,  0.0000,  1.7879,  ...,  0.0000,  0.9042,  0.0000],
        [ 0.5908,  0.0000,  1.4278,  ...,  0.0000,  0.5818,  0.0000],
        [ 0.1596,  0.0000,  0.8300,  ...,  0.1854,  2.2447,  0.0000],
        ...,
        [ 0.0000,  0.0000,  2.8686,  ...,  2.3650,  2.4133,  0.0000],
        [ 0.6595,  0.0000,  2.1196,  ...,  2.3650,  2.4133,  0.0000],
        [ 0.4714,  0.0000,  2.7216,  ...,  2.3650,  2.4133,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([222, 128])
pred_vecs
torch.Size([222, 128])
cur_o_vecs
torch.Size([222, 128])
cur_t_vecs
torch.Size([222, 384])
tensor([[ 0.0657,  1.2271,  0.0000,  ...,  1.4062,  0.3487,  0.2765],
        [ 0.3535,  0.6525,  0.0000,  ...,  1.1022,  0.9593,  0.2460],
        [ 0.2273,  0.5978,  0.0000,  ...,  1.2782,  0.5999,  0.0347],
        ...,
        [ 0.7482,  0.4903,  0.1194,  ...,  1.2680,  1.0902,  0.8899],
        [ 0.7782,  0.0000,  0.0000,  ...,  1.2680,  1.0902,  0.8899],
        [ 0.6783,  0.4292,  0.1789,  ...,  1.2680,  1.0902,  0.8899]], device='cuda:0')
cur_s_vecs
torch.Size([222, 128])
pred_vecs
torch.Size([222, 128])
cur_o_vecs
torch.Size([222, 128])
cur_t_vecs
torch.Size([222, 384])
tensor([[ 0.0000,  0.8659,  2.2132,  ...,  0.0000,  0.3390,  0.0000],
        [ 0.0000,  0.5619,  2.3697,  ...,  0.0000,  0.5735,  0.0000],
        [ 0.0000,  0.8991,  2.6033,  ...,  0.0000,  0.6162,  0.0000],
        ...,
        [ 0.0000,  0.3555,  1.8576,  ...,  0.4049,  0.5681,  0.0000],
        [ 0.0000,  1.4219,  2.7706,  ...,  0.4049,  0.5681,  0.0000],
        [ 0.0000,  0.2398,  2.3665,  ...,  0.4049,  0.5681,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([222, 128])
pred_vecs
torch.Size([222, 128])
cur_o_vecs
torch.Size([222, 128])
cur_t_vecs
torch.Size([222, 384])
tensor([[ 1.6975,  0.8026,  0.0000,  ...,  0.0786,  0.0000,  0.4026],
        [ 1.9274,  0.2957,  0.0000,  ...,  0.6371,  0.0000,  0.7488],
        [ 1.7195,  0.2444,  0.0000,  ...,  0.2539,  0.0000,  0.0806],
        ...,
        [ 1.9558,  0.3116,  0.0000,  ...,  0.0000,  0.2700,  0.0000],
        [ 2.5984,  0.1435,  0.0000,  ...,  0.0000,  0.2700,  0.0000],
        [ 1.8134,  0.1119,  0.0000,  ...,  0.0000,  0.2700,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[-0.6421,  0.5346,  0.1386,  ...,  0.6150,  1.2162,  0.6133],
        [-0.8680, -0.1675,  0.2355,  ..., -2.8329,  0.1844, -0.8577],
        [-0.6421,  0.5346,  0.1386,  ...,  0.6150,  1.2162,  0.6133],
        ...,
        [-0.8680, -0.1675,  0.2355,  ..., -1.4423,  1.1535, -0.3830],
        [-1.6380, -0.0542,  0.4569,  ..., -1.4423,  1.1535, -0.3830],
        [-2.7246,  1.2281,  0.8065,  ..., -1.4423,  1.1535, -0.3830]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 1.3346,  0.0000,  1.9291,  ...,  0.0000,  2.5620,  0.0000],
        [ 0.4017,  0.0000,  1.3480,  ...,  0.0000,  2.9432,  0.0000],
        [ 1.3346,  0.0000,  1.9291,  ...,  0.0000,  2.5620,  0.0000],
        ...,
        [ 1.0153,  0.0000,  1.2518,  ...,  2.2909,  2.2827,  0.0000],
        [ 0.6502,  0.0000,  2.3218,  ...,  2.2909,  2.2827,  0.0000],
        [ 1.1092,  0.0000,  1.2230,  ...,  2.2909,  2.2827,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.0000,  0.1634,  0.0256,  ...,  1.9160,  0.0605,  0.8566],
        [ 0.7111,  0.3088,  0.1890,  ...,  0.8656,  0.7276,  0.2280],
        [ 0.0000,  0.1634,  0.0256,  ...,  1.9160,  0.0605,  0.8566],
        ...,
        [ 0.6556,  0.2347,  0.0000,  ...,  1.0963,  1.6570,  1.0182],
        [ 1.1898,  1.4286,  0.2087,  ...,  1.0963,  1.6570,  1.0182],
        [ 0.2257,  1.0446,  0.0000,  ...,  1.0963,  1.6570,  1.0182]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.0000,  1.4477,  1.9588,  ...,  0.0000,  0.8298,  0.0000],
        [ 0.0000,  0.2729,  2.0782,  ...,  0.0000,  0.3989,  0.0000],
        [ 0.0000,  1.4477,  1.9588,  ...,  0.0000,  0.8298,  0.0000],
        ...,
        [ 0.0000,  1.4535,  2.4886,  ...,  0.1712,  0.9477,  0.0000],
        [ 0.0000,  0.0000,  1.3013,  ...,  0.1712,  0.9477,  0.0000],
        [ 0.0000,  1.6438,  2.9294,  ...,  0.1712,  0.9477,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 2.4215,  0.0000,  0.0000,  ...,  0.0000,  0.1964,  0.3969],
        [ 2.8605,  0.4208,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.4215,  0.0000,  0.0000,  ...,  0.0000,  0.1964,  0.3969],
        ...,
        [ 1.8471,  0.4286,  0.0000,  ...,  0.0000,  0.4733,  0.0000],
        [ 1.6725,  0.3069,  0.0000,  ...,  0.0000,  0.4733,  0.0000],
        [ 1.9791,  0.3935,  0.0000,  ...,  0.0000,  0.4733,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[-0.8681, -0.1675,  0.2355,  ...,  0.4178, -0.8256,  0.5651],
        [-0.0610, -0.5172, -0.5698,  ..., -0.1283, -1.6545, -0.6403],
        [-0.8681, -0.1675,  0.2355,  ...,  0.4178, -0.8256,  0.5651],
        ...,
        [-0.0946, -0.5048,  1.1327,  ..., -1.4423,  1.1535, -0.3830],
        [-0.1035, -0.4223, -0.0840,  ..., -1.4423,  1.1535, -0.3830],
        [-0.8681, -0.1675,  0.2355,  ..., -1.4423,  1.1535, -0.3830]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[ 0.4854,  0.0000,  0.8295,  ...,  0.0000,  2.7544,  0.0000],
        [ 0.5599,  0.0000,  1.2395,  ...,  0.0602,  2.1161,  0.0000],
        [ 0.4854,  0.0000,  0.8295,  ...,  0.0000,  2.7544,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.6336,  ...,  1.8830,  1.8564,  0.0000],
        [ 0.6642,  0.0000,  0.7496,  ...,  1.8830,  1.8564,  0.0000],
        [ 0.5279,  0.0000,  1.5948,  ...,  1.8830,  1.8564,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[ 0.4173,  0.7266,  0.0000,  ...,  1.9454,  0.2547,  0.2888],
        [ 0.4225,  0.8043,  0.0000,  ...,  0.8989,  0.3162,  0.3486],
        [ 0.4173,  0.7266,  0.0000,  ...,  1.9454,  0.2547,  0.2888],
        ...,
        [ 1.2049,  0.4612,  0.0000,  ...,  1.0916,  1.6435,  1.2592],
        [ 0.8156,  0.0000,  0.0000,  ...,  1.0916,  1.6435,  1.2592],
        [ 0.0000,  1.1485,  0.0000,  ...,  1.0916,  1.6435,  1.2592]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[ 0.0000,  0.9252,  3.0569,  ...,  0.0000,  0.3255,  0.0000],
        [ 0.0000,  0.5999,  2.5026,  ...,  0.0000,  0.5672,  0.0000],
        [ 0.0000,  0.9252,  3.0569,  ...,  0.0000,  0.3255,  0.0000],
        ...,
        [ 0.0000,  0.6362,  1.8769,  ...,  0.7794,  0.8508,  0.0000],
        [ 0.0000,  1.6045,  2.3827,  ...,  0.7794,  0.8508,  0.0000],
        [ 0.0000,  0.5882,  2.1878,  ...,  0.7794,  0.8508,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[ 2.0880,  0.3346,  0.0000,  ...,  0.0000,  0.1274,  0.0000],
        [ 1.9560,  0.7123,  0.0000,  ...,  0.4610,  0.0000,  0.3284],
        [ 2.0880,  0.3346,  0.0000,  ...,  0.0000,  0.1274,  0.0000],
        ...,
        [ 1.7256,  0.4333,  0.0000,  ...,  0.0000,  0.3211,  0.0000],
        [ 2.2279,  0.3435,  0.0000,  ...,  0.0000,  0.3211,  0.0000],
        [ 2.0815,  0.0194,  0.0000,  ...,  0.0000,  0.3211,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[-0.2046, -0.6487,  0.5935,  ...,  1.0673,  0.1823, -0.6027],
        [ 1.3912,  1.1432, -1.0843,  ...,  1.0673,  0.1823, -0.6027],
        [ 0.4054,  0.3245, -1.9933,  ...,  3.0768, -0.0134, -0.3968],
        ...,
        [ 0.7876, -0.7166, -2.5883,  ..., -1.4423,  1.1534, -0.3830],
        [ 1.4332, -0.5829,  0.2723,  ..., -1.4423,  1.1534, -0.3830],
        [ 1.3912,  1.1432, -1.0843,  ..., -1.4423,  1.1534, -0.3830]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[ 0.4545,  0.0000,  2.2484,  ...,  0.3827,  2.5413,  0.0000],
        [ 1.4625,  0.0000,  2.6652,  ...,  0.3827,  2.5413,  0.0000],
        [ 0.5939,  0.0000,  1.8449,  ...,  0.0000,  0.9809,  0.0000],
        ...,
        [ 0.5158,  0.0000,  2.2530,  ...,  1.9721,  1.7941,  0.0000],
        [ 0.3921,  0.0000,  3.6233,  ...,  1.9721,  1.7941,  0.0000],
        [ 0.6109,  0.0000,  1.0879,  ...,  1.9721,  1.7941,  0.0000]], device='cuda:0')312359c
47774c
431997e
191690d
323129a
568677b
52324b
485491e
237859c
367605a
71631c
20291d
132860e
78286b
329151a
488980a
570579a
549098e
457448d
197029b
42704a
261664e
276694e
5383d
154597e
288313e
346915c
279345a
529352e
23176c
168417b
20087d
320537b
177381e
412992d
96067b
313608d
107108a
13595b
400850e
344025a
414212a
346724d
104537e
174303b
390298c
101426a
163412b
47909e
134597e
208267a
331302b
324611a
557408d
572042e
485368b
359164c
377278b
389772d
367442b
183539b
107620e
189187a
169395c
245242c
289100a
173814c
208585b
76802b
14798d
39360d
466134b
66309b
58979c
6075a
24026a
217720d
31442c
511143a
84896e
299643b
412384d
529944e
214873b
566547e
462929c
210266a
493485a
257951c
327536c
545257e
485064e
518918b
194050c
2477b
392476a
39716b
102834e
455902d
340897e
171309a
113619d
285651a
22658d
250724b
59582d
173565d
285357c
43171d
90869b
385540c
75362a
242167b
278899b
84034b
308295c
103582a
139789e
53464b
96728b
553401b
189033e
522235a
535265c
71737d
159199a
488583b
37291d
560563d
545929c
97170c
230570b
507148b
243796d
349527d
288921b
404395b
165299d
153574c
89707e
572147e
157356a
109568a
295693b
208347b
428304c
142587b
121172a
438267e
257713b
444399d
135989c
396369b
224629e
302397b
455877a
241178a
248591a
195894e
61202b
438899c
336854d
308803a
81035b
327413b
525273e
91263a
443086d
217991b
160152a
408946a
554319c
477468a
131374d
365027d
400999a
550278a
505642a
364571b
127450a
126204e
102609d
269015d
543224b
531778b
10082e
295850e
4764e
330954d
578119d
459208b
491558e
245534b
577712e
323479a
215612c
43742e
324740d
4761e
13576e
353982b
400848e
388923b
567305a
185963c
18155c
189648b
500982b
218886e
144371b
393647a
277346a
452459c
509267e
30958c
426880c
238712c
557434a
573149e
454044a
146120b
150354d
416188a
216026b
576526e
134413c
355175a
310518e
363190c
176726c
6421c
10138e
297009a
463168c
581061b
468751d
555800d
274424a
213530e
316353e
60378b
332292c
478805d
137339b
480576d
552461b
397938a
522489d
254589a
306127c
11690a
524924d
569174b
474105b
459110b
533452e
546261e
295491a
150594d
134849b
302576c
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
244122d
246099a
187803e
327813a
233112e
92107d
349153c
170687a
509514e
354938e
84815e
432627d
167074b
310564d
472320a
404271d
110777e
441816e
457086c
569602c
293576a
409754e
26747c
520389c
217135c
207573a
322121b
260109a
88325e
3001a
521995d
127750c
132516a
221633e
522704b
102421d
103558b
289172d
126808e
494795d
283809a
282978b
188498c
502557d
233869d
159403e
540926b
113019c
85549b
163829e
517417b
167126b
103575d
49286d
223420c
21531c
101877c
6710a
28349d
152245e
515300d
259853a
167995e
119761c
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[ 0.6152,  0.5027,  0.0000,  ...,  2.1455,  0.5429,  0.7833],
        [ 0.2552,  0.5005,  0.0000,  ...,  2.1455,  0.5429,  0.7833],
        [ 1.1124,  0.4048,  0.0000,  ...,  0.9167,  0.8350,  0.5955],
        ...,
        [ 0.9149,  0.1480,  0.0000,  ...,  1.4369,  0.9695,  1.1442],
        [ 0.5751,  0.4577,  0.3756,  ...,  1.4369,  0.9695,  1.1442],
        [ 1.2900,  0.5811,  0.2540,  ...,  1.4369,  0.9695,  1.1442]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[ 0.0000,  0.2943,  1.8082,  ...,  0.0000,  0.7468,  0.0000],
        [ 0.0000,  1.2830,  2.2271,  ...,  0.0000,  0.7468,  0.0000],
        [ 0.0000,  0.9975,  1.9814,  ...,  0.0000,  0.1548,  0.0000],
        ...,
        [ 0.0000,  0.9086,  2.0556,  ...,  0.6143,  0.8594,  0.0000],
        [ 0.0000,  1.3819,  2.4306,  ...,  0.6143,  0.8594,  0.0000],
        [ 0.0000,  1.0136,  1.9536,  ...,  0.6143,  0.8594,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([244, 128])
pred_vecs
torch.Size([244, 128])
cur_o_vecs
torch.Size([244, 128])
cur_t_vecs
torch.Size([244, 384])
tensor([[ 1.7543,  0.3981,  0.0000,  ...,  0.0000,  0.1494,  0.0000],
        [ 2.4166,  0.1991,  0.0000,  ...,  0.0000,  0.1494,  0.0000],
        [ 1.9955,  0.5495,  0.0000,  ...,  0.7868,  0.0000,  0.0000],
        ...,
        [ 1.8664,  0.2051,  0.0000,  ...,  0.0000,  0.6469,  0.0000],
        [ 2.2813,  0.0417,  0.0000,  ...,  0.0000,  0.6469,  0.0000],
        [ 2.4877,  0.5477,  0.0000,  ...,  0.0000,  0.6469,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[-0.2973,  1.8375,  1.0874,  ..., -1.5919, -1.0285, -0.6951],
        [-0.7021, -0.6719,  0.2339,  ..., -1.5919, -1.0285, -0.6951],
        [-0.2973,  1.8375,  1.0874,  ..., -1.2068,  0.9839,  0.2712],
        ...,
        [-0.5021, -0.2267,  1.5240,  ..., -1.4423,  1.1534, -0.3830],
        [-0.0911, -0.6110,  0.1504,  ..., -1.4423,  1.1534, -0.3830],
        [-0.6420,  0.5347,  0.1386,  ..., -1.4423,  1.1534, -0.3830]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[ 0.0000,  0.0000,  2.3301,  ...,  1.0145,  3.0907,  0.0000],
        [ 0.2833,  0.0000,  2.7496,  ...,  1.0145,  3.0907,  0.0000],
        [ 0.0000,  0.0000,  2.3301,  ...,  0.0000,  1.6897,  0.0000],
        ...,
        [ 0.7014,  0.0000,  2.3122,  ...,  2.0372,  1.8346,  0.0000],
        [ 0.0000,  0.2319,  0.3911,  ...,  2.0372,  1.8346,  0.0000],
        [ 1.1694,  0.0000,  2.1219,  ...,  2.0372,  1.8346,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[ 0.0000,  0.6888,  0.3397,  ...,  1.3332,  0.3084,  0.1668],
        [ 0.7563,  0.2325,  0.0912,  ...,  1.3332,  0.3084,  0.1668],
        [ 0.0000,  0.6888,  0.3397,  ...,  1.9225,  0.0000,  0.3402],
        ...,
        [ 0.3131,  0.1604,  0.0171,  ...,  1.2847,  1.5726,  0.6373],
        [ 0.0985,  1.1435,  0.4981,  ...,  1.2847,  1.5726,  0.6373],
        [ 0.5158,  0.0826,  0.2522,  ...,  1.2847,  1.5726,  0.6373]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[ 0.0000,  1.2357,  1.9941,  ...,  0.0000,  0.8673,  0.0000],
        [ 0.0000,  1.2273,  2.0953,  ...,  0.0000,  0.8673,  0.0000],
        [ 0.0000,  1.2357,  1.9941,  ...,  0.0000,  0.6765,  0.0000],
        ...,
        [ 0.0000,  0.3307,  1.8886,  ...,  0.4991,  0.1595,  0.0000],
        [ 0.0000,  0.3574,  1.8858,  ...,  0.4991,  0.1595,  0.0000],
        [ 0.0000,  1.1174,  2.0467,  ...,  0.4991,  0.1595,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([233, 128])
pred_vecs
torch.Size([233, 128])
cur_o_vecs
torch.Size([233, 128])
cur_t_vecs
torch.Size([233, 384])
tensor([[ 1.9039,  0.0905,  0.0000,  ...,  0.0000,  0.0440,  0.0000],
        [ 2.1707,  0.1786,  0.0000,  ...,  0.0000,  0.0440,  0.0000],
        [ 1.9039,  0.0905,  0.0000,  ...,  0.0000,  0.0000,  0.4241],
        ...,
        [ 1.7792,  0.4743,  0.0000,  ...,  0.0000,  0.3126,  0.0000],
        [ 1.9039,  0.6365,  0.0000,  ...,  0.0000,  0.3126,  0.0000],
        [ 1.9164,  0.8160,  0.0000,  ...,  0.0000,  0.3126,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([36, 128])
pred_vecs
torch.Size([36, 128])
cur_o_vecs
torch.Size([36, 128])
cur_t_vecs
torch.Size([36, 384])
tensor([[ 2.1203,  2.0341, -0.6779,  ...,  1.0673,  0.1822, -0.6027],
        [ 0.9384, -1.4311, -0.0030,  ...,  0.5008, -1.2104, -0.1239],
        [-0.8682, -0.1676,  0.2355,  ...,  1.0867,  0.2781, -1.7409],
        ...,
        [-0.1165,  1.2255,  0.6015,  ..., -1.4423,  1.1534, -0.3830],
        [-0.6420,  0.5347,  0.1386,  ..., -1.4423,  1.1534, -0.3830],
        [ 0.6156, -1.9220,  0.6570,  ..., -1.4423,  1.1534, -0.3830]], device='cuda:0')
cur_s_vecs
torch.Size([36, 128])
pred_vecs
torch.Size([36, 128])
cur_o_vecs
torch.Size([36, 128])
cur_t_vecs
torch.Size([36, 384])
tensor([[ 0.0000,  0.0000,  2.7463,  ...,  0.6081,  2.7510,  0.0000],
        [ 1.2852,  0.4400,  1.5629,  ...,  0.0047,  1.9995,  0.0000],
        [ 0.0000,  0.0000,  1.2321,  ...,  0.0000,  3.3449,  0.0000],
        ...,
        [ 0.9133,  0.0000,  1.9180,  ...,  1.6781,  1.3821,  0.0000],
        [ 1.4886,  0.0000,  1.7643,  ...,  1.6781,  1.3821,  0.0000],
        [ 1.2298,  0.0000,  1.6682,  ...,  1.6781,  1.3821,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([36, 128])
pred_vecs
torch.Size([36, 128])
cur_o_vecs
torch.Size([36, 128])
cur_t_vecs
torch.Size([36, 384])
tensor([[ 0.0000,  0.6121,  0.0000,  ...,  0.7716,  0.0980,  1.1413],
        [ 0.7849,  0.5385,  0.0000,  ...,  0.8522,  0.2691,  0.3484],
        [ 0.2234,  1.0699,  0.0000,  ...,  1.4159,  0.2622,  0.3947],
        ...,
        [ 0.7381,  0.0000,  0.0000,  ...,  1.4318,  1.4143,  0.6315],
        [ 0.7096,  0.0000,  0.0569,  ...,  1.4318,  1.4143,  0.6315],
        [ 0.8083,  0.9339,  0.0000,  ...,  1.4318,  1.4143,  0.6315]], device='cuda:0')
cur_s_vecs
torch.Size([36, 128])
pred_vecs
torch.Size([36, 128])
cur_o_vecs
torch.Size([36, 128])
cur_t_vecs
torch.Size([36, 384])
tensor([[ 0.0000,  0.3016,  2.2066,  ...,  0.0000,  0.2816,  0.0000],
        [ 0.0000,  0.5118,  2.2057,  ...,  0.0000,  0.3334,  0.0000],
        [ 0.0000,  1.4833,  3.4161,  ...,  0.0000,  0.8616,  0.0000],
        ...,
        [ 0.0000,  0.2588,  2.0520,  ...,  0.2953,  0.5239,  0.0000],
        [ 0.0000,  1.4006,  2.3833,  ...,  0.2953,  0.5239,  0.0000],
        [ 0.0000,  0.8965,  2.9260,  ...,  0.2953,  0.5239,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([36, 128])
pred_vecs
torch.Size([36, 128])
cur_o_vecs
torch.Size([36, 128])
cur_t_vecs
torch.Size([36, 384])
tensor([[ 1.3941,  0.2678,  0.0000,  ...,  0.0657,  0.0000,  0.2508],
        [ 2.1240,  0.5324,  0.0000,  ...,  0.7495,  0.0000,  0.5066],
        [ 2.6297,  0.0000,  0.0000,  ...,  0.0000,  0.2962,  0.0000],
        ...,
        [ 1.4808,  0.3731,  0.0000,  ...,  0.0000,  0.2183,  0.0000],
        [ 1.7905,  0.3049,  0.0000,  ...,  0.0000,  0.2183,  0.0000],
        [ 1.9699,  0.7215,  0.0000,  ...,  0.0000,  0.2183,  0.0000]], device='cuda:0')
Starting epoch 10
cur_s_vecs
torch.Size([226, 128])
pred_vecs
torch.Size([226, 128])
cur_o_vecs
torch.Size([226, 128])
cur_t_vecs
torch.Size([226, 384])
tensor([[-0.0541, -0.3715, -1.2103,  ..., -1.1885,  1.8192,  0.4722],
        [ 2.7247, -0.4528,  0.3924,  ..., -1.1885,  1.8192,  0.4722],
        [-0.7021, -0.6719,  0.2340,  ..., -0.3756,  0.0122,  0.6959],
        ...,
        [-0.8682, -0.1676,  0.2355,  ..., -1.4423,  1.1534, -0.3830],
        [ 0.9767, -1.9914,  0.5074,  ..., -1.4423,  1.1534, -0.3830],
        [ 0.9384, -1.4311, -0.0031,  ..., -1.4423,  1.1534, -0.3830]], device='cuda:0')
cur_s_vecs
torch.Size([226, 128])
pred_vecs
torch.Size([226, 128])
cur_o_vecs
torch.Size([226, 128])
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.8798,  0.0000,  2.7197,  ...,  0.5783,  2.0714,  0.0000],
        [ 1.2826,  0.0000,  2.8402,  ...,  0.5783,  2.0714,  0.0000],
        [ 0.0000,  0.0000,  1.9308,  ...,  0.0000,  2.2302,  0.0000],
        ...,
        [ 0.1447,  0.0000,  1.3758,  ...,  1.7755,  1.3025,  0.0000],
        [ 0.1173,  0.0000,  2.6170,  ...,  1.7755,  1.3025,  0.0000],
        [ 0.8873,  0.0000,  1.2142,  ...,  1.7755,  1.3025,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([226, 128])
pred_vecs
torch.Size([226, 128])
cur_o_vecs
torch.Size([226, 128])
cur_t_vecs
torch.Size([226, 384])
tensor([[ 1.0077,  0.4839,  0.0000,  ...,  1.3118,  0.8768,  0.6164],
        [ 0.8159,  0.1510,  0.0000,  ...,  1.3118,  0.8768,  0.6164],
        [ 0.6235,  0.5919,  0.6086,  ...,  2.3011,  0.3347,  0.0000],
        ...,
        [ 0.6239,  0.5252,  0.0000,  ...,  1.2668,  1.3623,  1.7320],
        [ 0.0000,  0.1791,  0.0000,  ...,  1.2668,  1.3623,  1.7320],
        [ 0.7842,  1.6535,  0.0546,  ...,  1.2668,  1.3623,  1.7320]], device='cuda:0')
cur_s_vecs
torch.Size([226, 128])
pred_vecs
torch.Size([226, 128])
cur_o_vecs
torch.Size([226, 128])
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.0000,  1.4576,  2.9194,  ...,  0.0000,  0.9654,  0.0000],
        [ 0.0000,  1.5110,  2.3958,  ...,  0.0000,  0.9654,  0.0000],
        [ 0.0000,  1.2659,  2.6278,  ...,  0.0000,  0.4037,  0.0000],
        ...,
        [ 0.0000,  0.8614,  2.4497,  ...,  0.7503,  1.0199,  0.0000],
        [ 0.0000,  1.8973,  3.3322,  ...,  0.7503,  1.0199,  0.0000],
        [ 0.2923,  0.3617,  1.6151,  ...,  0.7503,  1.0199,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([226, 128])
pred_vecs
torch.Size([226, 128])
cur_o_vecs
torch.Size([226, 128])
cur_t_vecs
torch.Size([226, 384])
tensor([[ 2.1886,  0.2161,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0144,  0.5208,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0902,  0.0757,  0.0000,  ...,  0.1130,  0.0000,  0.1976],
        ...,
        [ 2.4376,  0.0000,  0.0000,  ...,  0.0000,  0.4569,  0.0000],
        [ 2.6139,  0.0000,  0.0000,  ...,  0.0000,  0.4569,  0.0000],
        [ 1.8460,  0.8031,  0.0000,  ...,  0.0000,  0.4569,  0.0000]], device='cuda:0')
t = 100 / 1000000
 G [bbox_pred]: 0.3422
 G [L1_pixel_loss]: 0.9230
 G [total_loss]: 1.5165
 G [g_gan_obj_loss]: 0.0108
 G [g_gan_img_loss]: 0.0081
 G [ac_loss]: 0.2324
 D_obj [d_ac_loss_real]: 2.8068
 D_obj [d_ac_loss_fake]: 2.3245
 D_obj [d_obj_gan_loss]: 1.0673
 D_img [d_img_gan_loss]: 1.2893
cur_s_vecs
torch.Size([252, 128])
pred_vecs
torch.Size([252, 128])
cur_o_vecs
torch.Size([252, 128])
cur_t_vecs
torch.Size([252, 384])
tensor([[-1.2820, -0.7921,  0.4705,  ..., -0.1285, -1.6545, -0.6403],
        [ 0.3122,  0.4725,  0.6257,  ..., -2.1128,  0.4548,  0.1342],
        [-0.0610, -0.5172, -0.5694,  ..., -0.1285, -1.6545, -0.6403],
        ...,
        [ 0.6155, -1.9220,  0.6571,  ..., -1.4423,  1.1534, -0.3829],
        [-0.8683, -0.1676,  0.2355,  ..., -1.4423,  1.1534, -0.3829],
        [ 0.9880,  0.4267, -1.6323,  ..., -1.4423,  1.1534, -0.3829]], device='cuda:0')
cur_s_vecs
torch.Size([252, 128])
pred_vecs
torch.Size([252, 128])
cur_o_vecs
torch.Size([252, 128])
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.7393,  0.0000,  0.9514,  ...,  0.0653,  1.0236,  0.0000],
        [ 0.3977,  0.0000,  1.2575,  ...,  0.0000,  1.8268,  0.0000],
        [ 0.0529,  0.0000,  1.5909,  ...,  0.0653,  1.0236,  0.0000],
        ...,
        [ 1.5939,  0.0000,  1.9026,  ...,  1.9007,  1.4526,  0.0000],
        [ 0.0000,  0.0000,  1.9149,  ...,  1.9007,  1.4526,  0.0000],
        [ 0.4754,  0.0000,  1.5513,  ...,  1.9007,  1.4526,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([252, 128])
pred_vecs
torch.Size([252, 128])
cur_o_vecs
torch.Size([252, 128])
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.5752,  0.7789,  0.0755,  ...,  1.5233,  0.4244,  0.5986],
        [ 0.8855,  0.7011,  0.0000,  ...,  1.1356,  0.5165,  0.4710],
        [ 0.0668,  0.8923,  0.1495,  ...,  1.5233,  0.4244,  0.5986],
        ...,
        [ 0.0000,  0.4102,  0.0000,  ...,  1.2031,  1.5190,  1.2722],
        [ 0.6577,  0.8271,  0.0000,  ...,  1.2031,  1.5190,  1.2722],
        [ 0.0555,  0.1442,  0.0000,  ...,  1.2031,  1.5190,  1.2722]], device='cuda:0')
cur_s_vecs
torch.Size([252, 128])
pred_vecs
torch.Size([252, 128])
cur_o_vecs
torch.Size([252, 128])
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.0000,  0.8992,  2.6371,  ...,  0.0000,  0.2743,  0.0000],
        [ 0.0000,  0.5666,  2.1612,  ...,  0.0000,  0.4205,  0.0000],
        [ 0.0000,  1.0232,  2.5554,  ...,  0.0000,  0.2743,  0.0000],
        ...,
        [ 0.0000,  1.4480,  3.2313,  ...,  0.6603,  0.7050,  0.0000],
        [ 0.0000,  0.0000,  1.6521,  ...,  0.6603,  0.7050,  0.0000],
        [ 0.0000,  1.5295,  1.8559,  ...,  0.6603,  0.7050,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([252, 128])
pred_vecs
torch.Size([252, 128])
cur_o_vecs
torch.Size([252, 128])
cur_t_vecs
torch.Size([252, 384])
tensor([[ 1.3044,  0.6321,  0.0000,  ...,  0.0000,  0.0000,  0.1269],
        [ 1.1691,  0.1371,  0.0000,  ...,  0.2380,  0.0000,  0.1902],
        [ 1.4188,  0.5649,  0.0000,  ...,  0.0000,  0.0000,  0.1269],
        ...,
        [ 2.7291,  0.6470,  0.0000,  ...,  0.0000,  0.2016,  0.0000],
        [ 1.7851,  0.2694,  0.0000,  ...,  0.0000,  0.2016,  0.0000],
        [ 2.1908,  0.5979,  0.0000,  ...,  0.0000,  0.2016,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.6155, -1.9220,  0.6571,  ..., -0.9782,  1.6878, -0.8076],
        [-0.2971,  1.8374,  1.0876,  ..., -2.8330,  0.1846, -0.8574],
        [ 0.2485,  2.3565, -1.1861,  ...,  1.6050,  1.0780,  0.5504],
        ...,
        [ 2.7247, -0.4528,  0.3924,  ..., -1.4423,  1.1534, -0.3829],
        [-0.2971,  1.8374,  1.0876,  ..., -1.4423,  1.1534, -0.3829],
        [-0.2720,  0.0191, -0.8795,  ..., -1.4423,  1.1534, -0.3829]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.8794,  0.0000,  1.6882,  ...,  0.0204,  1.9539,  0.0000],
        [ 0.0000,  0.0000,  1.1545,  ...,  0.0000,  3.1581,  0.0000],
        [ 0.5159,  0.0000,  2.1361,  ...,  0.0000,  2.2783,  0.0000],
        ...,
        [ 0.3523,  0.2452,  1.9331,  ...,  1.8615,  1.6348,  0.0000],
        [ 0.0000,  0.0000,  2.1996,  ...,  1.8615,  1.6348,  0.0000],
        [ 0.3582,  0.1297,  2.3944,  ...,  1.8615,  1.6348,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.4313,  0.8053,  0.0000,  ...,  0.9778,  0.0543,  0.3922],
        [ 0.4538,  0.3361,  0.0000,  ...,  0.9263,  0.4814,  0.0720],
        [ 0.2232,  0.6374,  0.3582,  ...,  1.0098,  0.0000,  0.1513],
        ...,
        [ 0.6182,  0.2454,  0.4869,  ...,  1.4437,  1.4838,  0.9732],
        [ 0.5262,  0.5699,  0.0000,  ...,  1.4437,  1.4838,  0.9732],
        [ 0.7334,  0.4256,  0.5507,  ...,  1.4437,  1.4838,  0.9732]], device='cuda:0')
cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.0000,  0.6455,  3.0139,  ...,  0.0000,  0.6237,  0.0000],
        [ 0.0000,  0.7328,  1.7777,  ...,  0.0000,  0.8800,  0.1806],
        [ 0.0000,  0.8369,  2.2733,  ...,  0.0000,  0.4676,  0.1117],
        ...,
        [ 0.0000,  0.8361,  1.9965,  ...,  0.6454,  1.0242,  0.0000],
        [ 0.0000,  0.0000,  1.2999,  ...,  0.6454,  1.0242,  0.0000],
        [ 0.0000,  0.0000,  1.9036,  ...,  0.6454,  1.0242,  0.0000]], device='cuda:0')/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [320,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [321,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [322,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [323,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [324,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [325,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [326,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [327,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [328,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [329,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [330,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [331,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [332,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [333,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [334,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [335,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [336,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [337,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [338,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [339,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [340,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [341,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [342,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [343,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [344,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [345,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [346,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [347,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [348,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [349,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [350,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [351,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [288,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [289,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [290,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [291,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [292,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [293,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [294,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [295,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [296,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [297,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [298,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [299,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [300,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [301,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [302,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [303,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [304,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [305,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [306,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [307,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [308,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [309,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [310,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [311,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [312,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [313,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [314,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [315,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [316,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [317,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [318,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [319,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [352,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [353,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [354,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [355,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [356,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [357,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [358,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [359,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [360,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [361,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [362,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [363,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [364,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [365,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [366,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [367,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [368,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [369,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [370,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [371,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [372,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [373,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [374,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [375,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [376,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [377,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [378,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [379,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [380,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [381,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [382,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [383,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [256,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [257,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [258,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [259,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [260,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [261,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [262,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [263,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [264,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [265,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [266,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [267,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [268,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [269,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [270,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [271,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [272,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [273,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [274,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [275,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [276,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [277,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [278,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [279,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [280,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [281,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [282,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [283,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [284,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [285,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [286,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [54,0,0], thread: [287,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
THCudaCheck FAIL file=/pytorch/aten/src/THC/generic/THCTensorCopy.c line=70 error=59 : device-side assert triggered
134413c
37291d
88325e
14798d
101877c
389772d
119761c
238712c
412384d
11690a
426880c
455877a
43742e
241178a
131374d
477468a
102609d
167126b
28349d
578119d
134849b
336854d
21531c
505642a
518918b
295850e
26747c
349153c
18155c
104537e
443086d
139789e
157356a
150594d
293576a
299643b
250724b
31442c
572147e
91263a
189648b
20291d
359164c
6075a
246099a
47774c
385540c
520389c
217135c
132860e
444399d
47909e
472320a
428304c
546261e
576526e
127750c
144371b
277346a
189033e
545257e
43171d
306127c
531778b
572042e
524924d
324611a
169395c
121172a
191690d
165299d
135989c
283809a
567305a
42704a
109568a
322121b
163412b
457448d
213530e
388923b
509514e
60378b
137339b
432627d
217720d
553401b
242167b
550278a
13576e
160152a
288921b
327536c
146120b
173814c
566547e
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
171309a
400848e
216026b
10138e
207573a
438899c
75362a
66309b
302397b
474105b
363190c
84896e
13595b
295491a
110777e
367442b
39716b
96067b
457086c
310564d
4764e
134597e
517417b
570579a
152245e
177381e
97170c
569174b
400999a
323479a
214873b
254589a
364571b
332292c
81035b
278899b
521995d
543224b
22658d
233112e
6421c
274424a
573149e
549098e
78286b
555800d
454044a
323129a
545929c
349527d
102421d
30958c
208347b
132516a
245242c
188498c
61202b
89707e
557408d
126808e
39360d
344025a
431997e
354938e
257951c
581061b
404395b
71737d
462929c
224629e
10082e
103558b
289172d
23176c
324740d
346915c
340897e
176726c
355175a
540926b
282978b
416188a
103582a
488980a
20087d
313608d
59582d
243796d
312359c
276694e
107108a
237859c
316353e
102834e
392476a
4761e
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
412992d
522704b
183539b
500982b
289100a
221633e
452459c
533452e
390298c
480576d
568677b
58979c
438267e
515300d
185963c
90869b
414212a
92107d
310518e
107620e
285357c
466134b
53464b
365027d
71631c
208267a
353982b
244122d
113619d
195894e
557434a
408946a
245534b
142587b
173565d
367605a
126204e
377278b
396369b
485368b
84034b
552461b
167074b
261664e
320537b
522235a
96728b
502557d
554319c
210266a
248591a
49286d
455902d
154597e
159199a
535265c
52324b
577712e
569602c
560563d
511143a
493485a
468751d
187803e
159403e
168417b
217991b
463168c
218886e
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
76802b
2477b
174303b
331302b
522489d
393647a
194050c
529944e
308295c
197029b
507148b
297009a
215612c
127450a
491558e
329151a
233869d
257713b
153574c
24026a
327813a
441816e
285651a
5383d
279345a
163829e
101426a
327413b
478805d
189187a
85549b
488583b
269015d
509267e
223420c
167995e
103575d
346724d
208585b
170687a
494795d
84815e
150354d
529352e
404271d
308803a
459110b
525273e
259853a
302576c
397938a
295693b
3001a
400850e
260109a
485064e
230570b
113019c
409754e
330954d
459208b
288313e
6710a
485491e
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_s_vecs
torch.Size([246, 128])
pred_vecs
torch.Size([246, 128])
cur_o_vecs
torch.Size([246, 128])
cur_t_vecs
torch.Size([246, 384])
tensor([[ 1.9119,  0.2709,  0.0000,  ...,  0.0655,  0.0000,  0.4334],
        [ 1.5546,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  1.0480],
        [ 1.5917,  0.4577,  0.0000,  ...,  0.0347,  0.0000,  0.4688],
        ...,
        [ 1.4671,  0.0557,  0.0000,  ...,  0.0000,  0.3036,  0.0000],
        [ 1.4643,  0.2062,  0.0000,  ...,  0.0000,  0.3036,  0.0000],
        [ 1.7448,  0.5986,  0.0000,  ...,  0.0000,  0.3036,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([240, 128])
pred_vecs
torch.Size([240, 128])
cur_o_vecs
torch.Size([240, 128])
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.6154, -1.9220,  0.6571,  ...,  0.6504,  2.1329,  0.7453],
        [-0.6419,  0.5347,  0.1385,  ...,  0.4393, -0.7371,  0.8378],
        [ 0.3505,  0.3467,  0.0295,  ..., -2.8330,  0.1847, -0.8574],
        ...,
        [-0.8684, -0.1676,  0.2355,  ..., -1.4423,  1.1534, -0.3829],
        [ 0.9382, -1.4312, -0.0033,  ..., -1.4423,  1.1534, -0.3829],
        [ 0.9766, -1.9913,  0.5074,  ..., -1.4423,  1.1534, -0.3829]], device='cuda:0')
cur_s_vecs
torch.Size([240, 128])
pred_vecs
torch.Size([240, 128])
cur_o_vecs
torch.Size([240, 128])
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.3786,  0.0000,  2.4407,  ...,  0.0000,  2.5352,  0.0000],
        [ 1.2508,  0.0000,  2.0950,  ...,  0.7427,  2.4385,  0.0000],
        [ 0.7849,  0.0000,  2.1867,  ...,  0.0000,  2.1648,  0.0000],
        ...,
        [ 0.0000,  0.0000,  1.1270,  ...,  1.8646,  1.3403,  0.0000],
        [ 1.9171,  0.0000,  2.5385,  ...,  1.8646,  1.3403,  0.0000],
        [ 1.6398,  0.0000,  2.4440,  ...,  1.8646,  1.3403,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([240, 128])
pred_vecs
torch.Size([240, 128])
cur_o_vecs
torch.Size([240, 128])
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0900,  0.8309,  0.0000,  ...,  2.0965,  0.0000,  0.0518],
        [ 0.3852,  0.0000,  0.0000,  ...,  1.9669,  0.2113,  0.3469],
        [ 1.0472,  0.1681,  0.0000,  ...,  1.1895,  0.4418,  0.1313],
        ...,
        [ 0.0529,  0.3882,  0.0000,  ...,  1.1930,  1.5358,  1.0406],
        [ 0.3400,  0.6683,  0.0003,  ...,  1.1930,  1.5358,  1.0406],
        [ 1.0816,  0.7570,  0.2181,  ...,  1.1930,  1.5358,  1.0406]], device='cuda:0')
cur_s_vecs
torch.Size([240, 128])
pred_vecs
torch.Size([240, 128])
cur_o_vecs
torch.Size([240, 128])
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  0.3435,  2.8640,  ...,  0.0000,  0.7253,  0.0000],
        [ 0.0000,  1.3090,  2.4793,  ...,  0.0000,  1.0189,  0.0000],
        [ 0.0000,  1.6022,  2.8756,  ...,  0.0000,  0.5222,  0.0000],
        ...,
        [ 0.0000,  1.3247,  2.6675,  ...,  0.3685,  0.6698,  0.0000],
        [ 0.0000,  0.7215,  2.2660,  ...,  0.3685,  0.6698,  0.0000],
        [ 0.0000,  0.2529,  1.9974,  ...,  0.3685,  0.6698,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([240, 128])
pred_vecs
torch.Size([240, 128])
cur_o_vecs
torch.Size([240, 128])
cur_t_vecs
torch.Size([240, 384])
tensor([[ 1.9642,  0.4083,  0.0000,  ...,  0.0000,  0.0000,  0.3889],
        [ 2.7961,  1.0104,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.3180,  0.5171,  0.0000,  ...,  0.3941,  0.0000,  0.2960],
        ...,
        [ 2.6486,  0.0000,  0.0000,  ...,  0.0000,  0.7665,  0.0000],
        [ 2.4090,  0.5620,  0.0000,  ...,  0.0000,  0.7665,  0.0000],
        [ 2.8186,  1.1295,  0.0000,  ...,  0.0000,  0.7665,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.9382, -1.4312, -0.0033,  ..., -1.7426, -0.9465,  0.2788],
        [-0.8684, -0.1676,  0.2355,  ...,  1.0869,  0.2783, -1.7407],
        [ 0.9382, -1.4312, -0.0033,  ..., -1.7426, -0.9465,  0.2788],
        ...,
        [-0.8112,  0.6417, -1.0174,  ..., -1.4423,  1.1534, -0.3829],
        [-0.8684, -0.1676,  0.2355,  ..., -1.4423,  1.1534, -0.3829],
        [ 1.2177, -0.3297,  1.6742,  ..., -1.4423,  1.1534, -0.3829]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 1.3575,  0.0000,  2.3073,  ...,  0.8916,  1.4116,  0.0000],
        [ 0.7492,  0.0000,  1.5597,  ...,  0.0000,  1.7441,  0.0000],
        [ 1.3575,  0.0000,  2.3073,  ...,  0.8916,  1.4116,  0.0000],
        ...,
        [ 0.0395,  0.0000,  1.9793,  ...,  2.5255,  1.9274,  0.0000],
        [ 0.8289,  0.0000,  1.5178,  ...,  2.5255,  1.9274,  0.0000],
        [ 0.0000,  0.0000,  2.8853,  ...,  2.5255,  1.9274,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.3991,  0.7108,  0.0535,  ...,  2.1515,  0.6666,  0.0395],
        [ 0.4401,  0.3190,  0.0000,  ...,  1.2887,  0.8740,  0.2645],
        [ 0.3991,  0.7108,  0.0535,  ...,  2.1515,  0.6666,  0.0395],
        ...,
        [ 0.6468,  0.9304,  0.1917,  ...,  1.4726,  1.2126,  0.7799],
        [ 0.7586,  0.0000,  0.0000,  ...,  1.4726,  1.2126,  0.7799],
        [ 0.8049,  0.8683,  0.2247,  ...,  1.4726,  1.2126,  0.7799]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.0000,  0.2925,  2.1635,  ...,  0.0000,  1.1990,  0.0000],
        [ 0.0000,  1.3076,  2.4520,  ...,  0.0000,  0.5247,  0.0000],
        [ 0.0000,  0.2925,  2.1635,  ...,  0.0000,  1.1990,  0.0000],
        ...,
        [ 0.0000,  0.5904,  2.1121,  ...,  0.5505,  0.8409,  0.0000],
        [ 0.0000,  1.1079,  2.8699,  ...,  0.5505,  0.8409,  0.0000],
        [ 0.0000,  0.6810,  1.9619,  ...,  0.5505,  0.8409,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([241, 128])
pred_vecs
torch.Size([241, 128])
cur_o_vecs
torch.Size([241, 128])
cur_t_vecs
torch.Size([241, 384])
tensor([[ 2.5568,  0.5199,  0.0000,  ...,  0.0000,  0.2790,  0.0000],
        [ 2.8426,  0.2818,  0.0000,  ...,  0.9637,  0.0000,  0.0370],
        [ 2.5568,  0.5199,  0.0000,  ...,  0.0000,  0.2790,  0.0000],
        ...,
        [ 2.1304,  0.6074,  0.0000,  ...,  0.0000,  0.6876,  0.0000],
        [ 2.5156,  0.3964,  0.0000,  ...,  0.0000,  0.6876,  0.0000],
        [ 2.2918,  0.5723,  0.0000,  ...,  0.0000,  0.6876,  0.0000]], device='cuda:0')
cur_s_vecs
torch.Size([222, 128])
pred_vecs
torch.Size([222, 128])
cur_o_vecs
torch.Size([222, 128])
cur_t_vecs
torch.Size([222, 384])
Traceback (most recent call last):
  File "train.py", line 718, in <module>
    main(args)
  File "train.py", line 580, in main
    boxes_gt=model_boxes, masks_gt=model_masks)
  File "/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/torch/nn/modules/module.py", line 491, in __call__
    result = self.forward(*input, **kwargs)
  File "/data/home/cs224n/sg2im/sg2im/model.py", line 145, in forward
    obj_vecs, pred_vecs = self.gconv(obj_vecs, pred_vecs, edges)
  File "/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/torch/nn/modules/module.py", line 491, in __call__
    result = self.forward(*input, **kwargs)
  File "/data/home/cs224n/sg2im/sg2im/graph.py", line 93, in forward
    print(cur_t_vecs)
  File "/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/torch/tensor.py", line 57, in __repr__
    return torch._tensor_str._str(self)
  File "/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/torch/_tensor_str.py", line 218, in _str
    fmt, scale, sz = _number_format(self)
  File "/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/torch/_tensor_str.py", line 79, in _number_format
    tensor = torch.DoubleTensor(tensor.size()).copy_(tensor).abs_().view(tensor.nelement())
RuntimeError: cuda runtime error (59) : device-side assert triggered at /pytorch/aten/src/THC/generic/THCTensorCopy.c:70
