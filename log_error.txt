Namespace(ac_loss_weight=0.1, activation='leakyrelu-0.2', batch_size=32, bbox_pred_loss_weight=10, checkpoint_every=10000, checkpoint_name='checkpoint', checkpoint_start_from=None, coco_include_other=False, coco_stuff_only=True, coco_train_image_dir='datasets/coco/images/train2017', coco_train_instances_json='datasets/coco/annotations/instances_train2017.json', coco_train_sg_json='datasets/coco/annotations/sg_train2017.json', coco_train_stuff_json='datasets/coco/annotations/stuff_train2017.json', coco_val_image_dir='datasets/coco/images/val2017', coco_val_instances_json='datasets/coco/annotations/instances_val2017.json', coco_val_sg_json='datasets/coco/annotations/sg_val2017.json', coco_val_stuff_json='datasets/coco/annotations/stuff_val2017.json', crop_size=32, d_activation='leakyrelu-0.2', d_clip=None, d_img_arch='C4-64-2,C4-128-2,C4-256-2', d_img_weight=1.0, d_normalization='batch', d_obj_arch='C4-64-2,C4-128-2,C4-256-2', d_obj_weight=1.0, d_padding='valid', dataset='coco_sg', discriminator_loss_weight=0.01, embedding_dim=128, eval_mode_after=100000, gan_loss_type='gan', gconv_dim=128, gconv_hidden_dim=512, gconv_num_layers=5, image_size=(64, 64), include_relationships=True, instance_whitelist=None, l1_pixel_loss_weight=1.0, layout_noise_dim=32, learning_rate=0.0001, loader_num_workers=4, mask_loss_weight=0, mask_size=16, max_objects_per_image=10, min_object_size=0.02, min_objects_per_image=3, mlp_normalization='none', normalization='batch', num_iterations=1000000, num_train_samples=None, num_val_samples=1024, output_dir='/data/home/cs224n/sg2im', predicate_pred_loss_weight=0, print_every=10, refinement_network_dims=(1024, 512, 256, 128, 64), restore_from_checkpoint=False, shuffle_val=True, stuff_whitelist=None, timing=False, train_h5='datasets/vg/train.h5', use_boxes_pred_after=-1, use_sg_cache=False, val_h5='datasets/vg/val.h5', vg_image_dir='datasets/vg/images', vg_use_orphaned_objects=True, vocab_json='datasets/vg/vocab.json')
WARNING: Got stuff_only=True but stuff_json=None.
Falling back to stuff_only=False.
called set_image_size (64, 64)
Total inital images 591435
Found 81 object categories.
Found 3338 relationship types
Dumped 555510 images to sg object to json
Dumped 40469 images to relationships to json
Dumped 3334 pred name to idx to json
Dumped 3338 pred idx to name to file
Read 325 error images ids.
After pruning, 325 images left.
Training dataset has 325 images and 1750 objects
(5.38 objects per image)
called set_image_size (64, 64)
Total inital images 25000
Found 81 object categories.
Found 457 relationship types
Read 325 error images ids.
After pruning, 0 images left.
91
3338
['__in_image__', 'left of', 'right of', 'above', 'below', 'inside', 'surrounding', 'with', 'on', 'of', 'sit on', 'in', 'have', 'hold', 'next to', 'lay on', 'sit on top of', 'sit in', 'ride', 'near', 'sit to', 'at', 'sit next to', 'fill with', 'look at', 'in front of', 'lay on top of', 'behind', 'stand on', 'stand to', 'lay in', 'lie on', 'travel down', 'wear', 'sleep on', 'top with', 'sit at', 'stand next to', 'use', 'sit in front of', 'on top of', 'stop at', 'sit with', 'park to', 'eat', 'carry', 'lay next to', 'under', 'pull into', 'watch', 'park at', 'pull', 'by', 'cut', 'stand by', 'rest on', 'play with', 'sit under', 'ride on', 'hold up', 'above', 'around', 'over', 'lay down on', 'attach to', 'lay to', 'stand with', 'fly in', 'fly', 'sit by', 'sit beside', 'stand on top of', 'beside', 'sleep on top of', 'contain', 'feed', 'stand near', 'park in front of', 'paint on', 'park next to', 'surround by', 'read', 'drink from', 'walk with', 'stand in front of', 'park with', 'write on', 'go down', 'sniff', 'sleep in', 'inside', 'sit of', 'travel on', 'cut with', 'work on', 'underneath', 'stand in', 'between', 'stand behind', 'perch on', 'lie in', 'tow', 'sit behind', 'ride on top of', 'cover', 'fly through', 'walk by', 'walk', 'cover with', 'to', 'pass', 'set with', 'do on', 'sit underneath', 'stand beside', 'draw', 'sit near', 'place on', 'curl up on', 'as', 'park in', 'hold with', 'park by', 'lay with', 'travel past', 'from', 'jump', 'eat from', 'pull up to', 'cover in', 'stick in', 'stand under', 'park', 'out of', 'park near', 'have on', 'lay down in', 'make', 'swing', 'for', 'set on', 'relax on', 'stand over', 'surround', 'lie next to', 'lean on', 'park on', 'drive', 'approach', 'brush', 'curl up in', 'cut into', 'sit between', 'track at', 'follow', 'herd', 'catch', 'sit atop', 'lie on top of', 'slice', 'lay of', 'drink out of', 'pet', 'walk to', 'drive past', 'sit inside', 'lick', 'park behind', 'wait at', 'feature', 'following', 'lie to', 'play on', 'lay by', 'stick out of', 'lounge on', 'walk behind', 'hang from', 'pass by', 'track to', 'lay under', 'fill next to', 'park beside', 'pose with', 'stare at', 'sleep to', 'put on', 'sit', 'travel along', 'show', 'draw on', 'chase', 'eat out of', 'lean against', 'including', 'wait for', 'hit', 'hold on', 'rest in', 'sleep next to', 'walk beside', 'hold next to', 'leave', 'eat with', 'clean', 'type on', 'look down at', 'bear on', 'chew on', 'walk next to', 'seat on', 'track with', 'fly over', 'fill on top of', 'shape like', 'cut up', 'display on', 'hold onto', 'walk past', 'drive on', 'stick into', 'fill on', 'inside of', 'grab', 'size', 'drive down', 'take out of', 'lie down on', 'lay in front of', 'sit around', 'jump on', 'walk near', 'leave on', 'lead', 'come out of', 'hold in front of', 'wear with', 'look up at', 'lay down on top of', 'face', 'bear next to', 'relax in', 'touch', 'connect to', 'move along', 'run with', 'hold to', 'walk in front of', 'bear with', 'lay across', 'travel through', 'stretch out on', 'sit above', 'stand', 'pour into', 'hook up to', 'cut on', 'display', 'pour', 'stop with', 'tie to', 'haul', 'rest on top of', 'top on', 'wear on', 'onto', 'put into', 'push', 'bite into', 'give', 'perch on top of', 'pull with', 'stand of', 'drive in front of', 'ride in', 'open on', 'feed from', 'track near', 'operate on', 'jump over', 'stop next to', 'decorate with', 'beneath', 'play', 'look in', 'talk on', 'like', 'look with', 'hang on', 'make with', 'pose on', 'do with', 'cover by', 'cut out of', 'complete with', 'go on', 'line with', 'pull by', 'eat at', 'close to', 'pull behind', 'ride down', 'have beside', 'below', 'look out of', 'stop on', 'put in', 'pan on', 'drive by', 'lie beside', 'atop', 'follow by', 'besides', 'smell', 'look into', 'flip', 'stand between', 'cook in', 'sit down with', 'sleep with', 'wrap around', 'stick', 'sit across from', 'look behind', 'board', 'enjoy', 'serve on', 'nap on', 'ride with', 'lay near', 'towards', 'take on', 'cover on', 'operate', 'arrange on', 'lounge in', 'glass on', 'stand underneath', 'hide under', 'bowl on', 'walk on', 'look out', 'lean up against', 'fight over', 'shape', 'lay beside', 'walk across', 'move down', 'make out of', 'wash', 'look', 'bowl with', 'lay inside', 'watch on', 'lie down in', 'set up with', 'while', 'serve with', 'hold out', 'lay down by', 'run on', 'reach for', 'cross with', 'face on', 'hang out of', 'sit upon', 'hang over', 'hug', 'balance on', 'drive to', 'prepare', 'make on', 'sit down on', 'slice with', 'play in', 'load with', 'drive through', 'observe', 'enter', 'hit with', 'get on', 'drag', 'stuff on', 'park between', 'top in', 'among', 'share', 'stop by', 'top', 'handle', 'print on', 'lay behind', 'examine', 'cook', 'site on', 'along', 'fall off', 'lay underneath', 'take from', 'pull to', 'fill', 'peel', 'stick out', 'drive behind', 'slice into', 'top next to', 'include', 'stand around', 'pull out of', 'do', 'alongside', 'lay', 'stick to', 'pull next to', 'bear in', 'design on', 'rest next to', 'stare on', 'lie with', 'slice on', 'ride in front of', 'remove from', 'guide', 'have next to', 'bite', 'make at', 'line up on', 'graffiti on', 'bake in', 'go through', 'throw', 'jump with', 'feed with', 'lie under', 'groom', 'grow on', 'hold by', 'pick up', 'hydrant with', 'sit close to', 'feed to', 'park of', 'arrive at', 'balance', 'cross', 'spray', 'top on top of', 'outside', 'climb on top of', 'use with', 'take off in', 'perform on', 'lay down with', 'hydrant on', 'turn', 'dock with', 'scratch', 'take', 'surf on', 'park around', 'have to', 'take with', 'drive next to', 'walk in', 'decorate', 'sit over', 'such as', 'pull away from', 'have by', 'adjust', 'get from', 'occupy', 'bear', 'kick', 'fly with', 'lock to', 'leave in', 'wait on', 'cross in front of', 'against', 'place in', 'come from', 'fall off of', 'lounge on top of', 'slice up', 'walk along with', 'investigate', 'plate on', 'tie', 'mount above', 'rise in', 'look over', 'come into', 'make of', 'come down', 'see', 'hide behind', 'drive down with', 'pass on', 'graze', 'meter on', 'drive with', 'lean over', 'point to', 'take off into', 'sleep under', 'eat by', 'get', 'stuff', 'sit on of', 'walk around', 'kiss', 'look on', 'hold in', 'walk under', 'inspect', 'lay out on', 'eat next to', 'carry on', 'cover next to', 'rest inside', 'pass through', 'put', 'chop up', 'lay down under', 'asleep on', 'stand up on', 'climb into', 'stall with', 'pull on', 'stand outside', 'check out', 'sprinkle on', 'give to', 'feeder with', 'ride to', 'move on', 'fly up in', 'dress in', 'top to', 'hang off of', 'lie behind', 'hydrant to', 'serve at', 'cut to', 'stand at', 'peek out of', 'sit up on', 'walk towards', 'sit beneath', 'flip on', 'adorn with', 'use on', 'paint with', 'next', 'set to', 'hang above', 'lie inside', 'overlook', 'bow', 'lie atop', 'snuggle with', 'rest against', 'walk underneath', 'strap to', 'cover to', 'lean next to', 'look like', 'mount', 'phone on', 'bear on top of', 'pile on', 'ride through', 'roll down', 'ride next to', 'serve', 'cook on', 'drape over', 'mount on', 'sleep beside', 'gather around', 'ha', 'stand from', 'snuggle on', 'cut from', 'graze with', 'sill to', 'eat to', 'drink on', 'kneel on', 'display with', 'rid', 'go with', 'about', 'paint over', 'pose in', 'swing at', 'decorate on', 'open', 'have in', 'add to', 'hold up to', 'set in', 'stand among', 'look by', 'sleep by', 'lie in front of', 'wear next to', 'step on', 'attach with', 'jump in', 'npmod', 'dip into', 'sign next to', 'match', 'ride past', 'moor with', 'skate on', 'kneel in', 'move', 'mirror of', 'rest near', 'fly near', 'toward', 'walk through', 'nuzzle', 'walk down with', 'turn on', 'surrounding', 'look under', 'rub on', 'stand close to', 'fix', 'stop in front of', 'surround with', 'sit down in', 'shine on', 'sniff at', 'paint', 'stop in', 'line up at', 'wrap on', 'stare into', 'figurine on', 'help', 'load onto', 'cross as', 'lean out of', 'flank', 'travel', 'paw on', 'drink', 'stretch on', 'point at', 'park on top of', 'prop up', 'nudge', 'dock at', 'stop to', 'block', 'carve into', 'lay down underneath', 'transport', 'ride by', 'lay down behind', 'bend over', 'reach into', 'look inside', 'look as', 'chain to', 'fill in', 'hang next to', 'perform', 'contain on', 'go past', 'place', 'leave with', 'light on', 'slice of', 'walk on top of', 'stand outside of', 'stretch out in', 'view', 'wear on top of', 'sit in between', 'off of', 'sniff on', 'stop', 'hold at', 'sit below', 'arrange in', 'lie by', 'lay over', 'run around', 'hide underneath', 'mirror with', 'ride up', 'mix in', 'hand on', 'empty', 'spread', 'lie of', 'move across', 'drive beside', 'pot on top of', 'drive near', 'sit up', 'contain with', 'open with', 'pan on top of', 'tuck into', 'round up', 'float next to', 'lay down next to', 'curl on', 'miss from', 'rest to', 'walk between', 'jump off', 'track next to', 'make into', 'rest beside', 'drive in', 'roll around on', 'cut through', 'make down', 'stack on', 'lean into', 'crouch with', 'site next to', 'phone in', 'extend', 'sleep of', 'stand atop', 'hang out on', 'row', 'go by', 'open to', 'star at', 'pan with', 'sit up against', 'fall into', 'play on top of', 'arrange', 'strip', 'side', 'wipe out on', 'run', 'run towards', 'chew', 'have out', 'ice on', 'draw with', 'fall in', 'place behind', 'take next to', 'pull in', 'topping on', 'feature with', 'snowboard on', 'bear in front of', 'fight with', 'gear on', 'sheer', 'lie', 'lean towards', 'pull from', 'eat on', 'adorn', 'attend to', 'pick up at', 'write below', 'hold down', 'eat beside', 'hang', 'travel behind', 'chop', 'lift', 'crouch on', 'lean on top of', 'turn below', 'lie between', 'poke out of', 'bath', 'float in', 'press on', 'travel to', 'curl up inside', 'hang off', 'speed down', 'consist of', 'put up to', 'play in front of', 'expire on', 'mount to', 'monitor on', 'pierce', 'park outside', 'have over', 'blanket on', 'drive away from', 'wait in', 'across', 'set out on', 'look from', 'light up', 'ride beside', 'lay among', 'wait with', 'graze by', 'perch atop', 'roll with', 'past', 'text on', 'drive over', 'lay down near', 'sit up with', 'smile with', 'sit alongside', 'line', 'stick on', 'lay out in front of', 'cover on top of', 'pull at', 'signal with', 'fill up', 'shake', 'chair with', 'oven with', 'tape to', 'walk toward', 'see in', 'fly above', 'look around', 'ride along', 'race', 'love', 'pause at', 'run through', 'squat by', 'depict', 'feed on', 'sleep in front of', 'meter next to', 'print', 'post on', 'frost', 'crash into', 'read with', 'walk alongside', 'design', 'walk over to', 'lie down on top of', 'balance on top of', 'park along with', 'brush with', 'theme', 'walk away from', 'run next to', 'stand as', 'seat at', 'lay against', 'shear', 'jump into', 'cut up with', 'run behind', 'sit before', 'stand in between', 'look of', 'stand away from', 'eat off', 'spread on', 'cut in', 'peer into', 'miss', 'leave over', 'throw to', 'place on top of', 'run by', 'seat in', 'sign on', 'reach in', 'make next to', 'follow behind', 'launch', 'ascend into', 'mirror above', 'prop against', 'cut by', 'cut off of', 'look down on', 'load', 'jump above', 'position in front of', 'jump to', 'write beneath', 'travel into', 'fly next to', 'float on', 'look next to', 'fly to', 'write under', 'stand above', 'walk along', 'lay down inside', 'go along', 'grow from', 'remote on', 'sleep behind', 'run to', 'cut next to', 'open in', 'outdoor next to', 'attack', 'offer', 'accompany', 'travel by', 'bear to', 'track in', 'show with', 'hang near', 'stack on top of', 'dip', 'sill next to', 'grow in', 'mirror on', 'walk up to', 'bowl next to', 'come to', 'wrap', 'stick of', 'attach', 'foot on', 'lick on', 'site in', 'pizza on', 'say', 'sit along with', 'set around', 'pull over', 'get off', 'ride behind', 'check', 'squeeze onto', 'play by', 'clean on', 'walk down', 'hydrant next to', 'curl up with', 'hover over', 'bring', 'site on top of', 'head down', 'site at', 'tend to', 'layer', 'fly behind', 'locate in', 'move by', 'stud to', 'cuddle with', 'soar through', 'lay below', 'frame', 'bury in', 'rest behind', 'clean on top of', 'mount on top of', 'fly on top of', 'nibble on', 'dress on', 'plate', 'take on top of', 'confront', 'load on', 'leave in front of', 'accompany by', 'set up on', 'celebrate with', 'hide in', 'smoke behind', 'reflect in', 'grind', 'before', 'drive alongside', 'nap in', 'run away from', 'kick up', 'catch at', 'strap on', 'have in front of', 'go across', 'guard', 'put on top of', 'travel with', 'prop up in', 'sit from', 'flipping', 'make like', 'boil on', 'pack in', 'look for', 'amidst', 'play underneath', 'wash in', 'eat in', 'peer over', 'phone on top of', 'wrap next to', 'let', 'rub up against', 'run beside', 'fold on', 'obscure', 'hydrant around', 'walk among', 'sniff in', 'curl next to', 'lie down with', 'slice next to', 'counter with', 'sit across', 'headphone on', 'wedge in', 'site to', 'sit outside', 'stop behind', 'hydrant in front of', 'rest', 'reach out to', 'set on top of', 'kneel next to', 'deliver to', 'look through', 'lap', 'milk from', 'sprawl on', 'sit down under', 'light', 'perch with', 'travel beside', 'meter by', 'open at', 'tie up next to', 'cutter on', 'play around', 'watch from', 'doze on', 'cover behind', 'reach up by', 'make for', 'set', 'leave under', 'swing with', 'poke into', 'leap over', 'bear behind', 'smile at', 'chase by', 'shake with', 'hang at', 'roll next to', 'wrap to', 'open on top of', 'drive on top of', 'cut on top of', 'separate by', 'spill out of', 'lay on of', 'recline on', 'post below', 'sit out with', 'hold out of', 'outdoor to', 'peak out of', 'walk as', 'stare next to', 'drag behind', 'glass with', 'jump at', 'lift from', 'rid on', 'stand inside', 'hold out to', 'graze to', 'hand from', 'load up', 'player up to', 'drive into', 'toast on', 'drive of', 'rest upon', 'dot', 'pile in', 'lay out to', 'watch by', 'stick next to', 'ramp', 'nestle between', 'lean up on', 'manipulate', 'banana on', 'store with', 'carry out', 'chase after', 'come off', 'cuddle up to', 'lick from', 'pack on', 'meet on', 'stuff in', 'peek out under', 'grow around', 'sit up in', 'stand beneath', 'sit out on', 'color', 'miss to', 'stick from', 'focus on', 'look to', 'place next to', 'quote on', 'lie underneath', 'crust on', 'gather on', 'sign with', 'pull up at', 'dangle in front of', 'use beside', 'drive along', 'see through', 'watch with', 'peak out inside', 'walk in between', 'tow on', 'walk around on', 'bow on', 'frost on', 'hook up with', 'garnish with', 'roll through', 'write on top of', 'stop near', 'leave around', 'do by', 'move along on', 'seat near', 'pass with', 'spray onto', 'i', 'cover up with', 'tie up', 'light around', 'preen', 'leave above', 'dock to', 'stir with', 'look beside', 'up', 'rub', 'pull past', 'stir', 'travel towards', 'light to', 'through', 'jump off of', 'eat off of', 'slice in', 'bath with', 'cuddle on', 'jump up with', 'pass in front of', 'prepare on', 'comb', 'pose in front of', 'peer out from', 'drape on', 'share with', 'pose beside', 'practice on', 'tie with', 'glaze', 'sit out in', 'get into', 'pour on', 'nap to', 'crash on', 'hydrant', 'curl in', 'snack on', 'sleep underneath', 'work with', 'track by', 'watch over', 'object on top of', 'keep', 'drink in', 'post above', 'direct', 'sun', 'donut on top of', 'rest with', 'perform with', 'lay down in front of', 'strew on', 'aim at', 'attach in front of', 'fascinate', 'tower above', 'sit among', 'sneak up behind', 'graze next to', 'reflect', 'out', 'say on', 'have around', 'ready', 'hold over', 'pass beside', 'chop with', 'dress with', 'post near', 'spread out on', 'reveal', 'pile on top of', 'face down on', 'lie down next to', 'hitch to', 'dine', 'point', 'carry with', 'place with', 'protect by', 'sit down at', 'eat out', 'strike with', 'tuck under', 'smile in', 'move towards', 'shape as', 'bark at', 'hammer below', 'stab with', 'prop on', 'write underneath', 'drape', 'pack', 'come towards', 'place beside', 'fly beside', 'present', 'touch to', 'meter to', 'glide with', 'stand next', 'use as', 'crouch under', 'lay around', 'sleep near', 'use next to', 'jump on top of', 'meet', 'sleep close to', 'snowboard down', 'park besides', 'write above', 'apply to', 'idle at', 'pass next to', 'hold as', 'milk', 'hand', 'pack with', 'sit into', 'bowl in', 'sleep against', 'into', 'hang outside', 'open next to', 'park outside of', 'outside of', 'hang with', 'pose on top of', 'platter on', 'fill to', 'read on', 'curl up on top of', 'attach in', 'travel next to', 'relax with', 'look up with', 'repurpose as', 'race on', 'snowboard in', 'drive under', 'carry in', 'huddle under', 'shade', 'sip from', 'feed next to', 'wait behind', 'keep on', 'rest atop', 'drive towards', 'cross on', 'fly below', 'paw at', 'design as', 'post with', 'travel on top of', 'buffet with', 'hang around', 'hang in', 'decorate in', 'place to', 'rub against', 'head with', 'reach up to', 'put to', 'touch with', 'tie up to', 'race down', 'peek out behind', 'head to', 'fall with', 'tape on', 'get out of', 'smile to', 'set in front of', 'round', 'sink', 'stock with', 'peck on', 'have through', 'park inside', 'pepper on', 'train', 'tell', 'plate with', 'travel down with', 'lay atop', 'press against', 'take out', 'dress as', 'stop inside', 'bend down to', 'wait by', 'instead of', 'open near', 'sprawl out on', 'ride inside', 'lay before', 'have above', 'stick down in', 'raise', 'set by', 'pull up in', 'return', 'tmod', 'shade by', 'fly towards', 'walk after', 'contain beside', 'come next to', 'pull in front of', 'dock in front of', 'drive down beside', 'park from', 'paddle', 'ride along on', 'come up next to', 'light up on top of', 'peek from', 'build in', 'cuddle up with', 'snuggle into', 'react to', 'fly than', 'reat on', 'lie out', 'lift near', 'frond', 'marking on', 'bowl to', 'light in', 'pull over at', 'peer from', 'set over', 'start to', 'fly around', 'stuff to', 'lay between', 'pass at', 'block next to', 'lounge beside', 'lay at', 'mess up on', 'turn in front of', 'hook up', 'bedside', 'store underneath', 'spread on top of', 'ride under', 'relax inside', 'nap behind', 'bend over in front of', 'leave by', 'sniff next to', 'stand beyond', 'shake on', 'swing from', 'bouquet in', 'center on', 'talk with', 'change', 'lie above', 'after', 'wetsuit on', 'signal over', 'point toward', 'attach above', 'destroy', 'cat on', 'hang out over', 'attach behind', 'bow around', 'grass behind', 'float beside', 'sit up inside', 'rise', 'attempt with', 'have under', 'array with', 'entertain', 'perch under', 'mug on', 'hear on', 'plant with', 'calmly on', 'drive at', 'line up against', 'peer out behind', 'hide of', 'jump up on', 'curl under', 'load into', 'nestle in', 'rail by', 'pare on', 'pizza from', 'outdoor on', 'and', 'submerge with', 'stick up out of', 'glide through', 'hold down with', 'figurine to', 'cake on', 'sink in', 'pull together', 'fry on', 'boarder', 'lap with', 'walk away next to', 'hold above', 'wipe out from', 'set up', 'jump off with', 'stage on', 'stack against', 'hold toward', 'perch in', 'eat on top of', 'ride together', 'dish in', 'hold out for', 'smile behind', 'bathe', 'crouch in', 'look out at', 'feed by', 'lose behind', 'snowshoe with', 'nail', 'overflow with', 'chew up', 'suspend on', 'let off', 'ball up in', 'sit on with', 'broccoli next to', 'run down', 'broccoli on', 'pile with', 'abandon with', 'observe for', 'hay near', 'land in', 'eye-ball with', 'carry around', 'roll on', 'kneel down behind', 'fly by', 'skiboard on top of', 'walk onto', 'cart with', 'climb down', 'decoration in', 'climb in', 'drop on', 'lock on', 'fall off into', 'pull through', 'squat tmod', 'kill', 'smile on', 'lean in', 'communicate with', 'stick out toward', 'mirror by', 'brush in', 'fill over', 'teach', 'neld on', 'sate in', 'run near', 'set up over', 'jump in between', 'turn down with', 'converse with', 'halfway into', 'boarder in', 'travel toward', 'kneel over in', 'note on', 'roll around', 'stitt to', 'tog on', 'smell on', 'll over', 'try to', 'scottish next to', 'travel alongside', 'face towards', 'display in', 'jump by', 'adorn on top of', 'jump inside', 'guide along with', 'walk over', 'seem on', 'deice', 'attend with', 'empty into', 'dig to', 'make out with', 'sit up like', 'elevate to', 'bunch of', 'eat while', 'clementine', 'park out by', 'heard', 'stare out at', 'crash off', 'back up into', 'waste with', 'come at', 'scottish on', 'spoon into', 'walk into', 'leave on top of', 'romp on', 'control to', 'peer through', 'splash under', 'checker', 'reach forward with', 'hold along', 'close', 'move through', 'cap on', 'fit in', 'surf on top of', 'lean through', 'sign under', 'furnish with', 'fly up into', 'slice in front of', 'carrot to', 'collar in front of', 'crawl between', 'foot off', 'come across', 'peel off of', 'counter', 'huddle to', 'walk down past', 'ofa', 'talk in', 'condiment on', 'control on', 'stand out with', 'stand across from', 'lean over with', 'look up over', 'flash below', 'arrange around', 'hydrant on top of', 'select', 'goof off in', 'type next to', 'stationary to', 'push against', 'drive along with', 'peek up inside', 'lounge next to', 'chain down with', 'seat with', 'carry in front of', 'cover up', 'charge near', 'harper below', 'engage next to', 'mash', 'why', 'look off to', 'walk up behind', 'can behind', 'pull apart', 'take in', 'radical on', 'peak behind', 'scratch next to', 'stretch over', 'mat near', 'fight near', 'yarn on', 'follow close to', 'spin', 'rush towards', 'lead around', 'poke out inside', 'leap on', 'encompass', 'sit against', 'turn by', 'style', 'ready for', 'watch against', 'look out near', 'melt on', 'set among', 'cute', 'go to', 'cloth with', 'pour in', 'trail behind', 'paint around', 'rest between', 'cart in front of', 'oven above', 'find', 'squat on', 'set out with', 'place below', 'attach under', 'laze on', 'litter with', 'pan next to', 'steer', 'look forward underneath', 'extract from', 'dress in front of', 'fall from', 'dive off', 'propeller near', 'windsurf on', 'rack at', 'clock on', 'pillow on', 'dock beside', 'rack underneath', 'signal by', 'shower', 'crouch over on', 'stoop down beside', 'sit down', 'look down from', 'graffiti over', 'pay for', 'log on', 'perch upon', 'locomotive behind', 'climb up to', 'okay with', 'head down on', 'move behind', 'glare at', 'rail in', 'pull down in', 'sculpture around', 'look up next to', 'dance in', 'pose to', 'post underneath', 'hand next to', 'pot on', 'clutter with', 'leave out on', 'hand out of', 'circle', 'care under', 'sit out next to', 'jump off onto', 'blaze near', 'grow of', 'arrive next to', 'spray on', 'eat out beside', 'lean by', 'picture above', 'groom on', 'file on', 'pave with', 'stick out in front of', 'lick in', 'line up across', 'impose on', 'graze around', 'disperse out', 'open in front of', 'hide on', 'glue to', 'turn away from', 'carry down', 'fly at', 'sprout from', 'douse', 'nap next to', 'store in', 'set at', 'accompany with', 'splash behind', 'stalk', 'cushion on', 'look towards', 'top including', 'wrestle over', 'staple', 'ship next to', 'cornbread on', 'notice', 'mirror in', 'spoon', 'smoke to', 'player up at', 'picture with', 'cover underneath', 'compartment on', 'tie up on', 'grab on', 'carry at', 'take by', 'tape around', 'accept', 'click', 'park alongside', 'fall out of', 'sit around in', 'state with', 'watch in', 'paddle-board between', 'leave over on', 'stare down at', 'stick out in', 'hang below', 'hay with', 'collaborate on', 'stack up on', 'lengthwise on', 'spray in', 'curl with', 'set near', 'perk in front of', 'prepare on top of', 'pail to', 'come up on', 'flower in', 'scoop', 'eat near', 'incision around', 'chill in', 'poke out from', 'swing for', 'drive through on', 'point with', 'look up to', 'tip over', 'arrive to', 'bowl by', 'gear in', 'overlook in', 'frame under', 'curl to', 'write into', 'rise on', 'step on top of', 'wear in', 'pose next to', 'beneath with', 'descend in', 'stitt at', 'stack beside', 'strip to', 'tuck on', 'travel in', 'center around', 'cord of', 'lean over into', 'kneel on top of', 'peek out inside', 'walk of', 'pin on', 'lock onto', 'prepare with', 'mount with', 'floor', 'plug into', 'bedspread on', 'pin of', 'counter in front of', 'study on', 'skateboard down on', 'emerge from', 'nthe', 'snip with', 'block on', 'seventy on', 'arch in front of', 'squate over', 'cart on', 'mount behind', 'stop for', 'squint into', 'cut at', 'descend down', 'cook of', 'sleep atop', 'come up', 'fold out', 'fold up', 'fly into', 'mower on', 'shin on', 'pour to', 'self', 'curl around', 'hold under', 'give next to', 'use under', 'put from', 'stationary at', 'sink on', 'store to', 'get down to', 'snuggle in', 'tug', 'lie ON', 'locate within', 'display next to', 'poke through', 'vegetable in', 'plate to', 'draw by', 'anchor to', 'shapp like', 'stack behind', 'compare', 'climb up onto', 'bundle up in', 'slice up with', 'touch on', 'draw to', 'bell on', 'bark to', 'squeeze against', 'tow by', 'candle on', 'frame by', 'perform off', 'bite at', 'cat in', 'kneel down on', 'view inside', 'park for', 'nibble at', 'text ON', 'wrestle with', 'photograph', 'tilt on', 'stand out in', 'come down past', 'pad on', 'fling', 'let from', 'comfortable on', 'relax atop', 'look about', 'nestle with', 'remainder of', 'attract', 'stack to', 'squish in between', 'veggie', 'set under', 'position over', 'cover over', 'run in front of', 'along with', 'grill on', 'sit than', 'bath on top of', 'sticker on', 'hold up in front of', 'double as', 'off', 'glass next to', 'placard on', 'lean back on', 'battle over', 'enjoy with', 'store above', 'ha to', 'decker', 'iwth', 'pull out over', 'wrestle', 'sprout in', 'go of', 'pick in', 'track behind', 'add beneath', 'pass near', 'lap at', 'scatter around', 'rest in front of', 'start', 'fille like', 'peer around', 'light on top of', 'surf with', 'suitcase on', 'pour from', 'ski on', 'mitt on', 'prop to', 'huddle beneath', 'sniff along', 'add on', 'parrot on', 'grip', 'chain on', 'gaze at', 'collect off to', 'step up onto', 'stand into', 'wave at', 'call on', 'stand up behind', 'read in front of', 'sleep inside', 'display before', 'have off', 'float in front of', 'support next to', 'go than', 'pull up across from', 'leave beside', 'feed at', 'park down', 'shoot in front of', 'handle on', 'pull in at', 'cross under', 'relax next to', 'perch underneath', 'call', 'defecate in front of', 'gear', 'shave on', 'cuddle', 'tint to', 'hold into', 'dot by', 'break', 'board before', 'freezer to', 'bedspread in', 'sauvignon', 'face up', 'crouch before', 'grow inside', 'appear with', 'live to', 'pull out from', 'jump up from', 'picture on', 'wake next to', 'go around', 'take off to', 'provide by', 'pepperoni on', 'heap with', 'fly in front of', 'park against', 'stem in', 'lounge near', 'carrot on top of', 'stitch on', 'use at', 'drink next to', 'ready to', 'depart', 'stand against', 'sign around', 'turn down', 'perch by', 'front', 'stuff into', 'crouch', 'play at', 'climb', 'pull off', 'curl up next to', 'see out of', 'drink with', 'bath on', 'hydrant in', 'look out over', 'snuggle up against', 'have from', 'line by', 'write about', 'wait alongside', 'hug by', 'allow above', 'take over', 'hurdle', 'stuff around', 'go', 'kneel down with', 'label', 'visit', 'knock off', 'pot with', 'candy', 'hug on', 'cross over', 'twenty on', 'hand in', 'draw near', 'throw up in', 'assemble', 'claw', 'halve in', 'block by', 'neara', 'cut under', 'cushion around', 'hang outside of', 'skateboard down with', 'push on', 'contain next to', 'bear atop', 'face beside', 'rub beside', 'smile for', 'yawn on', 'poise over', 'rise next to', 'stop outside of', 'snowboard with', 'pick up by', 'hole in front of', 'make through', 'lounge in front of', 'pile in front of', 'aboard', 'hook up in', 'hole with', 'move at', 'peek out from', 'set for', 'ducky in', 'swipe at', 'jump in front of', 'make up in', 'crouch on top of', 'flower on', 'pet on', 'spark underneath', 'drink near', 'scatter about', 'smile in front of', 'design next to', 'kneel by', 'name with', 'lean with', 'stare down', 'signal below', 'walk along next to', 'carrot with', 'rise around', 'dress to', 'lean', 'gaze up at', 'sunbathe on top of', 'leg with', 'release', 'make up', 'miss with', 'muffin out of', 'pose for', 'draw in', 'pause in front of', 'ride around', 'mess with', 'splice on', 'peek into', 'toss to', 'harness to', 'four with', 'post next to', 'phone next to', 'head towards', 'get onto', 'glass of', 'wit on', 'turn with', 'bite around', 'dip tmod', 'smash in', 'grind along', 'bat at', 'roll up by', 'call to', 'star on', 'track outside', 'ride out', 'paint in', 'put near', 'finish', 'rise off', 'haul around', 'stare behind', 'curl up around', 'sit on next to', 'sniff around', 'rest alongside', 'fall of', 'hold on top of', 'figurine next to', 'train on', 'float past', 'nurse from', 'exit', 'jump for', 'contain tmod', 'hump on', 'slice atop', 'maneuver', 'logo', 'wear under', 'track on', 'paw to', 'do at', 'grace', 'view up with', 'inspire on top of', 'nestle against', 'head', 'kneel behind', 'post behind', 'lie around on', 'position to', 'fink', 'hide on top of', 'streak behind', 'atv', 'groom in', 'peel at', 'press out', 'crouch down on', 'lean down to', 'group together with', 'pull open', 'foil on', 'walk up towards', 'erect behind', 'light up with', 'fuel', 'cut out', 'wrap beside', 'scissor over', 'pane as', "stand 's", 'pull along', 'perform in', 'lead with', 'open by', 'hydrant along with', 'obama under', 'throw at', 'turn to', 'compare to', 'soak on top of', 'carve on', 'loll about on', 'curl atop', 'monitor to', 'print next to', 'lock', 'sit close by', 'rest up against', 'sit down in front of', 'lean over at', 'twenty at', 'tip over on', 'lay out with', 'feet up on', 'tape up', 'hate', 'unload', 'nestle beside', 'knock', 'fence in', 'rope', 'stuff on top of', 'finish up at', 'brake for', 'drive underneath', 'adrift aboard', 'hang up by', 'pick', 'look down toward', 'line up', 'sail on', 'flip off', 'sprinkle over', 'zebra under', 'bend over to', 'rake', 'separate from', 'taxi down behind', 'balance over', 'position in', 'pant next to', 'step into', 'strap onto', 'walk amongst', 'get off of', 'ledge behind', 'face of', 'carry under', 'ski down behind', 'put next to', 'position behind', 'throw on top of', 'head for', 'bridesmaid on', 'fasten to', 'track beside', 'stand while', 'lap next to', 'eat under', 'name on top of', 'boil in', 'climb out of', 'snooze on', 'can between', 'push under', 'indoor on', 'name', 'jump up into', 'crawl into', 'feed underneath', 'print on top of', 'murder', 'kneel to', 'cup on', 'jump atop', 'nurse off', 'enter into', 'place upon', 'place above', 'line up including', 'chair under', 'pant beside', 'top under', 'wait outside', 'flip up', 'lighten on', 'walk down in front of', 'film', 'pose at', 'face toward', 'load next to', 'bye', 'half-submerge in', 'foot', 'point into', 'play behind', 'goose', 'quarter with', 'complete on', 'await on', 'bear up in front of', 'eat out with', 'do before', 'log with', 'pool with', 'wale away from', 'stick by', 'eat atop', 'look over at', 'go behind', 'ride away on', 'letter on', 'situate near', 'relax under', 'watch at', 'scatter on top of', 'because', 'head down in', 'stand up near', 'face in', 'line up with', 'counter by', 'chair', 'look off of', 'look up underneath', 'aim', 'tackle', 'lap to', 'hand over', 'take off on', 'grab from', 'silverware', 'look down in', 'stnade close to', 'strip off of', 'dump into', 'nuzzle with', 'tape at', 'flake with', 'plow with', 'pet in front of', 'hold up before', 'ski next to', 'grab at', 'stand up against', 'protect', 'bristle on', 'oven inside', 'leave behind', 'phone in front of', 'paw with', 'monitor with', 'warn of', 'heat in', 'bark on', 'set up against', 'pass over', 'foot above', 'pass to', 'lie down around', 'lean out', 'bag by', 'mess up', 'cube in', 'take up', 'steam down', 'dote', 'roll of', 'lean down in', 'look toward', 'drive around', 'decorate to', 'wing next to', 'lock up on', 'hock up to', 'feed in front of', 'curve', 'pare with', 'perch next to', 'peer out of', 'curl into', 'pet to', 'saucer on', 'stand up', 'rail above', 'stop along at', 'bun next to', 'flutter to', 'open up', 'oven to', 'wipe out in', 'hol up in front of', 'surprise in front of', 'pot in front of', 'stem on', 'cut off', 'slice on top of', 'give from', 'attach next to', 'an', 'curl up beside', 'fall over by', 'stare with', 'place in front of', 'run alongside', 'cage up', 'hold up above', 'park across from', 'investigate by', 'sprig in', 'hold back', 'halfway in', 'light if', 'paw', 'graze near', 'print across', 'wine', 'fille with', 'muffin on', 'pull out', 'blueberry', 'smile by', 'sittie on', 'case with', 'stab', 'go over on', 'lay about', 'store on top of', 'pear in', 'rest over', 'pour at', 'pan in', 'drive off to', 'burn in', 'glass in front of', 'counter on', 'excite in front of', 'remaining in front of', 'serve to', 'break in front of', 'wale near', 'olly', 'fence in front of', 'fill into', 'split in', 'stack', 'extend to', 'chug along', 'read by', 'travel over', 'pose under', 'look outside of', 'climb with', 'stop under', 'peep out of', 'scratch on top of', 'position between', 'overlook from', 'write in front of', 'show near', 'dumple in front of', 'sleep beneath', 'snoop into', 'title next to', 'plate around', 'kneel beside', 'upright', 'stick out at', 'herd behind', 'join', 'work underneath', 'lodge in', 'perch beneath', 'boad over', 'slap on', 'drink out', 'bundle up with', 'stare off with', 'stick through', 'linen in', 'lie down under', 'stretch in front of', 'leg on', 'cuddle next to', 'pore into', 'tag on', 'face atop', 'hang out in', 'tow next to', 'board at', 'look out atop', 'form', 'squat in front of', 'open behind', 'check on', 'mix', 'catch by', 'enclosure with', 'during', 'decoration around to', 'can by', 'pull out under', 'drive down on', 'paw over', 'nestle up on top of', 'crowd with', 'make up above', 'hydrant under', 'hold up by', 'relax in front of', 'attempt on', 'break up in', 'shield by', 'make beside', 'look behind in', 'attack on', 'drawer in', 'peck at', 'fight over with', 'cage with', 'roll by', 'hold near', 'rub up', 'blanket on top of', 'cozy up in', 'hide next to', 'macaroni on', 'fly up after', 'extend out towards', 'travel down under', 'drive down past', 'bend down with', 'skyline behind', 'burner on', 'decide', 'dispenser to', 'perform between', 'board past', 'pair', 'greet', 'tow behind', 'fin in', 'lay down above', 'design for', 'run around by', 'hay next to', 'that', 'pull out next to', 'sin below', 'display along with', 'paint on top of', 'rally with', 'look up', 'boil with', 'approach behind', 'prop up by', 'sheer off of', 'cake around', 'peer in', 'slip off of', 'climb onto', 'spoon over', 'come off of', "reach 's", 'block in front of', 'smile next to', 'rack behind', 'grow over', 'tilt', 'sleep on of', 'cutting in', 'stand about', 'tie up at', 'preform on', 'overflow onto', 'drive down to', 'mash with', 'dive from', 'peak into', 'arrange behind', 'suspend over', 'batter up to', 'descend out of', 'mat on', 'load at', 'look onto', 'guard on', 'decoration on top of', 'peek over', 'remove by', 'line to', 'relax to', 'sail away from', 'place into', 'throw up into', 'mirror over', 'offer to', 'stuff behind', 'pass in', 'play near', 'bowl beside', 'place near', 'scare', 'lay up on', 'quilt in', 'sill above', 'lap near', 'zip up', 'clean in', 'wield', 'outdoor with', 'slope with', 'run at', 'wake towards', 'dry in', 'anchor at', 'try on', 'but into', 'tot on', 'sittig to', 'speaker on', 'chew next to', 'come out underneath', 'coast along on', 'jump through', 'squint at', 'hump', 'tilt up toward', 'stratch', 'than', 'o', 'load up on', 'handle inside', 'travel near', 'proceed down', 'store beside', 'mingle near', 'look underneath', 'miss on', 'reach', 'tie down to', 'investigate beside', 'upon', 'miss beside', 'gesture toward', 'bend', 'oak on', 'wear around', 'figure', 'go down behind', 'smell with', 'tilt up', 'tilt up against', 'go in', 'grow', 'command by', 'pull up in front of', 'compete with', 'arrange in front of', 'perform at', 'sprinlkle on', 'bow before', 'trip off of', 'dock next to', 'make up with', 'hold up on', 'hang under', 'kitty on', 'curl up', 'mount on to', 'display near', 'puncture by', 'engage in', 'mount between', 'shake next to', 'garage on', 'hook inside', 'hide among', 'sniff near', 'pail next to', 'push over', 'brown around', 'bet by', 'push into', 'face on top of', 'stand up in', 'pizza on top of', 'close behind', 'peer out over', 'layer on top of', 'indicate on', 'relax by', 'produce', 'shadow next to', 'via', 'reach down off', 'browse at', 'lick beside', 'wrestle from', 'tow away', 'evangelize on', 'ride into', 'hand beside', 'throw up', 'loll around on', 'wedge', 'lick on top of', 'crown around', 'rip up', 'snow', 'stick outside', 'site in front of', 'hand out', 'vertical in front of', 'bogey at', 'prop at', 'monitor in', 'make up of', 'kneel down in front of', 'look in at', 'kneel down in', 'face next to', 'stand up with', 'drive near to', 'dump', 'paint as', 'grow out of', 'take down up', 'halve with', 'someone with', 'crouch down beside', 'sharpen on', 'pan', 'paw on top of', 'back', 'arch with', 'follow next to', 'wait inside', 'screw to', 'strap into', 'push in', 'stem inside', 'retrieve', 'order', 'appear close to', 'set behind', 'rub with', 'support', 'decapitate on', 'wear to', 'hunch over on', 'lay out under', 'holdie', 'cool', 'water', 'rubber on', 'peek around', 'scoop out', 'spray over', 'graze in', 'headlight out', 'poss with', 'size on', 'lie beneath', 'station on', 'relax on top of', 'walk down behind', 'can next to', 'move between', 'lean forward in front of', 'sit open', 'sleep above', 'scowl beside', 'roost in', 'fly on', 'toss in', 'laugh in', 'fashion out of', 'show in', 'asleep in', 'reflect below', 'ride near', 'there on', 'bowl', 'sniff by', 'stop past', 'signal', 'chain', 'scribble on', 'run up behind', 'shave', 'connect with', 'wear by', 'hold beyond', 'topper on top of', 'move besides', 'fold on top of', 'hoagie on', 'chowder with', 'shelter over', 'sit tmod', 'chair in', 'bowl on top of', 'wait next to', 'lay upon', 'rap next to', 'tape with', 'stationary under', 'top inside', 'kneel in front of', 'slow down in', 'sneak around', 'look on away from', 'trim', 'sit amongst', 'ride alongside', 'play inside', 'cart next to', 'travel down behind', 'swing in front of', 'skate', 'curl up under', 'flush with', 'slice open', 'travel down beside', 'splash', 'peer at', 'wheel on', 'syrup beside', 'size in', 'go in of', 'snuggle up in', 'nap on top of', 'foot behind', 'dress of', 'rub up on top of', 'contrast with', 'shop behind', 'see on', 'glass to', 'set next to', 'carry tmod', 'claim as', 'have below', 'look down with', 'have on top of', 'hog', 'pick on', 'numeral on', 'station in', 'do off', 'pull alongside', 'label on top of', 'fom', 'rack in', 'collide with', 'perch up', 'crow into', 'hard at', 'runnig along', 'travel in front of', 'remove', 'ptich by', 'collide in', 'banner down below', 'view below', 'hide near', 'descend from', 'mark beside', 'pigeon in', 'pick at', 'illuminate', 'lead on', 'cram in', 'tie up by', 'cross for', 'range behind', 'scoop out from', 'perch to', 'see of', 'pilot through', 'sidewalk with', 'back up on', 'unload from', 'bruise', 'meter around', 'walk around by', 'rack next to', 'wrap up next to', 'design like', 'grow out with', 'suitcase with', 'sit together in', 'remaining on', 'pull near', 'glide on', 'lounge with', "sit 's", 'cover around', 'can on', 'hold along with', 'bend over in', 'listen to', 'coordinate on', 'nestle to', 'tub in', 'feature next to', 'astride', 'go toward', 'bear around', 'stationary in', 'float among', 'stretch out over', 'hold beside', 'pie to', 'face between', 'green in', 'contain within', 'pole on', 'fly toward', 'rejoice in', 'suspend behind', 'pile into', 'gesture towards', 'vegetable on', 'pile around', 'highlight', 'recline in', 'raise with', 'etching on', 'seat', 'indicate', 'rack beneath', 'mitt to', 'bite on', 'roll to', 'harness behind', 'cover in front of', 'have across', 'run into', 'carve', 'attach on', 'drawer above', 'supply around', 'top up', 'cross by', 'barrel down', 'weigh in', 'lie around', 'carry by', 'fly over with', 'drag in', 'glue on top of', 'read in', 'traffic with', 'surround on', 'stack between', 'headboard in', 'shoot of', 'drool at', 'drink inside', 'follow beside', 'eat around', 'perch', 'screw on', 'hold on behind', 'appoint with', 'bear inside', 'cross next to', 'fry', 'offer from', 'rust on', 'pile beside', 'cut behind', 'look back at', 'catch with', 'ice over', 'bottle if', 'loll around beside', 'run past', 'bowl in front of', 'zero on', 'far from', 'lower near', 'chase along behind', 'travel between', 'let on', 'run along', 'interact on', 'hook to', 'wear atop', 'meter with', 'hydrant below', 'read from', 'frolic with', 'snuggle up inside', 'handle from', 'position on', 'rest across', 'admire in', 'tide', 'find on', 'clean near', 'move along at', 'ride up above', 'obscure with', 'cornbread to', 'tug at', 'soak', 'howl in', 'say under', 'lift behind', 'bear between', 'read next to', 'fall on', 'cloud behind', 'wreck against', 'wear beside', 'run after', 'look out underneath', 'swim with', 'perch at', 'cry in front of', 'watch out', 'eat underneath', 'stand up by', 'pull in to', 'mellow on top of', 'bring back', 'doughnut on', 'ride of', 'work at', 'ivy', 'sit alongside of', 'motionless at', 'trail on', 'slice across from', 'sand next to', 'monitor next to', 'contain in', 'pull out to', 'hover above', 'travel across', 'prop up in front of', 'double next to', 'lean around', 'keyboard next to', 'asleep with', 'lounge across', 'locate on', 'show to', 'watch as', 'look out under', 'write to', 'have beneath', 'laze against', 'stare', 'stroke', 'pull up behind', 'look down next to', 'lock in', 'crouch beneath', 'comfortable in', 'modify onto', 'fit on', 'lay alongside', 'kneel down under', 'enjoy from', 'repair with', 'boarder with', 'blow on', 'hydrant beside', 'arrive in', 'peal', 'pass between', 'carrots.with', 'etch into', 'stretch out', 'sit outside of', 'topping with', 'cola', 'melt down', 'lie on on', 'go into', 'writeen on', 'transport on top of', 'lean over on', 'contain to', 'add with', 'bring in', 'cut up near', 'counter near', 'yawn to', 'amongst', 'smell in', 'stand before', 'hog by', 'come up to', 'faucet above', 'lay around in', 'besdie', 'look on at', 'frost on on', 'drive off', 'huddle around', 'move over', 'park below', 'stick out from', 'go up to', 'bend down on', 'perch above', 'ride as', 'halve next to', 'sit on as', 'pour up', 'kick up at', 'put over at', 'scatter on', 'chair around', 'enjoy in', 'pat', 'trough', 'swipe', 'lean over near', 'view with', 'stick with', 'collar', 'immerse inside', 'drive along next to', 'swing as', 'lick with', 'paint to', 'wit in front of', 'flip over', 'walk at', "'s", 'seat under', 'interact under', 'navigate', 'do around', 'locate near', 'nose around in', 'fire on', 'witb in', 'both in', 'read at', 'leap to', 'deface on', 'hover near', 'lead up behind', 'back of', 'elephant behind', 'hiss at', 'standing', 'scratch to', 'face by', 'jump up', 'park along next to', 'admire', 'hockey on', 'fall down', 'work on in', 'onion next to', 'hydrant near', 'propeller on', 'decoration around', 'prop up against', 'sterilize on', 'peek behind', 'cover above', 'spear by', 'fasten', 'press above', 'touch at', 'stomach with', 'hover', 'wade by', 'sit down next to', 'figurine on top of', 'twist in', 'bask on', 'lie down by', 'speak about', 'link around', 'unwrap from', 'across from', 'overtake', 'meditate in front of', 'dump onto', 'juice on', 'speed on', 'nap alongside', 'sew to', 'puke into', 'position over next to', 'walk aside', 'dough on top of', 'prop up with', 'cub by', 'split', 'eat out as', 'dock in', 'walk around in', 'knock over', 'spinach to', 'feed off of', 'seat to', 'bowl for', 'corral', 'spoon in', 'run underneath', 'head on', 'see inside', 'pass under', 'track under', 'rest besides', 'pass behind', 'stick near', 'bush in', 'press to', 'jump over over', 'spread with', 'glass up on', 'place alongside', 'rest at', 'roll on top of', 'pierce with', 'stand around beside', 'surf in', 'wear in front of', 'stretch next to', 'cart in', 'participate in', 'sleep', 'boarder on', 'lay on next to', 'lay out around', 'vein on top of', 'cook from', 'climb up', 'play beneath', 'cut in by', 'near to', 'tile', 'work down', 'stop along', 'setup in between', 'put out', 'la down on', 'sight on', 'run as', 'cut up in', 'bend over on', 'run toward', 'read on top of', 'sneak up on', 'fork on', 'pull towards', 'whirlpool on', 'splash in', 'pile to', 'pull up inside', 'float underneath', 'jump during', 'ignore', 'mark on', 'drive up to', 'set beside', 'stop beside', 'touch in', 'play around in', 'point as', 'jump up near', 'nestle up in', 'light behind', 'plate at', 'stack by', 'designate for', 'sprinkle', 'cross at', 'structure next to', 'ride across', 'hang out', 'dry on', 'spread out across', 'group in', 'lap on top of', 'supply on', 'cross past', 'collect from', 'touch behind', 'curl up behind', 'green on', 'cut around', 'wear at', 'mattress near', 'help out', 'turn in', 'wrangle', 'lift up', 'track past', 'move from', 'enclosure around', 'peel with', 'bear beside', 'rest by', 'stop below', 'pass down', 'skillet on', 'date on', 'counter across from', 'sign by', 'climb on', 'motorcycle down with', 'walk close to', 'scratch on', 'carry away', 'tuck underneath', 'spill on', 'fresh out of']
Sg2ImModel(
  (obj_embeddings): Embedding(92, 128)
  (pred_embeddings): Embedding(3338, 128)
  (gconv): GraphTripleConv(
    (net1): Sequential(
      (0): Linear(in_features=384, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=1152, bias=True)
      (3): ReLU()
    )
    (net2): Sequential(
      (0): Linear(in_features=512, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=128, bias=True)
      (3): ReLU()
    )
  )
  (gconv_net): GraphTripleConvNet(
    (gconvs): ModuleList(
      (0): GraphTripleConv(
        (net1): Sequential(
          (0): Linear(in_features=384, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=1152, bias=True)
          (3): ReLU()
        )
        (net2): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=128, bias=True)
          (3): ReLU()
        )
      )
      (1): GraphTripleConv(
        (net1): Sequential(
          (0): Linear(in_features=384, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=1152, bias=True)
          (3): ReLU()
        )
        (net2): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=128, bias=True)
          (3): ReLU()
        )
      )
      (2): GraphTripleConv(
        (net1): Sequential(
          (0): Linear(in_features=384, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=1152, bias=True)
          (3): ReLU()
        )
        (net2): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=128, bias=True)
          (3): ReLU()
        )
      )
      (3): GraphTripleConv(
        (net1): Sequential(
          (0): Linear(in_features=384, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=1152, bias=True)
          (3): ReLU()
        )
        (net2): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=128, bias=True)
          (3): ReLU()
        )
      )
    )
  )
  (box_net): Sequential(
    (0): Linear(in_features=128, out_features=512, bias=True)
    (1): ReLU()
    (2): Linear(in_features=512, out_features=4, bias=True)
    (3): ReLU()
  )
  (mask_net): Sequential(
    (0): Upsample(scale_factor=2, mode=nearest)
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): ReLU()
    (4): Upsample(scale_factor=2, mode=nearest)
    (5): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU()
    (8): Upsample(scale_factor=2, mode=nearest)
    (9): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU()
    (12): Upsample(scale_factor=2, mode=nearest)
    (13): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): ReLU()
    (16): Conv2d(128, 1, kernel_size=(1, 1), stride=(1, 1))
  )
  (rel_aux_net): Sequential(
    (0): Linear(in_features=264, out_features=512, bias=True)
    (1): ReLU()
    (2): Linear(in_features=512, out_features=3338, bias=True)
    (3): ReLU()
  )
  (refinement_net): RefinementNetwork(
    (refinement_modules): ModuleList(
      (0): RefinementModule(
        (net): Sequential(
          (0): Conv2d(161, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): LeakyReLU(negative_slope=0.2)
          (3): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): LeakyReLU(negative_slope=0.2)
        )
      )
      (1): RefinementModule(
        (net): Sequential(
          (0): Conv2d(1184, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): LeakyReLU(negative_slope=0.2)
          (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): LeakyReLU(negative_slope=0.2)
        )
      )
      (2): RefinementModule(
        (net): Sequential(
          (0): Conv2d(672, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): LeakyReLU(negative_slope=0.2)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): LeakyReLU(negative_slope=0.2)
        )
      )
      (3): RefinementModule(
        (net): Sequential(
          (0): Conv2d(416, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): LeakyReLU(negative_slope=0.2)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): LeakyReLU(negative_slope=0.2)
        )
      )
      (4): RefinementModule(
        (net): Sequential(
          (0): Conv2d(288, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): LeakyReLU(negative_slope=0.2)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): LeakyReLU(negative_slope=0.2)
        )
      )
    )
    (output_conv): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): LeakyReLU(negative_slope=0.2)
      (2): Conv2d(64, 3, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2))
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
LeakyReLU(negative_slope=0.2)
Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2))
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
LeakyReLU(negative_slope=0.2)
Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2))
Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2))
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
LeakyReLU(negative_slope=0.2)
Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2))
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
LeakyReLU(negative_slope=0.2)
Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2))
AcCropDiscriminator(
  (discriminator): AcDiscriminator(
    (cnn): Sequential(
      (0): Sequential(
        (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.2)
        (3): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): LeakyReLU(negative_slope=0.2)
        (6): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2))
      )
      (1): GlobalAvgPool()
      (2): Linear(in_features=256, out_features=1024, bias=True)
    )
    (real_classifier): Linear(in_features=1024, out_features=1, bias=True)
    (obj_classifier): Linear(in_features=1024, out_features=91, bias=True)
  )
)
PatchDiscriminator(
  (cnn): Sequential(
    (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.2)
    (3): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2))
    (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): LeakyReLU(negative_slope=0.2)
    (6): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2))
  )
  (classifier): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
)
Starting epoch 1
cur_t_vecs
torch.Size([250, 384])
tensor([[-4.0437e-01, -2.8483e-01, -1.9197e+00,  ...,  5.1213e-01,
          1.5441e+00,  1.8037e+00],
        [ 2.9820e-02, -1.2142e+00, -1.0878e+00,  ...,  5.1213e-01,
          1.5441e+00,  1.8037e+00],
        [ 1.9484e-02,  1.0561e+00, -2.3288e+00,  ...,  1.5099e+00,
         -5.6501e-01,  1.4369e-01],
        ...,
        [ 2.9820e-02, -1.2142e+00, -1.0878e+00,  ..., -4.4160e-01,
          8.9348e-01, -9.2239e-01],
        [ 2.0915e+00,  1.7861e+00, -1.4910e+00,  ..., -4.4160e-01,
          8.9348e-01, -9.2239e-01],
        [ 2.3559e+00, -9.9838e-02,  2.2048e-02,  ..., -4.4160e-01,
          8.9348e-01, -9.2239e-01]], device='cuda:0')
cur_t_vecs
torch.Size([250, 384])
tensor([[ 1.1570,  1.7288,  0.0000,  ...,  0.0000,  0.4188,  1.3861],
        [ 0.1644,  0.9861,  0.0000,  ...,  0.0000,  0.4188,  1.3861],
        [ 0.8278,  0.6433,  0.0192,  ...,  0.0000,  1.0101,  2.3180],
        ...,
        [ 1.2117,  1.6033,  0.0000,  ...,  0.0000,  1.2666,  0.0000],
        [ 0.9905,  0.9958,  0.0000,  ...,  0.0000,  1.2666,  0.0000],
        [ 0.9014,  1.1817,  0.0000,  ...,  0.0000,  1.2666,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.0000,  0.0000,  0.1204,  ...,  0.7739,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.4820,  ...,  0.7739,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.0187,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  1.1255,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.5512,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.0000,  1.7396,  1.3260,  ...,  0.0000,  0.9061,  0.0000],
        [ 0.1999,  1.5679,  0.7859,  ...,  0.0000,  0.9061,  0.0000],
        [ 0.5364,  1.8679,  0.6306,  ...,  0.0000,  1.0737,  0.0000],
        ...,
        [ 0.0000,  1.8512,  0.9527,  ...,  0.0471,  0.5792,  0.0000],
        [ 0.6677,  1.4484,  0.6241,  ...,  0.0471,  0.5792,  0.0000],
        [ 0.0000,  1.8353,  0.7663,  ...,  0.0471,  0.5792,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.0496,  0.0991,  0.0000,  ...,  0.0000,  0.3847,  0.5726],
        [ 0.6542,  0.3129,  0.0000,  ...,  0.0000,  0.3847,  0.5726],
        [ 0.6230,  0.2470,  0.0000,  ...,  0.0000,  0.0000,  0.4296],
        ...,
        [ 0.4598,  1.0939,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5129,  0.3576,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5768,  0.0660,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([259, 384])
tensor([[-0.9309,  0.1467,  0.9029,  ...,  1.5100, -0.5651,  0.1436],
        [-0.3741, -0.6863, -0.6373,  ...,  1.5100, -0.5651,  0.1436],
        [-0.7143, -3.5684, -0.0959,  ..., -0.4950,  1.5490, -0.4600],
        ...,
        [ 0.4661,  0.0526,  1.4767,  ..., -0.4415,  0.8936, -0.9225],
        [ 0.0297, -1.2143, -1.0877,  ..., -0.4415,  0.8936, -0.9225],
        [-2.0060, -1.0799,  0.1127,  ..., -0.4415,  0.8936, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([259, 384])
tensor([[ 0.0000,  0.9475,  0.0000,  ...,  0.0000,  1.6408,  1.7383],
        [ 0.5962,  1.2687,  0.2031,  ...,  0.0000,  1.6408,  1.7383],
        [ 0.6425,  0.3779,  0.2574,  ...,  0.0000,  0.0000,  1.7802],
        ...,
        [ 0.5230,  1.0370,  0.0000,  ...,  0.0000,  0.9363,  0.0000],
        [ 0.4596,  0.0000,  0.0000,  ...,  0.0000,  0.9363,  0.0000],
        [ 2.1826,  1.6079,  0.9538,  ...,  0.0000,  0.9363,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([259, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.3451,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.3451,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1469,  ...,  0.7503,  0.2624,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.5069,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  1.0504,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([259, 384])
tensor([[ 0.3029,  2.1764,  0.5114,  ...,  0.0000,  0.0795,  0.0000],
        [ 0.3713,  1.8594,  0.4753,  ...,  0.0000,  0.0795,  0.0000],
        [ 0.0000,  2.2380,  0.7988,  ...,  0.0000,  1.0171,  0.0000],
        ...,
        [ 0.0491,  1.8760,  0.5353,  ...,  0.1936,  0.8656,  0.0000],
        [ 0.7640,  2.1621,  0.4889,  ...,  0.1936,  0.8656,  0.0000],
        [ 0.0000,  2.4115,  1.0706,  ...,  0.1936,  0.8656,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([259, 384])
tensor([[ 0.8815,  0.5625,  0.0000,  ...,  0.1706,  0.9057,  0.2399],
        [ 0.5266,  0.4953,  0.0000,  ...,  0.1706,  0.9057,  0.2399],
        [ 0.8419,  1.0521,  0.0000,  ...,  0.0000,  0.0000,  0.5033],
        ...,
        [ 1.2906,  0.3969,  0.0000,  ...,  0.0000,  0.9408,  0.0000],
        [ 1.1687,  0.3808,  0.0000,  ...,  0.0000,  0.9408,  0.0000],
        [ 0.9544,  1.1423,  0.0000,  ...,  0.0000,  0.9408,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[-0.9310,  0.1466,  0.9029,  ..., -0.5924, -1.4804,  0.6357],
        [-0.7565,  0.3272, -0.3382,  ...,  1.5101, -0.5652,  0.1435],
        [ 0.0296, -1.2144, -1.0876,  ..., -0.4949,  1.5490, -0.4599],
        ...,
        [ 0.0296, -1.2144, -1.0876,  ..., -0.4415,  0.8937, -0.9226],
        [-0.9310,  0.1466,  0.9029,  ..., -0.4415,  0.8937, -0.9226],
        [ 0.1685,  0.3747, -0.5976,  ..., -0.4415,  0.8937, -0.9226]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.2235,  1.0896,  0.0641,  ...,  0.0000,  1.5145,  1.6533],
        [ 0.3299,  0.4406,  0.0139,  ...,  0.0000,  1.4240,  1.9999],
        [ 0.7021,  1.2762,  0.0000,  ...,  0.0000,  0.1097,  2.3611],
        ...,
        [ 0.5347,  1.1035,  0.3733,  ...,  0.0000,  1.6501,  0.0000],
        [ 0.0000,  0.1237,  0.0000,  ...,  0.0000,  1.6501,  0.0000],
        [ 0.8115,  1.6490,  0.0000,  ...,  0.0000,  1.6501,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  0.0000,  0.4428,  ...,  0.6184,  0.5487,  0.0000],
        [ 0.0000,  0.0000,  0.5411,  ...,  0.8333,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3150,  ...,  0.4978,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.5140,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3395,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.4714,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.5059,  2.2372,  0.5402,  ...,  0.0000,  0.7132,  0.0019],
        [ 0.2283,  2.2035,  0.1229,  ...,  0.0000,  0.9027,  0.0000],
        [ 0.8016,  2.0241,  0.4823,  ...,  0.0000,  0.7226,  0.0000],
        ...,
        [ 0.3834,  1.8818,  0.3732,  ...,  0.0000,  0.0932,  0.0000],
        [ 0.7036,  2.1888,  0.1653,  ...,  0.0000,  0.0932,  0.0000],
        [ 0.0000,  3.0556,  0.9180,  ...,  0.0000,  0.0932,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 1.2876,  0.6879,  0.0000,  ...,  0.0000,  0.0000,  0.8000],
        [ 0.8324,  0.1402,  0.0000,  ...,  0.0000,  0.0000,  1.0121],
        [ 1.1958,  0.3653,  0.0000,  ...,  0.0000,  0.0000,  0.9746],
        ...,
        [ 1.3157,  0.6221,  0.0000,  ...,  0.0000,  0.9292,  0.2467],
        [ 0.7995,  0.2842,  0.0000,  ...,  0.0000,  0.9292,  0.2467],
        [ 1.1408,  2.0145,  0.0000,  ...,  0.0000,  0.9292,  0.2467]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[-0.9309,  0.1466,  0.9028,  ...,  0.4702, -1.6765,  0.0159],
        [-0.9309,  0.1466,  0.9028,  ...,  1.5100, -0.5653,  0.1435],
        [-1.0488, -0.1907, -1.3647,  ...,  1.5100, -0.5653,  0.1435],
        ...,
        [-1.4574, -0.2714, -0.3477,  ..., -0.4415,  0.8937, -0.9226],
        [-1.6448, -1.8979,  0.3107,  ..., -0.4415,  0.8937, -0.9226],
        [-0.5045,  1.8699,  1.2355,  ..., -0.4415,  0.8937, -0.9226]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.4895,  0.9867,  ...,  0.0000,  1.8431,  1.7129],
        [ 0.0000,  0.4895,  0.9867,  ...,  0.0000,  1.5067,  1.0012],
        [ 0.7382,  0.2768,  0.7029,  ...,  0.0000,  1.5067,  1.0012],
        ...,
        [ 0.6378,  2.9260,  0.0000,  ...,  0.0000,  1.2657,  0.0000],
        [ 0.1625,  1.8576,  0.0000,  ...,  0.0000,  1.2657,  0.0000],
        [ 0.0000,  1.3498,  0.0000,  ...,  0.0000,  1.2657,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.2359,  0.2878,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4239,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4239,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.2152,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  1.2609,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  2.6480,  0.9684,  ...,  0.0000,  0.3587,  0.0000],
        [ 0.0000,  2.6480,  0.9684,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5768,  2.3326,  0.4857,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  3.0347,  1.4905,  ...,  0.1299,  0.2492,  0.0000],
        [ 1.1999,  2.4367,  0.1839,  ...,  0.1299,  0.2492,  0.0000],
        [ 0.7622,  2.0704,  0.0000,  ...,  0.1299,  0.2492,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 1.2337,  1.7174,  0.0000,  ...,  0.0000,  0.0000,  0.8376],
        [ 1.2337,  1.7174,  0.0000,  ...,  0.0000,  0.4080,  0.2266],
        [ 0.8631,  0.4856,  0.0000,  ...,  0.0000,  0.4080,  0.2266],
        ...,
        [ 1.1878,  1.5196,  0.0000,  ...,  0.0000,  1.2155,  0.0000],
        [ 0.8073,  0.0978,  0.0000,  ...,  0.0000,  1.2155,  0.0000],
        [ 1.0609,  0.5986,  0.0000,  ...,  0.0000,  1.2155,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([223, 384])
tensor([[ 2.3558, -0.1001,  0.0220,  ...,  0.7593, -1.3405, -1.3003],
        [ 2.3558, -0.1001,  0.0220,  ...,  0.7593, -1.3405, -1.3003],
        [ 2.3558, -0.1001,  0.0220,  ...,  1.5099, -0.5653,  0.1435],
        ...,
        [-0.4045, -0.2849, -1.9200,  ..., -0.4415,  0.8936, -0.9225],
        [-0.5045,  1.8699,  1.2354,  ..., -0.4415,  0.8936, -0.9225],
        [ 0.5581, -0.6418, -2.2326,  ..., -0.4415,  0.8936, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([223, 384])
tensor([[ 0.7335,  2.5789,  0.0000,  ...,  0.0794,  1.3214,  1.1968],
        [ 0.7335,  2.5789,  0.0000,  ...,  0.0794,  1.3214,  1.1968],
        [ 0.7335,  2.5789,  0.0000,  ...,  0.0000,  1.6921,  2.5073],
        ...,
        [ 1.6889,  0.6228,  0.0000,  ...,  0.0000,  1.8796,  0.0000],
        [ 0.0113,  1.8825,  0.2165,  ...,  0.0000,  1.8796,  0.0000],
        [ 1.1961,  1.0425,  0.4442,  ...,  0.0000,  1.8796,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([223, 384])
tensor([[ 0.0000,  0.0000,  0.5502,  ...,  0.0712,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.5502,  ...,  0.0712,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.5502,  ...,  0.5031,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.4288,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  1.2137,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  1.1152,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([223, 384])
tensor([[ 0.0000,  1.6418,  1.0685,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.6418,  1.0685,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.6418,  1.0685,  ...,  0.0000,  0.1810,  0.0000],
        ...,
        [ 0.4988,  1.2504,  0.1897,  ...,  0.0000,  0.1655,  0.0000],
        [ 0.0000,  1.7421,  0.4699,  ...,  0.0000,  0.1655,  0.0000],
        [ 0.7142,  1.4901,  0.0000,  ...,  0.0000,  0.1655,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([223, 384])
tensor([[ 0.5486,  1.4362,  0.0000,  ...,  0.0000,  0.0000,  0.1995],
        [ 0.5486,  1.4362,  0.0000,  ...,  0.0000,  0.0000,  0.1995],
        [ 0.5486,  1.4362,  0.0000,  ...,  0.0000,  0.0000,  0.4283],
        ...,
        [ 0.5886,  0.2663,  0.0000,  ...,  0.0000,  0.8597,  0.0000],
        [ 0.9469,  1.9063,  0.0000,  ...,  0.0000,  0.8597,  0.0000],
        [ 0.7582,  0.0715,  0.0000,  ...,  0.0000,  0.8597,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[-1.3334,  0.8160,  0.6404,  ..., -0.1325,  0.7441, -1.1501],
        [-1.9567, -1.4755, -0.9063,  ...,  1.2661,  1.0757, -0.8646],
        [ 0.2223, -1.3405,  1.6087,  ..., -0.1325,  0.7441, -1.1501],
        ...,
        [-2.0058, -1.0800,  0.1124,  ..., -0.4415,  0.8936, -0.9225],
        [ 1.8401, -0.6283,  1.0464,  ..., -0.4415,  0.8936, -0.9225],
        [ 2.3558, -0.1002,  0.0219,  ..., -0.4415,  0.8936, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.3316,  1.7765,  0.0000,  ...,  0.0000,  0.6912,  1.4398],
        [ 0.5066,  0.6892,  0.0000,  ...,  0.0000,  1.1173,  1.1843],
        [ 0.0000,  0.3899,  0.0000,  ...,  0.0000,  0.6912,  1.4398],
        ...,
        [ 0.8455,  0.4608,  0.0000,  ...,  0.0000,  1.9878,  0.0000],
        [ 0.0000,  1.1997,  0.2256,  ...,  0.0000,  1.9878,  0.0000],
        [ 0.0000,  0.9583,  0.0000,  ...,  0.0000,  1.9878,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  0.0000,  0.2120,  ...,  1.3162,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.0925,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0689,  ...,  1.3162,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0457,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.5094,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.1858,  1.4522,  0.4449,  ...,  0.0000,  0.2481,  0.0000],
        [ 0.7573,  1.2938,  0.0000,  ...,  0.0000,  0.3477,  0.0000],
        [ 0.7901,  1.2782,  0.0000,  ...,  0.0000,  0.2481,  0.0000],
        ...,
        [ 1.3355,  1.2409,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.4494,  1.6545,  0.0066,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.7332,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.8489,  1.1814,  0.0000,  ...,  0.0000,  0.0000,  0.1956],
        [ 0.7087,  0.1419,  0.0000,  ...,  0.0000,  0.0575,  0.1955],
        [ 0.5183,  0.1082,  0.0000,  ...,  0.0000,  0.0000,  0.1956],
        ...,
        [ 0.5277,  0.3473,  0.0000,  ...,  0.0000,  0.5635,  0.0000],
        [ 0.5612,  0.0000,  0.0000,  ...,  0.0000,  0.5635,  0.0000],
        [ 0.5657,  0.0000,  0.0000,  ...,  0.0000,  0.5635,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.0294, -1.2143, -1.0877,  ...,  3.0206,  0.7889,  0.8582],
        [-2.1365,  1.0639,  1.4624,  ...,  1.5098, -0.5654,  0.1436],
        [ 0.5886,  1.0533, -1.0043,  ...,  1.5098, -0.5654,  0.1436],
        ...,
        [-0.9360,  1.3448,  1.5371,  ..., -0.4415,  0.8936, -0.9225],
        [ 2.3558, -0.1002,  0.0219,  ..., -0.4415,  0.8936, -0.9225],
        [ 0.3268, -1.5977, -1.2881,  ..., -0.4415,  0.8936, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.4659,  1.1986,  0.0000,  ...,  0.0000,  1.1343,  1.3666],
        [ 0.8606,  1.3920,  0.9008,  ...,  0.0000,  1.0091,  1.9725],
        [ 0.5737,  1.9506,  0.0000,  ...,  0.0000,  1.0091,  1.9725],
        ...,
        [ 0.3231,  1.2667,  0.0000,  ...,  0.0000,  1.9640,  0.0000],
        [ 0.0000,  0.6830,  0.0000,  ...,  0.0000,  1.9640,  0.0000],
        [ 0.0000,  0.9134,  0.0000,  ...,  0.0000,  1.9640,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.0000,  0.0000,  0.1748,  ...,  0.3653,  0.0000,  0.0000],
        [ 0.0000,  0.2606,  0.0000,  ...,  0.4047,  0.0000,  0.0000],
        [ 0.0000,  0.2104,  0.0000,  ...,  0.4047,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.2935,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1949,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.6859,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.5176,  1.5045,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.4109,  0.5803,  ...,  0.0000,  0.3261,  0.0000],
        [ 0.0000,  1.7764,  1.0325,  ...,  0.0000,  0.3261,  0.0000],
        ...,
        [ 0.0680,  1.1958,  0.0000,  ...,  0.0000,  0.0693,  0.0000],
        [ 0.4204,  1.7187,  0.0000,  ...,  0.0000,  0.0693,  0.0000],
        [ 0.7341,  1.0410,  0.0000,  ...,  0.0000,  0.0693,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.4699,  0.0000,  0.0000,  ...,  0.0000,  0.0504,  0.0000],
        [ 0.6734,  1.0503,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5007,  0.7387,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.2514,  0.1909,  0.0000,  ...,  0.0000,  0.7383,  0.0000],
        [ 0.5033,  0.1717,  0.0000,  ...,  0.0000,  0.7383,  0.0000],
        [ 0.2159,  0.0416,  0.0000,  ...,  0.0000,  0.7383,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([244, 384])
tensor([[-4.0437e-01, -2.8476e-01, -1.9201e+00,  ...,  7.5944e-01,
         -1.3404e+00, -1.3003e+00],
        [-8.5767e-01,  6.5174e-01,  6.6226e-02,  ..., -3.6117e-01,
          7.6542e-02, -1.6633e+00],
        [ 2.9290e-02, -1.2143e+00, -1.0876e+00,  ..., -3.6117e-01,
          7.6542e-02, -1.6633e+00],
        ...,
        [ 2.0915e+00,  1.7860e+00, -1.4911e+00,  ..., -4.4153e-01,
          8.9358e-01, -9.2252e-01],
        [ 2.6891e+00, -5.6206e-01,  1.8777e+00,  ..., -4.4153e-01,
          8.9358e-01, -9.2252e-01],
        [-5.0437e-01,  1.8697e+00,  1.2354e+00,  ..., -4.4153e-01,
          8.9358e-01, -9.2252e-01]], device='cuda:0')
cur_t_vecs
torch.Size([244, 384])
tensor([[ 2.2763,  1.2738,  0.3231,  ...,  0.0000,  0.8791,  1.9731],
        [ 0.4420,  1.1663,  0.0000,  ...,  0.0000,  1.3247,  2.3053],
        [ 0.3741,  2.4750,  0.2514,  ...,  0.0000,  1.3247,  2.3053],
        ...,
        [ 0.9554,  1.2558,  0.0074,  ...,  0.0000,  1.6000,  0.0000],
        [ 1.3421,  0.9149,  0.0148,  ...,  0.0000,  1.6000,  0.0000],
        [ 0.0000,  1.6978,  0.0000,  ...,  0.0000,  1.6000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([244, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.4114,  0.4124,  0.0000],
        [ 0.0000,  0.0000,  0.4945,  ...,  0.5506,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.5506,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3504,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.2005,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([244, 384])
tensor([[ 0.0000,  1.3920,  0.4311,  ...,  0.0000,  0.0355,  0.0000],
        [ 0.9656,  1.3950,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.6970,  0.8365,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.7119,  1.0729,  0.2729,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.7091,  1.1230,  0.2433,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5239,  0.9258,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([244, 384])
tensor([[ 0.6522,  0.6678,  0.0000,  ...,  0.0000,  0.0000,  0.2013],
        [ 0.4489,  0.0546,  0.0000,  ...,  0.0000,  0.0656,  0.0000],
        [ 0.5615,  0.8783,  0.0000,  ...,  0.0000,  0.0656,  0.0000],
        ...,
        [ 0.4970,  0.0572,  0.0000,  ...,  0.0000,  1.0066,  0.0000],
        [ 0.5834,  0.0000,  0.0000,  ...,  0.0000,  1.0066,  0.0000],
        [ 0.4128,  0.2202,  0.0000,  ...,  0.0000,  1.0066,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([218, 384])
tensor([[ 0.1766,  0.3037, -0.6850,  ...,  2.3030,  0.4331,  0.2406],
        [ 0.2029,  0.2293,  1.2472,  ..., -0.6400,  1.4520, -0.9932],
        [ 0.1766,  0.3037, -0.6850,  ...,  2.3030,  0.4331,  0.2406],
        ...,
        [ 1.5832, -1.2370,  0.1144,  ..., -0.4416,  0.8936, -0.9225],
        [ 0.1452,  0.3627, -0.5402,  ..., -0.4416,  0.8936, -0.9225],
        [ 0.2223, -1.3406,  1.6087,  ..., -0.4416,  0.8936, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([218, 384])
tensor([[ 0.5789,  1.2466,  0.1925,  ...,  0.0000,  2.3659,  0.6568],
        [ 1.1003,  1.6078,  0.0000,  ...,  0.0154,  1.1732,  1.3770],
        [ 0.5789,  1.2466,  0.1925,  ...,  0.0000,  2.3659,  0.6568],
        ...,
        [ 0.1259,  1.8106,  0.0000,  ...,  0.0000,  1.8597,  0.0000],
        [ 0.2632,  0.0539,  0.0000,  ...,  0.0000,  1.8597,  0.0000],
        [ 0.5486,  0.8779,  0.0000,  ...,  0.0000,  1.8597,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([218, 384])
tensor([[ 0.0000,  0.0000,  0.3805,  ...,  0.9007,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  1.3392,  ...,  1.2743,  0.0994,  0.0000],
        [ 0.0000,  0.0000,  0.3805,  ...,  0.9007,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.1992,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3738,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([218, 384])
tensor([[ 0.2069,  1.1407,  0.1167,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2910,  1.2761,  0.0000,  ...,  0.0000,  0.0000,  0.3026],
        [ 0.2069,  1.1407,  0.1167,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  1.8020,  0.4259,  ...,  0.0000,  0.1722,  0.0000],
        [ 0.9586,  1.1987,  0.0000,  ...,  0.0000,  0.1722,  0.0000],
        [ 0.2927,  1.7484,  0.0000,  ...,  0.0000,  0.1722,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([218, 384])
tensor([[ 0.6719,  0.5363,  0.0000,  ...,  0.0000,  0.0193,  0.1029],
        [ 0.4042,  0.1276,  0.0000,  ...,  0.0000,  0.0000,  0.3616],
        [ 0.6719,  0.5363,  0.0000,  ...,  0.0000,  0.0193,  0.1029],
        ...,
        [ 0.5518,  0.5906,  0.0000,  ...,  0.0000,  0.8979,  0.0000],
        [ 0.7563,  0.0000,  0.0000,  ...,  0.0000,  0.8979,  0.0000],
        [ 0.5612,  0.2961,  0.0000,  ...,  0.0000,  0.8979,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.5420, -0.1171,  0.4111,  ...,  1.5098, -0.5654,  0.1436],
        [ 0.0292, -1.2143, -1.0876,  ...,  1.2661,  1.0757, -0.8647],
        [ 0.0292, -1.2143, -1.0876,  ...,  1.2661,  1.0757, -0.8647],
        ...,
        [ 0.1452,  0.3627, -0.5402,  ..., -0.4416,  0.8936, -0.9225],
        [-0.9307,  0.1467,  0.9025,  ..., -0.4416,  0.8936, -0.9225],
        [-0.2265, -0.1825,  0.2312,  ..., -0.4416,  0.8936, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  3.0128,  0.4127,  ...,  0.0000,  1.6913,  2.3390],
        [ 0.4604,  1.1053,  0.0000,  ...,  0.0000,  1.6321,  0.4534],
        [ 0.4604,  1.1053,  0.0000,  ...,  0.0000,  1.6321,  0.4534],
        ...,
        [ 0.0000,  2.4410,  1.8054,  ...,  0.0000,  1.4609,  0.0000],
        [ 0.1636,  0.9056,  0.1536,  ...,  0.0000,  1.4609,  0.0000],
        [ 0.0000,  1.6248,  0.0000,  ...,  0.0000,  1.4609,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  0.3199,  0.0000,  ...,  1.1271,  0.0011,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4957,  0.4755,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4957,  0.4755,  0.0000],
        ...,
        [ 0.0000,  0.5975,  0.0000,  ...,  0.0534,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0534,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0534,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  1.5095,  0.2153,  ...,  0.0000,  0.3876,  0.8139],
        [ 0.3068,  1.2177,  0.0086,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3068,  1.2177,  0.0086,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  2.3477,  1.1528,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.0341,  1.4421,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.9236,  1.3094,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.5046,  0.7901,  0.0000,  ...,  0.0000,  0.0000,  0.4757],
        [ 0.2536,  0.2307,  0.0000,  ...,  0.0000,  0.1017,  0.0000],
        [ 0.2536,  0.2307,  0.0000,  ...,  0.0000,  0.1017,  0.0000],
        ...,
        [ 1.1017,  0.7041,  0.0000,  ...,  0.0000,  1.0366,  0.0000],
        [ 0.1155,  0.0000,  0.0000,  ...,  0.0000,  1.0366,  0.0000],
        [ 0.2667,  0.0000,  0.0000,  ...,  0.0000,  1.0366,  0.0000]], device='cuda:0')
t = 10 / 1000000
 G [bbox_pred]: 2.3477
 G [g_gan_img_loss]: 0.0070
 G [L1_pixel_loss]: 0.9968
 G [total_loss]: 3.7536
 G [g_gan_obj_loss]: 0.0073
 G [ac_loss]: 0.3947
 D_obj [d_obj_gan_loss]: 1.3783
 D_obj [d_ac_loss_real]: 3.9846
 D_obj [d_ac_loss_fake]: 3.947481035b
529944e
91263a
49286d
404395b
195894e
233869d
299643b
302576c
396369b
518918b
207573a
346915c
522235a
233112e
349527d
349153c
6421c
92107d
522489d
488980a
6710a
414212a
474105b
126808e
58979c
160152a
545257e
10138e
535265c
560563d
477468a
576526e
257951c
245242c
176726c
135989c
103582a
109568a
452459c
404271d
400999a
90869b
432627d
61202b
154597e
306127c
43171d
238712c
75362a
438267e
246099a
142587b
327536c
76802b
324740d
127750c
367605a
332292c
260109a
327813a
569174b
570579a
438899c
107108a
78286b
392476a
269015d
42704a
4764e
329151a
208585b
110777e
493485a
146120b
502557d
485491e
507148b
113619d
412992d
150354d
397938a
132516a
103575d
480576d
244122d
134597e
412384d
208267a
107620e
131374d
165299d
274424a
324611a
459110b
278899b
557434a
295693b
553401b
139789e
377278b
515300d
416188a
408946a
323479a
289100a
529352e
144371b
472320a
245534b
282978b
572042e
183539b
546261e
310518e
531778b
37291d
218886e
400848e
13576e
485064e
159199a
525273e
237859c
250724b
101426a
217720d
289172d
102421d
261664e
323129a
242167b
353982b
254589a
102834e
569602c
313608d
39716b
316353e
26747c
455877a
230570b
389772d
59582d
288313e
511143a
188498c
533452e
217135c
171309a
393647a
20087d
505642a
150594d
443086d
104537e
521995d
288921b
243796d
71631c
223420c
4761e
390298c
31442c
2477b
550278a
540926b
293576a
88325e
5383d
485368b
554319c
488583b
279345a
388923b
308803a
85549b
500982b
572147e
308295c
21531c
468751d
441816e
187803e
545929c
462929c
127450a
295850e
215612c
189187a
491558e
167126b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
89707e
163829e
459208b
573149e
132860e
346724d
189648b
283809a
213530e
174303b
426880c
14798d
167995e
494795d
457086c
60378b
549098e
84896e
400850e
52324b
522704b
466134b
302397b
163412b
285651a
463168c
208347b
53464b
330954d
409754e
221633e
478805d
101877c
517417b
66309b
524924d
23176c
431997e
259853a
340897e
367442b
6075a
28349d
22658d
214873b
297009a
153574c
581061b
364571b
126204e
320537b
134849b
96067b
509514e
543224b
43742e
97170c
47909e
344025a
285357c
455902d
520389c
322121b
177381e
30958c
331302b
152245e
185963c
24026a
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
119761c
363190c
3001a
327413b
194050c
385540c
557408d
159403e
168417b
248591a
84815e
276694e
454044a
137339b
169395c
47774c
355175a
577712e
173565d
103558b
11690a
157356a
18155c
509267e
444399d
113019c
566547e
191690d
20291d
216026b
310564d
457448d
217991b
197029b
555800d
39360d
295491a
578119d
257713b
359164c
568677b
121172a
567305a
365027d
354938e
241178a
189033e
336854d
173814c
96728b
312359c
167074b
224629e
10082e
84034b
71737d
134413c
210266a
170687a
13595b
102609d
428304c
552461b
277346a
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

 D_img [d_img_gan_loss]: 1.3904
cur_t_vecs
torch.Size([36, 384])
tensor([[ 0.0291, -1.2143, -1.0876,  ..., -0.1323,  0.7443, -1.1503],
        [ 0.2223, -1.3407,  1.6086,  ...,  1.5098, -0.5655,  0.1436],
        [-1.9568, -1.4755, -0.9062,  ...,  1.2661,  1.0757, -0.8647],
        ...,
        [ 2.6893, -0.5621,  1.8776,  ..., -0.4416,  0.8936, -0.9225],
        [ 2.3558, -0.1005,  0.0218,  ..., -0.4416,  0.8936, -0.9225],
        [ 0.0291, -1.2143, -1.0876,  ..., -0.4416,  0.8936, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([36, 384])
tensor([[ 0.1387,  1.2333,  0.1574,  ...,  0.0000,  0.7751,  2.7708],
        [ 0.3125,  0.9535,  0.0000,  ...,  0.0000,  2.1034,  2.3835],
        [ 0.4784,  1.1036,  0.0000,  ...,  0.9523,  0.8822,  2.1508],
        ...,
        [ 0.0470,  1.7198,  0.0889,  ...,  0.0000,  2.2780,  0.0000],
        [ 0.3971,  2.0850,  0.3008,  ...,  0.0000,  2.2780,  0.0000],
        [ 0.9700,  2.1358,  0.0000,  ...,  0.0000,  2.2780,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([36, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.6102,  0.1822,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.3605,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.5126,  0.2332,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1743,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([36, 384])
tensor([[ 0.5095,  1.1300,  0.0000,  ...,  0.0000,  0.0328,  0.1961],
        [ 0.0911,  1.1505,  0.0000,  ...,  0.0000,  0.2112,  0.7047],
        [ 0.0699,  1.0774,  0.0000,  ...,  0.0000,  0.0000,  0.6248],
        ...,
        [ 0.7095,  1.1220,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2660,  1.9279,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.7254,  0.4517,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([36, 384])
tensor([[ 0.3800,  0.0646,  0.0000,  ...,  0.0000,  0.0000,  0.2920],
        [ 0.3739,  0.1430,  0.0000,  ...,  0.0000,  0.0000,  0.4403],
        [ 0.5306,  0.1469,  0.0000,  ...,  0.0000,  0.0000,  0.3710],
        ...,
        [ 0.7252,  0.0000,  0.0000,  ...,  0.0000,  0.6658,  0.0000],
        [ 0.3139,  0.1556,  0.0000,  ...,  0.0000,  0.6658,  0.0000],
        [ 0.5428,  0.7061,  0.0000,  ...,  0.0000,  0.6658,  0.0000]], device='cuda:0')
Starting epoch 2
cur_t_vecs
torch.Size([227, 384])
tensor([[ 1.8402, -0.6285,  1.0465,  ..., -0.7712, -0.1388,  0.4058],
        [ 0.0291, -1.2143, -1.0876,  ..., -0.7712, -0.1388,  0.4058],
        [ 1.8402, -0.6285,  1.0465,  ...,  1.5098, -0.5655,  0.1436],
        ...,
        [ 0.0291, -1.2143, -1.0876,  ..., -0.4416,  0.8935, -0.9225],
        [-2.0058, -1.0803,  0.1124,  ..., -0.4416,  0.8935, -0.9225],
        [-0.7138, -3.5682, -0.0958,  ..., -0.4416,  0.8935, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.1844,  1.8811,  1.1297,  ...,  0.0000,  1.7594,  2.0816],
        [ 0.3811,  0.8318,  0.1827,  ...,  0.0000,  1.7594,  2.0816],
        [ 0.1844,  1.8811,  1.1297,  ...,  0.0000,  2.5593,  1.4949],
        ...,
        [ 0.0000,  1.1797,  0.0000,  ...,  0.0000,  1.8576,  0.0000],
        [ 0.0000,  0.1474,  0.0000,  ...,  0.0000,  1.8576,  0.0000],
        [ 0.0000,  1.9042,  1.0034,  ...,  0.0000,  1.8576,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.6658,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0371,  ...,  0.6658,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.2672,  0.0694,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.4231,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  1.7218,  0.1428,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3475,  1.5130,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.7218,  0.1428,  ...,  0.0000,  0.0417,  0.3968],
        ...,
        [ 0.4432,  1.2173,  0.0000,  ...,  0.0000,  0.0958,  0.0000],
        [ 1.1654,  1.3083,  0.0000,  ...,  0.0000,  0.0958,  0.0000],
        [ 0.0000,  1.8976,  0.2827,  ...,  0.0000,  0.0958,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.6227,  0.6312,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2047,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.6227,  0.6312,  0.0000,  ...,  0.0000,  0.0000,  0.1669],
        ...,
        [ 0.1636,  0.0000,  0.0000,  ...,  0.0000,  0.8989,  0.0000],
        [ 0.6328,  0.2688,  0.0000,  ...,  0.0000,  0.8989,  0.0000],
        [ 0.3171,  0.5792,  0.0000,  ...,  0.0000,  0.8989,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([246, 384])
tensor([[-0.4044, -0.2847, -1.9201,  ..., -1.3507, -0.7485, -0.9145],
        [ 0.4666, -0.1968, -0.7167,  ..., -0.5398,  0.3694,  0.2842],
        [ 0.0291, -1.2143, -1.0876,  ..., -0.5398,  0.3694,  0.2842],
        ...,
        [ 0.2070,  0.8226, -0.6245,  ..., -0.4416,  0.8935, -0.9225],
        [ 0.0291, -1.2143, -1.0876,  ..., -0.4416,  0.8935, -0.9225],
        [ 0.2223, -1.3409,  1.6086,  ..., -0.4416,  0.8935, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.2699,  0.0000,  0.5280,  ...,  0.9904,  2.2208,  2.1159],
        [ 0.4712,  1.6725,  0.0000,  ...,  0.0000,  0.9564,  1.9382],
        [ 0.7917,  1.4558,  0.0000,  ...,  0.0000,  0.9564,  1.9382],
        ...,
        [ 0.0000,  1.2234,  0.4818,  ...,  0.0000,  1.4759,  0.0000],
        [ 0.0000,  1.3821,  0.0000,  ...,  0.0000,  1.4759,  0.0000],
        [ 0.0000,  0.8320,  0.0000,  ...,  0.0000,  1.4759,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.0000,  0.0000,  0.0293,  ...,  1.6393,  0.3709,  0.0000],
        [ 0.0000,  0.0000,  0.1180,  ...,  0.8207,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.8207,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1395,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.7067,  1.3852,  0.0000,  ...,  0.0000,  0.3756,  0.8167],
        [ 0.2032,  0.7920,  0.0000,  ...,  0.0000,  0.0000,  0.0199],
        [ 0.0000,  1.1448,  0.4737,  ...,  0.0000,  0.0000,  0.0199],
        ...,
        [ 0.2750,  0.7344,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1092,  0.7969,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.4944,  0.8664,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.5450,  0.0535,  0.0000,  ...,  0.0000,  0.0000,  0.2080],
        [ 0.2953,  0.0469,  0.0000,  ...,  0.0000,  0.0000,  0.1261],
        [ 0.4106,  0.5112,  0.0000,  ...,  0.0000,  0.0000,  0.1261],
        ...,
        [ 0.2326,  0.2257,  0.0000,  ...,  0.0000,  0.8288,  0.0000],
        [ 0.2653,  0.1327,  0.0000,  ...,  0.0000,  0.8288,  0.0000],
        [ 0.2568,  0.0000,  0.0000,  ...,  0.0000,  0.8288,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0291, -1.2143, -1.0876,  ..., -0.4601,  0.5026, -0.5984],
        [ 0.0291, -1.2143, -1.0876,  ...,  2.3029,  0.4330,  0.2405],
        [-1.6885,  1.2641, -0.6905,  ...,  2.3029,  0.4330,  0.2405],
        ...,
        [ 2.3559, -0.1005,  0.0217,  ..., -0.4416,  0.8935, -0.9225],
        [ 1.8402, -0.6285,  1.0464,  ..., -0.4416,  0.8935, -0.9225],
        [ 0.0291, -1.2143, -1.0876,  ..., -0.4416,  0.8935, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.3261,  1.8548,  0.0000,  ...,  0.8598,  1.4740,  2.8344],
        [ 0.3261,  1.8548,  0.0000,  ...,  0.0000,  2.3180,  0.4337],
        [ 0.3698,  0.3085,  0.4864,  ...,  0.0000,  2.3180,  0.4337],
        ...,
        [ 0.0000,  1.9719,  0.0000,  ...,  0.0000,  2.2313,  0.0000],
        [ 0.2249,  2.0344,  1.7309,  ...,  0.0000,  2.2313,  0.0000],
        [ 0.0000,  0.6014,  0.0000,  ...,  0.0000,  2.2313,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  0.0000,  0.1406,  ...,  1.5533,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1406,  ...,  0.9225,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.9225,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.1061,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2635,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.6967,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  1.1908,  0.1376,  ...,  0.0000,  0.0000,  0.4095],
        [ 0.0000,  1.1908,  0.1376,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.7647,  1.2848,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  1.2311,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.6937,  0.0154,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.0043,  0.7511,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.2011,  0.3464,  0.0000,  ...,  0.0000,  0.0000,  0.1482],
        [ 0.2011,  0.3464,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1492,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.2612,  0.1919,  0.0000,  ...,  0.0000,  0.4807,  0.0000],
        [ 0.3136,  0.6089,  0.0000,  ...,  0.0000,  0.4807,  0.0000],
        [ 0.4623,  0.0000,  0.0000,  ...,  0.0000,  0.4807,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.9747,  0.2222,  0.9208,  ...,  1.5097, -0.5655,  0.1437],
        [ 0.0291, -1.2143, -1.0876,  ..., -0.4943,  1.5485, -0.4593],
        [-0.9305,  0.1467,  0.9023,  ...,  1.4452, -0.1640,  1.2184],
        ...,
        [-0.7138, -3.5682, -0.0958,  ..., -0.4416,  0.8935, -0.9225],
        [ 2.6893, -0.5621,  1.8774,  ..., -0.4416,  0.8935, -0.9225],
        [ 0.0291, -1.2143, -1.0876,  ..., -0.4416,  0.8935, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.9618,  0.0000,  ...,  0.0000,  1.6334,  2.5105],
        [ 0.0000,  1.4022,  0.0000,  ...,  0.0000,  1.1102,  2.3865],
        [ 0.0000,  1.4437,  0.0000,  ...,  0.0844,  1.2449,  2.2977],
        ...,
        [ 0.0000,  0.8261,  1.3745,  ...,  0.0000,  1.9288,  0.0000],
        [ 1.5709,  2.0433,  0.5723,  ...,  0.0000,  1.9288,  0.0000],
        [ 0.0000,  0.0147,  0.0000,  ...,  0.0000,  1.9288,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.0000,  0.1419,  ...,  1.3920,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.4244,  ...,  0.8363,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.7871,  0.6002,  0.0000],
        ...,
        [ 0.0000,  0.2057,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.4275,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.2186,  0.9241,  0.0000,  ...,  0.0000,  0.1690,  0.3895],
        [ 0.3304,  0.8167,  0.0000,  ...,  0.0000,  0.0292,  0.5730],
        [ 0.5267,  1.2409,  0.0000,  ...,  0.0000,  0.0750,  0.3854],
        ...,
        [ 0.6657,  1.6718,  0.0000,  ...,  0.0000,  0.1197,  0.0000],
        [ 0.0000,  1.9521,  0.3471,  ...,  0.0000,  0.1197,  0.0000],
        [ 1.0764,  1.1395,  0.0000,  ...,  0.0000,  0.1197,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.1372,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.4207],
        [ 0.1836,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.4042],
        [ 0.2870,  0.0265,  0.0000,  ...,  0.0000,  0.0000,  0.3134],
        ...,
        [ 0.4053,  0.0000,  0.0000,  ...,  0.0000,  0.7369,  0.0000],
        [ 0.4611,  0.5217,  0.0000,  ...,  0.0000,  0.7369,  0.0000],
        [ 0.7071,  0.0000,  0.0000,  ...,  0.0000,  0.7369,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 1.9138e+00, -1.1249e+00,  1.9255e+00,  ...,  2.6211e-01,
          8.8335e-01, -2.2527e-01],
        [ 1.8402e+00, -6.2852e-01,  1.0464e+00,  ..., -3.6202e+00,
         -1.1000e-01, -6.5996e-01],
        [-1.0168e+00, -8.8007e-01,  2.0810e+00,  ...,  2.6211e-01,
          8.8335e-01, -2.2527e-01],
        ...,
        [ 2.2221e-01, -1.3410e+00,  1.6085e+00,  ..., -4.4165e-01,
          8.9353e-01, -9.2247e-01],
        [ 2.3559e+00, -1.0052e-01,  2.1678e-02,  ..., -4.4165e-01,
          8.9353e-01, -9.2247e-01],
        [ 5.8873e-01,  1.0537e+00, -1.0046e+00,  ..., -4.4165e-01,
          8.9353e-01, -9.2247e-01]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.3770,  0.9843,  0.0000,  ...,  0.0000,  1.7282,  1.0806],
        [ 0.0000,  1.6881,  1.2394,  ...,  0.0026,  1.6586,  1.8225],
        [ 0.0000,  1.2558,  0.0588,  ...,  0.0000,  1.7282,  1.0806],
        ...,
        [ 0.0000,  0.8477,  0.0000,  ...,  0.0000,  2.2870,  0.0000],
        [ 0.0000,  1.1152,  0.0000,  ...,  0.0000,  2.2870,  0.0000],
        [ 0.2699,  1.2815,  0.1365,  ...,  0.0000,  2.2870,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.1335,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.0100,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1335,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.2644,  ...,  0.0685,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0685,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3537,  ...,  0.0685,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.7698,  1.1200,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.3326,  0.0000,  ...,  0.0000,  0.2406,  0.4326],
        [ 0.3426,  0.8226,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.6306,  1.1072,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3192,  1.5400,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5508,  1.2647,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.2669,  0.0305,  0.0000,  ...,  0.0000,  0.0000,  0.2694],
        [ 0.2578,  0.3477,  0.0000,  ...,  0.0000,  0.0000,  0.4111],
        [ 0.3911,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.2694],
        ...,
        [ 0.3539,  0.0000,  0.0000,  ...,  0.0000,  0.6962,  0.0000],
        [ 0.1091,  0.0000,  0.0000,  ...,  0.0000,  0.6962,  0.0000],
        [ 0.3950,  0.1755,  0.0000,  ...,  0.0000,  0.6962,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[-0.9943, -1.1120, -0.0072,  ..., -1.7535, -0.3835,  0.1107],
        [ 0.0290, -1.2143, -1.0876,  ..., -1.7535, -0.3835,  0.1107],
        [-0.9943, -1.1120, -0.0072,  ...,  1.5097, -0.5655,  0.1437],
        ...,
        [-1.3333,  0.8157,  0.6407,  ..., -0.4416,  0.8935, -0.9225],
        [-1.9568, -1.4754, -0.9063,  ..., -0.4416,  0.8935, -0.9225],
        [ 0.3798,  0.0697, -1.1170,  ..., -0.4416,  0.8935, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.2492,  1.2336,  0.0000,  ...,  0.0508,  0.1088,  2.4550],
        [ 0.1631,  1.7408,  0.0000,  ...,  0.0000,  0.2240,  1.7880],
        [ 0.0000,  1.1526,  0.3526,  ...,  0.0000,  1.5661,  2.4226],
        ...,
        [ 0.0000,  1.0672,  0.0000,  ...,  0.0000,  1.7398,  0.0000],
        [ 0.0000,  0.8127,  0.2010,  ...,  0.0000,  1.7398,  0.0000],
        [ 0.0000,  1.4294,  0.1693,  ...,  0.0000,  1.7398,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.0975,  0.8434,  0.0000],
        [ 0.0000,  0.0911,  0.0058,  ...,  1.0481,  0.9308,  0.0000],
        [ 0.0000,  0.0133,  0.0000,  ...,  1.5399,  0.1657,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.1016,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0455,  ...,  0.1016,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.1016,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.3638,  1.2215,  0.0000,  ...,  0.0000,  0.0000,  0.5335],
        [ 0.5367,  0.9319,  0.0000,  ...,  0.0000,  0.0000,  0.7927],
        [ 0.2515,  0.9635,  0.0000,  ...,  0.0000,  0.0000,  0.6524],
        ...,
        [ 0.3487,  1.0238,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5668,  1.3359,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.0228,  1.3769,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.1943,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.2584],
        [ 0.1096,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.4141],
        [ 0.2200,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.3721],
        ...,
        [ 0.4315,  0.0000,  0.0000,  ...,  0.0000,  0.7379,  0.0000],
        [ 0.6450,  0.0932,  0.0000,  ...,  0.0000,  0.7379,  0.0000],
        [ 0.8529,  0.0000,  0.0000,  ...,  0.0000,  0.7379,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[-5.0392e-01,  1.8693e+00,  1.2350e+00,  ...,  2.4972e+00,
          8.7388e-01, -1.2570e+00],
        [ 1.7657e-01,  3.0358e-01, -6.8506e-01,  ...,  1.8969e+00,
          1.2868e+00, -5.5793e-01],
        [ 1.7657e-01,  3.0358e-01, -6.8506e-01,  ...,  7.5978e-01,
         -1.3402e+00, -1.3001e+00],
        ...,
        [ 1.5831e+00, -1.2371e+00,  1.1428e-01,  ..., -4.4165e-01,
          8.9355e-01, -9.2248e-01],
        [ 2.6893e+00, -5.6204e-01,  1.8774e+00,  ..., -4.4165e-01,
          8.9355e-01, -9.2248e-01],
        [ 2.2215e-01, -1.3411e+00,  1.6085e+00,  ..., -4.4165e-01,
          8.9355e-01, -9.2248e-01]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  1.7180,  0.0000,  ...,  0.0000,  1.6582,  2.6461],
        [ 0.8119,  2.3396,  0.7987,  ...,  0.0000,  2.1485,  2.3523],
        [ 0.8119,  2.3396,  0.7987,  ...,  0.0000,  1.3099,  2.1583],
        ...,
        [ 0.6563,  2.2936,  0.4445,  ...,  0.0000,  2.0038,  0.0000],
        [ 0.4286,  0.8905,  0.0000,  ...,  0.0000,  2.0038,  0.0000],
        [ 0.1613,  0.8874,  0.3554,  ...,  0.0000,  2.0038,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  0.0000,  0.3799,  ...,  1.4507,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.5174,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.9529,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.6950,  0.9188,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.7415,  0.1957,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.7415,  0.1957,  ...,  0.0000,  0.0000,  0.4862],
        ...,
        [ 0.0000,  0.9445,  0.1023,  ...,  0.0000,  0.2019,  0.0000],
        [ 0.5904,  0.9628,  0.0000,  ...,  0.0000,  0.2019,  0.0000],
        [ 0.5624,  1.1789,  0.0000,  ...,  0.0000,  0.2019,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.3787,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5025,  0.4677,  0.0000,  ...,  0.0000,  0.0000,  0.1900],
        [ 0.5025,  0.4677,  0.0000,  ...,  0.0000,  0.0000,  0.1631],
        ...,
        [ 0.1817,  0.3889,  0.0000,  ...,  0.0000,  0.7698,  0.0000],
        [ 0.1888,  0.0000,  0.0000,  ...,  0.0000,  0.7698,  0.0000],
        [ 0.2376,  0.0000,  0.0000,  ...,  0.0000,  0.7698,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.2221, -1.3411,  1.6085,  ...,  1.5097, -0.5655,  0.1436],
        [ 0.1448,  0.3627, -0.5404,  ...,  1.2664,  1.0758, -0.8648],
        [ 0.1448,  0.3627, -0.5404,  ...,  1.2664,  1.0758, -0.8648],
        ...,
        [ 1.6694, -1.0929, -0.3148,  ..., -0.4417,  0.8936, -0.9225],
        [ 2.6893, -0.5620,  1.8773,  ..., -0.4417,  0.8936, -0.9225],
        [ 0.1766,  0.3036, -0.6851,  ..., -0.4417,  0.8936, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.0000,  0.2259,  0.0000,  ...,  0.0000,  1.7820,  2.2206],
        [ 0.0000,  1.5098,  2.1839,  ...,  0.0000,  2.0450,  0.8898],
        [ 0.0000,  1.5098,  2.1839,  ...,  0.0000,  2.0450,  0.8898],
        ...,
        [ 0.0000,  0.2824,  0.0000,  ...,  0.0000,  1.8712,  0.0000],
        [ 0.8991,  1.8807,  0.7806,  ...,  0.0000,  1.8712,  0.0000],
        [ 0.2461,  2.3057,  1.3324,  ...,  0.0000,  1.8712,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.9022,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.7951,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.7951,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.4079,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0905,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.7938,  1.3954,  0.0000,  ...,  0.0000,  0.0305,  0.1321],
        [ 0.0000,  2.6570,  0.1424,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.6570,  0.1424,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 1.1727,  1.4675,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.3393,  0.2337,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0372,  1.2435,  0.2170,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.2389,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0479],
        [ 0.7998,  0.6549,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.7998,  0.6549,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.6612,  0.0000,  0.0000,  ...,  0.0000,  0.8614,  0.0000],
        [ 0.2439,  0.3196,  0.0000,  ...,  0.0000,  0.8614,  0.0000],
        [ 0.0412,  0.6752,  0.0000,  ...,  0.0000,  0.8614,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[-1.6886,  1.2642, -0.6904,  ...,  0.3603,  0.5161,  2.6843],
        [ 0.0289, -1.2143, -1.0876,  ...,  0.3603,  0.5161,  2.6843],
        [ 0.0289, -1.2143, -1.0876,  ..., -0.4600,  0.5026, -0.5984],
        ...,
        [ 1.6693, -1.0929, -0.3148,  ..., -0.4417,  0.8935, -0.9225],
        [ 0.4660,  0.0519,  1.4770,  ..., -0.4417,  0.8935, -0.9225],
        [ 0.2168, -1.4107,  1.5511,  ..., -0.4417,  0.8935, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.0000,  0.3206,  0.0000,  ...,  0.0000,  1.1759,  0.7895],
        [ 0.0000,  1.2010,  0.0000,  ...,  0.0000,  1.1759,  0.7895],
        [ 0.0000,  1.2010,  0.0000,  ...,  0.1520,  1.5805,  2.9738],
        ...,
        [ 0.2246,  1.8566,  0.0000,  ...,  0.0000,  2.0528,  0.0000],
        [ 0.2450,  1.0727,  0.3518,  ...,  0.0000,  2.0528,  0.0000],
        [ 0.1818,  1.2437,  0.6090,  ...,  0.0000,  2.0528,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.8858,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.8858,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.5683,  0.5520,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.2442,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.8241,  0.9266,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1519,  0.9278,  0.0005,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1519,  0.9278,  0.0005,  ...,  0.0000,  0.0000,  0.3018],
        ...,
        [ 0.2543,  0.7221,  0.0000,  ...,  0.0000,  0.0731,  0.0000],
        [ 0.5621,  0.9714,  0.0000,  ...,  0.0000,  0.0731,  0.0000],
        [ 1.1682,  0.8098,  0.0000,  ...,  0.0000,  0.0731,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.4182,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2974,  0.5423,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2974,  0.5423,  0.0000,  ...,  0.0000,  0.0000,  0.2551],
        ...,
        [ 0.4019,  0.0000,  0.0000,  ...,  0.0000,  0.6165,  0.0000],
        [ 0.2985,  0.0000,  0.0000,  ...,  0.0000,  0.6165,  0.0000],
        [ 0.4565,  0.0000,  0.0000,  ...,  0.0000,  0.6165,  0.0000]], device='cuda:0')
t = 20 / 1000000
 G [bbox_pred]: 2.1094
 G [g_gan_img_loss]: 0.0071
 G [L1_pixel_loss]: 0.9741
 G [total_loss]: 3.4307
 G [g_gan_obj_loss]: 0.0071
 G [ac_loss]: 0.3329
 D_obj [d_obj_gan_loss]: 1.3579
 D_obj [d_ac_loss_real]: 3.4116
 D_obj [d_ac_loss_fake]: 3.3291
 D_img [d_img_gan_loss]: 1.3738
cur_t_vecs
torch.Size([232, 384])
tensor([[ 1.6893e-01,  3.7558e-01, -5.9799e-01,  ...,  2.3030e+00,
          4.3308e-01,  2.4053e-01],
        [ 1.6893e-01,  3.7558e-01, -5.9799e-01,  ...,  2.3030e+00,
          4.3308e-01,  2.4053e-01],
        [ 2.3559e+00, -1.0061e-01,  2.1663e-02,  ...,  2.0331e+00,
         -1.9298e+00,  6.8203e-01],
        ...,
        [ 4.5536e-01,  1.7177e+00,  5.7935e-01,  ..., -4.4168e-01,
          8.9353e-01, -9.2245e-01],
        [ 2.3559e+00, -1.0061e-01,  2.1663e-02,  ..., -4.4168e-01,
          8.9353e-01, -9.2245e-01],
        [-5.0377e-01,  1.8692e+00,  1.2348e+00,  ..., -4.4168e-01,
          8.9353e-01, -9.2245e-01]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  1.4605,  0.0000,  ...,  0.0000,  2.1231,  1.5978],
        [ 0.0593,  0.8750,  0.0000,  ...,  0.0000,  2.1231,  1.5978],
        [ 0.0000,  0.3835,  0.0000,  ...,  0.0000,  1.4125,  1.6369],
        ...,
        [ 1.2468,  1.2776,  0.6940,  ...,  0.0000,  2.4903,  0.0000],
        [ 0.0000,  0.6631,  0.0272,  ...,  0.0000,  2.4903,  0.0000],
        [ 0.0000,  2.0516,  0.0000,  ...,  0.0000,  2.4903,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.0000,  0.1867,  ...,  1.2717,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.2717,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1586,  ...,  0.9563,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.5207,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.7511,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.6492,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  1.6006,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.8413,  1.0248,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.8303,  0.9767,  0.0000,  ...,  0.0000,  0.0931,  0.0000],
        ...,
        [ 0.5306,  0.7849,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.8855,  1.4666,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3189,  0.9144,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.3152,  0.1919,  0.0000,  ...,  0.0000,  0.0000,  0.0308],
        [ 0.4635,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0308],
        [ 0.6113,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.1918],
        ...,
        [ 0.2525,  0.0826,  0.0000,  ...,  0.0000,  0.4036,  0.0000],
        [ 0.4836,  0.0000,  0.0000,  ...,  0.0000,  0.4036,  0.0000],
        [ 0.3849,  0.0734,  0.0000,  ...,  0.0000,  0.4036,  0.0000]], device='cuda:0')522235a
400848e
103558b
488980a
3001a
349153c
238712c
367605a
43171d
488583b
330954d
297009a
214873b
278899b
557408d
438267e
389772d
210266a
213530e
102421d
92107d
282978b
552461b
52324b
187803e
432627d
71631c
494795d
306127c
444399d
191690d
545929c
4761e
269015d
554319c
42704a
578119d
31442c
302576c
224629e
237859c
173565d
397938a
121172a
279345a
13576e
573149e
261664e
113019c
388923b
324740d
567305a
28349d
173814c
355175a
13595b
132516a
295693b
517417b
248591a
233869d
142587b
71737d
346915c
90869b
553401b
393647a
163829e
455877a
195894e
452459c
310518e
97170c
478805d
6421c
518918b
509514e
289172d
485368b
58979c
171309a
102609d
396369b
455902d
185963c
457086c
135989c
285357c
107620e
113619d
443086d
308295c
525273e
431997e
462929c
84034b
257951c
316353e
365027d
208347b
560563d
409754e
493485a
310564d
293576a
101426a
81035b
428304c
404271d
152245e
215612c
545257e
557434a
377278b
21531c
522489d
491558e
66309b
327413b
20291d
208267a
416188a
295491a
463168c
43742e
244122d
216026b
531778b
170687a
520389c
169395c
221633e
18155c
134413c
217135c
472320a
570579a
323129a
24026a
167126b
546261e
75362a
91263a
39360d
509267e
336854d
577712e
246099a
243796d
223420c
150594d
107108a
146120b
400999a
245242c
245534b
137339b
177381e
299643b
39716b
159403e
257713b
344025a
543224b
354938e
103582a
167995e
295850e
468751d
217720d
566547e
363190c
217991b
102834e
511143a
555800d
569174b
157356a
103575d
572042e
104537e
4764e
400850e
176726c
167074b
233112e
230570b
327536c
144371b
457448d
218886e
207573a
53464b
515300d
329151a
109568a
254589a
308803a
47909e
441816e
101877c
485064e
84896e
30958c
364571b
289100a
346724d
60378b
302397b
529944e
189187a
61202b
159199a
150354d
412384d
274424a
569602c
126808e
502557d
285651a
242167b
2477b
96728b
572147e
84815e
119761c
10082e
6710a
414212a
485491e
533452e
404395b
23176c
454044a
323479a
474105b
127750c
459110b
327813a
197029b
134849b
153574c
131374d
390298c
288921b
59582d
288313e
412992d
208585b
14798d
438899c
89707e
10138e
241178a
459208b
132860e
521995d
189648b
349527d
408946a
126204e
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
88325e
154597e
507148b
194050c
480576d
367442b
250724b
22658d
392476a
477468a
127450a
550278a
134597e
160152a
466134b
332292c
331302b
37291d
20087d
535265c
188498c
283809a
359164c
385540c
313608d
47774c
324611a
6075a
189033e
165299d
522704b
505642a
85549b
259853a
49286d
322121b
78286b
174303b
549098e
183539b
500982b
312359c
529352e
110777e
353982b
340897e
163412b
524924d
11690a
26747c
581061b
576526e
76802b
5383d
568677b
276694e
426880c
168417b
320537b
540926b
139789e
277346a
260109a
96067b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_t_vecs
torch.Size([42, 384])
tensor([[ 1.8402, -0.6286,  1.0464,  ..., -1.0063, -1.6074,  0.3997],
        [-0.2334, -0.3890, -0.6312,  ..., -1.0063, -1.6074,  0.3997],
        [ 1.5831, -1.2370,  0.1142,  ...,  0.7598, -1.3402, -1.3000],
        ...,
        [ 0.0289, -1.2143, -1.0876,  ..., -0.4417,  0.8935, -0.9224],
        [-1.1752,  0.9935, -0.1472,  ..., -0.4417,  0.8935, -0.9224],
        [ 2.3559, -0.1006,  0.0216,  ..., -0.4417,  0.8935, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([42, 384])
tensor([[ 0.0000,  1.3461,  0.6890,  ...,  0.0000,  2.1167,  0.5188],
        [ 0.0000,  1.9176,  0.5525,  ...,  0.0000,  2.1167,  0.5188],
        [ 0.0393,  2.2229,  0.0000,  ...,  0.0000,  1.2966,  2.4491],
        ...,
        [ 0.4460,  0.5956,  0.0000,  ...,  0.0000,  2.4282,  0.0000],
        [ 0.0000,  0.4641,  0.1495,  ...,  0.0000,  2.4282,  0.0000],
        [ 0.0000,  2.8294,  0.0000,  ...,  0.0000,  2.4282,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([42, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.5905,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.5905,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1958,  ...,  1.1335,  0.2130,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.1160,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2119,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([42, 384])
tensor([[ 0.7767,  1.6320,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.5643,  0.5220,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.1101,  0.0000,  ...,  0.0000,  0.2319,  0.4447],
        ...,
        [ 1.1903,  0.9930,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2426,  0.6907,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.4414,  0.1630,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([42, 384])
tensor([[ 0.2877,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0147],
        [ 0.5649,  0.2736,  0.0000,  ...,  0.0000,  0.0000,  0.0147],
        [ 0.0736,  0.3075,  0.0000,  ...,  0.0000,  0.0000,  0.3927],
        ...,
        [ 0.3392,  0.0000,  0.0000,  ...,  0.0000,  0.5191,  0.0000],
        [ 0.2359,  0.0000,  0.0000,  ...,  0.0000,  0.5191,  0.0000],
        [ 0.0485,  0.1277,  0.0000,  ...,  0.0000,  0.5191,  0.0000]], device='cuda:0')
Starting epoch 3
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.4553,  1.7177,  0.5793,  ..., -0.6400,  1.4519, -0.9929],
        [-0.5759,  1.1120, -0.6446,  ..., -0.1162,  0.6009, -0.3782],
        [ 0.4637, -1.0879, -0.2193,  ..., -0.6400,  1.4519, -0.9929],
        ...,
        [ 2.3559, -0.1006,  0.0216,  ..., -0.4417,  0.8935, -0.9224],
        [ 0.4553,  1.7177,  0.5793,  ..., -0.4417,  0.8935, -0.9224],
        [ 0.0288, -1.2143, -1.0876,  ..., -0.4417,  0.8935, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.5691,  0.4462,  0.0000,  ...,  0.0233,  2.2636,  0.3595],
        [ 0.4910,  0.5317,  0.0139,  ...,  0.0000,  1.9569,  2.1627],
        [ 0.3535,  0.8178,  0.6129,  ...,  0.0233,  2.2636,  0.3595],
        ...,
        [ 0.0000,  2.8207,  0.0000,  ...,  0.0000,  2.4980,  0.0000],
        [ 0.2101,  0.8510,  0.0159,  ...,  0.0000,  2.4980,  0.0000],
        [ 0.0000,  0.9287,  0.0000,  ...,  0.0000,  2.4980,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.0000,  0.0000,  0.0674,  ...,  0.0609,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.7502,  0.1957,  0.0000],
        [ 0.0000,  0.0720,  0.1638,  ...,  0.0609,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.1247,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.2327,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.4989,  0.8557,  0.0000,  ...,  0.0000,  0.1994,  0.0000],
        [ 0.9391,  0.5647,  0.0000,  ...,  0.0000,  0.3221,  0.6937],
        [ 0.4102,  1.5414,  0.5924,  ...,  0.0000,  0.1994,  0.0000],
        ...,
        [ 0.0000,  1.4043,  0.1720,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5595,  1.0112,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.3376,  0.9123,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.1816,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0688],
        [ 0.2704,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.7035],
        [ 0.0592,  0.2301,  0.0000,  ...,  0.0000,  0.0000,  0.0688],
        ...,
        [ 0.0829,  0.2190,  0.0000,  ...,  0.0000,  0.4157,  0.0000],
        [ 0.3480,  0.0312,  0.0000,  ...,  0.0000,  0.4157,  0.0000],
        [ 0.3789,  0.0000,  0.0000,  ...,  0.0000,  0.4157,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([246, 384])
tensor([[ 2.8804e-02, -1.2143e+00, -1.0876e+00,  ..., -4.9418e-01,
          1.5484e+00, -4.5901e-01],
        [ 2.8804e-02, -1.2143e+00, -1.0876e+00,  ..., -1.0064e+00,
         -1.6074e+00,  3.9973e-01],
        [-9.3026e-01,  1.4680e-01,  9.0211e-01,  ..., -1.0064e+00,
         -1.6074e+00,  3.9973e-01],
        ...,
        [ 3.2699e-01, -1.5970e+00, -1.2882e+00,  ..., -4.4170e-01,
          8.9352e-01, -9.2242e-01],
        [ 1.7656e-01,  3.0352e-01, -6.8508e-01,  ..., -4.4170e-01,
          8.9352e-01, -9.2242e-01],
        [-5.0365e-01,  1.8692e+00,  1.2347e+00,  ..., -4.4170e-01,
          8.9352e-01, -9.2242e-01]], device='cuda:0')
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.0000,  1.9538,  0.0000,  ...,  0.0838,  0.6256,  2.7730],
        [ 0.0000,  1.9538,  0.0000,  ...,  0.0000,  1.8771,  1.2753],
        [ 0.0000,  1.6110,  0.0000,  ...,  0.0000,  1.8771,  1.2753],
        ...,
        [ 0.3586,  1.2578,  0.0365,  ...,  0.0000,  2.1350,  0.0000],
        [ 0.8261,  0.9614,  0.0000,  ...,  0.0000,  2.1350,  0.0000],
        [ 0.0000,  1.9991,  0.0000,  ...,  0.0000,  2.1350,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.8364,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4897,  0.0368,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4897,  0.0368,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0969,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.6341,  1.2619,  0.3541,  ...,  0.0000,  0.1600,  0.3960],
        [ 0.6341,  1.2619,  0.3541,  ...,  0.0000,  0.1057,  0.0000],
        [ 1.2015,  1.4075,  0.0000,  ...,  0.0000,  0.1057,  0.0000],
        ...,
        [ 0.9040,  0.5919,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.9786,  0.7525,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1396,  1.2042,  0.4679,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([246, 384])
tensor([[ 0.6927,  0.3856,  0.0000,  ...,  0.0000,  0.0000,  0.3269],
        [ 0.6927,  0.3856,  0.0000,  ...,  0.0000,  0.0000,  0.2655],
        [ 0.4542,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.2655],
        ...,
        [ 0.3136,  0.0000,  0.0000,  ...,  0.0000,  0.3201,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3201,  0.0000],
        [ 0.2510,  0.3449,  0.0000,  ...,  0.0000,  0.3201,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([250, 384])
tensor([[ 1.7519e-02,  1.0088e+00,  6.5003e-01,  ...,  7.5992e-01,
         -1.3402e+00, -1.3000e+00],
        [ 2.8770e-02, -1.2143e+00, -1.0876e+00,  ..., -7.7097e-01,
         -1.3899e-01,  4.0586e-01],
        [ 2.8770e-02, -1.2143e+00, -1.0876e+00,  ...,  7.5992e-01,
         -1.3402e+00, -1.3000e+00],
        ...,
        [-3.1564e-02, -5.0493e-01,  6.8627e-01,  ..., -4.4171e-01,
          8.9353e-01, -9.2242e-01],
        [-3.7397e-01, -6.8601e-01, -6.3789e-01,  ..., -4.4171e-01,
          8.9353e-01, -9.2242e-01],
        [ 2.8770e-02, -1.2143e+00, -1.0876e+00,  ..., -4.4171e-01,
          8.9353e-01, -9.2242e-01]], device='cuda:0')
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.0000,  1.8080,  0.0000,  ...,  0.0000,  0.7974,  1.4926],
        [ 0.2587,  1.6187,  0.0000,  ...,  0.3743,  1.8402,  2.3206],
        [ 0.2587,  1.6187,  0.0000,  ...,  0.0000,  0.7974,  1.4926],
        ...,
        [ 0.0711,  1.0861,  0.0246,  ...,  0.0000,  1.5661,  0.0000],
        [ 0.1685,  1.5043,  0.0000,  ...,  0.0000,  1.5661,  0.0000],
        [ 0.0000,  0.5049,  0.1846,  ...,  0.0000,  1.5661,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.3034,  0.2669,  0.0000],
        [ 0.0000,  0.0000,  0.0166,  ...,  1.1449,  0.2945,  0.0000],
        [ 0.0000,  0.0000,  0.0166,  ...,  0.3034,  0.2669,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0706,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.8439,  1.0043,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.3906,  0.2049,  ...,  0.0000,  0.0000,  0.6035],
        [ 0.0000,  1.3906,  0.2049,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.7356,  1.0657,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2980,  0.9496,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.0345,  0.7488,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([250, 384])
tensor([[ 0.1812,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.1022],
        [ 0.3104,  0.4662,  0.0000,  ...,  0.0000,  0.0000,  0.6188],
        [ 0.3104,  0.4662,  0.0000,  ...,  0.0000,  0.0000,  0.1022],
        ...,
        [ 0.4308,  0.0000,  0.0000,  ...,  0.0000,  0.6752,  0.0000],
        [ 0.3046,  0.1171,  0.0000,  ...,  0.0000,  0.6752,  0.0000],
        [ 0.4507,  0.0000,  0.0000,  ...,  0.0000,  0.6752,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 2.8741e-02, -1.2143e+00, -1.0875e+00,  ..., -8.4809e-01,
         -2.3640e+00,  4.5530e-02],
        [-2.3338e-01, -3.8908e-01, -6.3131e-01,  ...,  1.5097e+00,
         -5.6556e-01,  1.4365e-01],
        [-5.0357e-01,  1.8691e+00,  1.2346e+00,  ...,  1.5097e+00,
         -5.6556e-01,  1.4365e-01],
        ...,
        [ 2.8741e-02, -1.2143e+00, -1.0875e+00,  ..., -4.4173e-01,
          8.9354e-01, -9.2242e-01],
        [ 1.4460e-01,  3.6288e-01, -5.4045e-01,  ..., -4.4173e-01,
          8.9354e-01, -9.2242e-01],
        [ 2.2199e-01, -1.3413e+00,  1.6086e+00,  ..., -4.4173e-01,
          8.9354e-01, -9.2242e-01]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  1.0653,  0.0000,  ...,  0.0000,  1.9236,  2.3278],
        [ 0.0000,  1.1524,  0.0000,  ...,  0.0000,  2.1168,  1.7850],
        [ 0.0000,  2.4886,  0.6943,  ...,  0.0000,  2.1168,  1.7850],
        ...,
        [ 0.0000,  2.2858,  0.0220,  ...,  0.0000,  1.8798,  0.0000],
        [ 0.0000,  1.8961,  1.9895,  ...,  0.0000,  1.8798,  0.0000],
        [ 0.0000,  0.3189,  0.0000,  ...,  0.0000,  1.8798,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.5518,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.2139,  0.0000,  0.0000],
        [ 0.0000,  0.1500,  0.0000,  ...,  1.2139,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2750,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 1.0285,  0.9180,  0.0000,  ...,  0.0000,  0.0493,  0.0000],
        [ 0.9331,  1.0515,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3150,  1.1220,  0.3537,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.6262,  1.7639,  0.5391,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0531,  2.1536,  0.3773,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.9520,  1.2686,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.4470,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.2462],
        [ 0.5600,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.3895],
        [ 0.3840,  0.6555,  0.0000,  ...,  0.0000,  0.0000,  0.3895],
        ...,
        [ 0.3984,  0.4448,  0.0000,  ...,  0.0000,  0.5961,  0.0000],
        [ 0.5904,  0.5908,  0.0000,  ...,  0.0000,  0.5961,  0.0000],
        [ 0.8301,  0.0000,  0.0000,  ...,  0.0000,  0.5961,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 1.8403e+00, -6.2865e-01,  1.0465e+00,  ...,  9.9386e-01,
          4.6180e-02, -3.3845e-01],
        [ 5.8872e-01,  1.0539e+00, -1.0048e+00,  ...,  1.5096e+00,
         -5.6556e-01,  1.4365e-01],
        [ 5.8872e-01,  1.0539e+00, -1.0048e+00,  ...,  7.5996e-01,
         -1.3401e+00, -1.3000e+00],
        ...,
        [-9.9458e-01, -1.1119e+00, -7.1884e-03,  ..., -4.4173e-01,
          8.9355e-01, -9.2241e-01],
        [-9.9458e-01, -1.1119e+00, -7.1884e-03,  ..., -4.4173e-01,
          8.9355e-01, -9.2241e-01],
        [ 2.8714e-02, -1.2143e+00, -1.0875e+00,  ..., -4.4173e-01,
          8.9355e-01, -9.2241e-01]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.0000,  1.2297,  0.3491,  ...,  0.2367,  1.3955,  1.3529],
        [ 0.0000,  2.1852,  0.0000,  ...,  0.0508,  1.5291,  0.9133],
        [ 0.0000,  2.1852,  0.0000,  ...,  0.0996,  0.5269,  2.3797],
        ...,
        [ 0.1287,  1.8131,  0.0000,  ...,  0.0000,  1.4850,  0.0000],
        [ 0.0560,  0.9125,  0.1501,  ...,  0.0000,  1.4850,  0.0000],
        [ 0.0000,  1.0109,  0.0000,  ...,  0.0000,  1.4850,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.9519,  0.1187,  0.0000],
        [ 0.0000,  0.1022,  0.0000,  ...,  0.8688,  0.0000,  0.0000],
        [ 0.0000,  0.1022,  0.0000,  ...,  1.5160,  0.7116,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.1644,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0184,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.2198,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.6612,  1.7000,  0.0000,  ...,  0.0000,  0.0000,  0.3615],
        [ 0.2520,  1.2948,  0.2832,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2520,  1.2948,  0.2832,  ...,  0.0000,  0.2131,  0.3853],
        ...,
        [ 0.6381,  0.8439,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3683,  1.0468,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.9527,  0.9414,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.2455,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.5251],
        [ 0.2609,  0.1600,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2609,  0.1600,  0.0000,  ...,  0.0000,  0.0000,  0.4242],
        ...,
        [ 0.2912,  0.0000,  0.0000,  ...,  0.0000,  0.2351,  0.0000],
        [ 0.5809,  0.0000,  0.0000,  ...,  0.0000,  0.2351,  0.0000],
        [ 0.5314,  0.0000,  0.0000,  ...,  0.0000,  0.2351,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[ 4.6602e-01,  5.1871e-02,  1.4771e+00,  ...,  2.3029e+00,
          4.3318e-01,  2.4052e-01],
        [-2.0056e+00, -1.0803e+00,  1.1269e-01,  ...,  2.6215e-01,
          8.8343e-01, -2.2536e-01],
        [ 4.6602e-01,  5.1871e-02,  1.4771e+00,  ...,  2.3029e+00,
          4.3318e-01,  2.4052e-01],
        ...,
        [ 2.8698e-02, -1.2143e+00, -1.0875e+00,  ..., -4.4174e-01,
          8.9355e-01, -9.2241e-01],
        [-8.5790e-01,  6.5186e-01,  6.6643e-02,  ..., -4.4174e-01,
          8.9355e-01, -9.2241e-01],
        [ 1.8403e+00, -6.2865e-01,  1.0465e+00,  ..., -4.4174e-01,
          8.9355e-01, -9.2241e-01]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.7421,  0.9638,  0.5754,  ...,  0.0000,  2.5986,  0.5925],
        [ 0.6506,  0.9680,  0.0000,  ...,  0.0000,  0.9747,  1.8422],
        [ 0.7421,  0.9638,  0.5754,  ...,  0.0000,  2.5986,  0.5925],
        ...,
        [ 0.1880,  0.1314,  0.0000,  ...,  0.0000,  1.7685,  0.0000],
        [ 0.1275,  1.5258,  0.3673,  ...,  0.0000,  1.7685,  0.0000],
        [ 0.0000,  2.7008,  0.6866,  ...,  0.0000,  1.7685,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.0000,  0.0000,  0.0608,  ...,  1.3033,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.3523,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0608,  ...,  1.3033,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.4517,  ...,  0.0000,  0.1111,  0.0000],
        [ 0.0000,  0.0000,  0.4035,  ...,  0.0000,  0.1111,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1111,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.4854,  0.8907,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.7823,  1.3520,  0.0000,  ...,  0.0000,  0.0342,  0.8413],
        [ 0.4854,  0.8907,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 1.3695,  0.9370,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3296,  1.0655,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.8808,  0.2743,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.6239,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.1127],
        [ 0.4146,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.7262],
        [ 0.6239,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.1127],
        ...,
        [ 0.7618,  0.0931,  0.0000,  ...,  0.0000,  0.3844,  0.0000],
        [ 0.4441,  0.7522,  0.0000,  ...,  0.0000,  0.3844,  0.0000],
        [ 0.3456,  0.4058,  0.0000,  ...,  0.0000,  0.3844,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 4.6602e-01,  5.1872e-02,  1.4771e+00,  ...,  5.1219e-01,
          1.5442e+00,  1.8038e+00],
        [ 1.9661e-02,  1.0565e+00, -2.3282e+00,  ..., -2.1024e+00,
          9.1741e-01, -5.9285e-01],
        [-1.1751e+00,  9.9350e-01, -1.4733e-01,  ...,  7.5999e-01,
         -1.3401e+00, -1.2999e+00],
        ...,
        [ 2.0340e-01,  2.2989e-01,  1.2470e+00,  ..., -4.4174e-01,
          8.9354e-01, -9.2240e-01],
        [ 4.6368e-01, -1.0880e+00, -2.1932e-01,  ..., -4.4174e-01,
          8.9354e-01, -9.2240e-01],
        [ 8.1370e-01, -6.3634e-01,  7.7863e-01,  ..., -4.4174e-01,
          8.9354e-01, -9.2240e-01]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0670,  2.3847,  1.0690,  ...,  0.0785,  1.1270,  2.0624],
        [ 0.0000,  0.7881,  0.0068,  ...,  0.3397,  1.2729,  1.3067],
        [ 0.2078,  1.2102,  0.8674,  ...,  0.0000,  0.9744,  1.9757],
        ...,
        [ 0.7920,  2.0965,  0.0000,  ...,  0.0000,  1.2340,  0.0000],
        [ 0.9568,  0.0000,  0.0000,  ...,  0.0000,  1.2340,  0.0000],
        [ 0.9631,  1.1763,  0.0598,  ...,  0.0000,  1.2340,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.8197,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.8327,  0.0555,  0.0000],
        [ 0.0000,  0.0000,  0.0149,  ...,  1.0699,  0.4312,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0470,  ...,  0.1563,  0.0525,  0.0000],
        [ 0.0000,  0.0000,  0.0589,  ...,  0.1563,  0.0525,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.1563,  0.0525,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0711,  1.3270,  0.1611,  ...,  0.0000,  0.3395,  0.0000],
        [ 1.3408,  1.2186,  0.0000,  ...,  0.0000,  0.3117,  0.7195],
        [ 0.4402,  0.8985,  0.0000,  ...,  0.0000,  0.0212,  0.4238],
        ...,
        [ 0.0000,  0.9190,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.5200,  1.0493,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0847,  0.7972,  0.0623,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.4756,  0.3570,  0.0000,  ...,  0.0000,  0.0000,  0.6306],
        [ 0.5173,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.6714],
        [ 0.3669,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.7860],
        ...,
        [ 0.7215,  0.5990,  0.0000,  ...,  0.0000,  0.5392,  0.0000],
        [ 0.5889,  0.0000,  0.0000,  ...,  0.0000,  0.5392,  0.0000],
        [ 0.2354,  0.5569,  0.0000,  ...,  0.0000,  0.5392,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 1.8403e+00, -6.2862e-01,  1.0465e+00,  ...,  1.5096e+00,
         -5.6558e-01,  1.4365e-01],
        [ 2.0912e+00,  1.7861e+00, -1.4909e+00,  ...,  7.5999e-01,
         -1.3401e+00, -1.2999e+00],
        [ 1.8403e+00, -6.2862e-01,  1.0465e+00,  ..., -2.1913e+00,
          5.8085e-01,  7.2357e-01],
        ...,
        [ 2.3558e+00, -1.0083e-01,  2.1314e-02,  ..., -4.4174e-01,
          8.9354e-01, -9.2239e-01],
        [ 2.8683e-02, -1.2142e+00, -1.0875e+00,  ..., -4.4174e-01,
          8.9354e-01, -9.2239e-01],
        [ 8.1370e-01, -6.3632e-01,  7.7862e-01,  ..., -4.4174e-01,
          8.9354e-01, -9.2239e-01]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  1.4414,  0.6619,  ...,  0.0000,  1.5578,  1.3534],
        [ 0.7344,  1.2737,  0.0000,  ...,  0.0000,  0.4990,  2.1482],
        [ 0.0000,  1.4414,  0.6619,  ...,  0.8994,  1.2712,  2.0697],
        ...,
        [ 0.0000,  0.5410,  0.0000,  ...,  0.0000,  2.1257,  0.0000],
        [ 0.0000,  2.3133,  0.1883,  ...,  0.0000,  2.1257,  0.0000],
        [ 0.0243,  1.2375,  0.0000,  ...,  0.0000,  2.1257,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  0.0026,  0.0000,  ...,  0.8195,  0.2055,  0.0000],
        [ 0.0000,  0.0000,  0.1138,  ...,  0.8776,  0.6550,  0.0000],
        [ 0.0000,  0.0026,  0.0000,  ...,  1.5473,  0.4176,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0924,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0924,  0.0000],
        [ 0.0000,  0.0000,  0.0391,  ...,  0.0000,  0.0924,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.1750,  1.5457,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.4729,  0.6951,  0.0000,  ...,  0.0000,  0.1749,  0.7200],
        [ 0.1750,  1.5457,  0.0000,  ...,  0.0000,  0.0139,  0.2424],
        ...,
        [ 0.9311,  1.0151,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3183,  1.2893,  0.6471,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0314,  1.1738,  0.4504,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.4956,  0.2964,  0.0000,  ...,  0.0000,  0.0000,  0.3212],
        [ 0.1330,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.7331],
        [ 0.4956,  0.2964,  0.0000,  ...,  0.0000,  0.0000,  0.6366],
        ...,
        [ 0.1851,  0.0000,  0.0000,  ...,  0.0000,  0.4501,  0.0000],
        [ 0.3436,  0.6264,  0.0000,  ...,  0.0000,  0.4501,  0.0000],
        [ 0.3415,  0.2799,  0.0000,  ...,  0.0000,  0.4501,  0.0000]], device='cuda:0')
t = 30 / 1000000
 G [bbox_pred]: 2.1786
 G [g_gan_img_loss]: 0.0074
 G [L1_pixel_loss]: 0.9343
 G [total_loss]: 3.4359
 G [g_gan_obj_loss]: 0.0071
 G [ac_loss]: 0.3085
 D_obj [d_obj_gan_loss]: 1.3243
 D_obj [d_ac_loss_real]: 3.2028
 D_obj [d_ac_loss_fake]: 3.0849
 D_img [d_img_gan_loss]: 1.3510
cur_t_vecs
torch.Size([247, 384])
tensor([[ 2.3558e+00, -1.0086e-01,  2.1251e-02,  ...,  1.5708e+00,
          3.6001e-01,  8.2573e-01],
        [-9.3594e-01,  1.3449e+00,  1.5365e+00,  ...,  2.3029e+00,
          4.3321e-01,  2.4047e-01],
        [ 9.7452e-01,  2.2192e-01,  9.2049e-01,  ...,  2.3029e+00,
          4.3321e-01,  2.4047e-01],
        ...,
        [ 7.5209e-01,  3.7243e-01, -5.5260e-01,  ..., -4.4174e-01,
          8.9354e-01, -9.2238e-01],
        [ 2.8680e-02, -1.2142e+00, -1.0875e+00,  ..., -4.4174e-01,
          8.9354e-01, -9.2238e-01],
        [ 2.2187e-01, -1.3413e+00,  1.6087e+00,  ..., -4.4174e-01,
          8.9354e-01, -9.2238e-01]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.0000,  0.4988,  0.0000,  ...,  0.5325,  1.6319,  2.0316],
        [ 0.0000,  1.8741,  0.6839,  ...,  0.0000,  2.5070,  1.5113],
        [ 0.0000,  0.9812,  0.2217,  ...,  0.0000,  2.5070,  1.5113],
        ...,
        [ 0.0000,  0.7985,  0.0000,  ...,  0.0000,  1.6672,  0.0000],
        [ 0.0000,  0.3477,  0.0000,  ...,  0.0000,  1.6672,  0.0000],
        [ 0.0000,  0.9710,  0.0000,  ...,  0.0000,  1.6672,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.0000,  0.0000,  0.5533,  ...,  2.1161,  0.3975,  0.0000],
        [ 0.1143,  0.0000,  0.2340,  ...,  1.0214,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3603,  ...,  1.0214,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2622,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2622,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2622,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[ 1.0633,  1.3760,  0.0000,  ...,  0.0000,  0.0000,  1.3112],
        [ 0.3766,  1.2285,  0.0000,  ...,  0.0000,  0.0751,  0.0000],
        [ 0.4980,  1.0761,  0.0000,  ...,  0.0000,  0.0751,  0.0000],
        ...,
        [ 0.1538,  0.8611,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.3700,  0.8221,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.1104,  1.0346,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.6182,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.9382],
        [ 0.1699,  0.2110,  0.0000,  ...,  0.0000,  0.0000,  0.0717],
        [ 0.1966,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0717],
        ...,
        [ 0.5111,  0.5339,  0.0000,  ...,  0.0000,  0.5166,  0.0000],
        [ 0.2864,  0.0000,  0.0000,  ...,  0.0000,  0.5166,  0.0000],
        [ 0.3618,  0.0000,  0.0000,  ...,  0.0000,  0.5166,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([204, 384])
tensor([[-1.3598e+00,  9.2375e-01,  2.6003e-01,  ...,  2.3029e+00,
          4.3322e-01,  2.4044e-01],
        [ 2.3558e+00, -1.0089e-01,  2.1183e-02,  ...,  9.1220e-02,
          1.5624e+00,  4.8144e-01],
        [ 2.3558e+00, -1.0089e-01,  2.1183e-02,  ..., -6.8533e-01,
         -4.8737e-02,  1.5539e-01],
        ...,
        [ 2.8676e-02, -1.2142e+00, -1.0875e+00,  ..., -4.4175e-01,
          8.9353e-01, -9.2238e-01],
        [ 9.7451e-01,  2.2190e-01,  9.2048e-01,  ..., -4.4175e-01,
          8.9353e-01, -9.2238e-01],
        [ 1.4459e-01,  3.6300e-01, -5.4049e-01,  ..., -4.4175e-01,
          8.9353e-01, -9.2238e-01]], device='cuda:0')
cur_t_vecs
torch.Size([204, 384])
tensor([[ 0.0029,  1.1648,  0.0000,  ...,  0.0000,  2.8021,  2.1158],
        [ 0.0000,  1.1503,  0.0000,  ...,  0.2655,  0.6258,  1.7249],
        [ 0.0000,  1.1503,  0.0000,  ...,  0.8187,  0.4680,  2.2405],
        ...,
        [ 0.2990,  1.5155,  0.5237,  ...,  0.0000,  1.7544,  0.0000],
        [ 0.0000,  1.7495,  0.0000,  ...,  0.0000,  1.7544,  0.0000],
        [ 0.4083,  0.4942,  0.1203,  ...,  0.0000,  1.7544,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([204, 384])404271d
85549b
438267e
245534b
529944e
573149e
185963c
3001a
90869b
31442c
365027d
332292c
248591a
61202b
71737d
26747c
102609d
177381e
485064e
308295c
299643b
531778b
153574c
244122d
165299d
581061b
237859c
521995d
163412b
131374d
188498c
323129a
23176c
331302b
557434a
310518e
210266a
511143a
409754e
126204e
13595b
221633e
22658d
96728b
88325e
426880c
259853a
223420c
400999a
42704a
20291d
412992d
84896e
176726c
477468a
132516a
525273e
217720d
388923b
187803e
4764e
127450a
540926b
194050c
354938e
277346a
257713b
49286d
104537e
213530e
13576e
474105b
295693b
71631c
14798d
404395b
171309a
336854d
101426a
195894e
58979c
329151a
543224b
468751d
137339b
242167b
191690d
134597e
491558e
4761e
576526e
500982b
312359c
60378b
154597e
485491e
285651a
250724b
97170c
438899c
59582d
567305a
47909e
134413c
103575d
507148b
444399d
102421d
217135c
485368b
393647a
295850e
557408d
494795d
550278a
246099a
224629e
150594d
276694e
302397b
102834e
353982b
463168c
308803a
96067b
81035b
189033e
322121b
76802b
396369b
238712c
168417b
457086c
107108a
517417b
323479a
103582a
218886e
233869d
408946a
478805d
119761c
30958c
346915c
101877c
10138e
208585b
316353e
52324b
377278b
441816e
189648b
92107d
163829e
529352e
560563d
389772d
545929c
159199a
217991b
197029b
150354d
524924d
313608d
146120b
157356a
257951c
535265c
346724d
139789e
457448d
432627d
488583b
520389c
269015d
288921b
385540c
344025a
103558b
10082e
349527d
431997e
173814c
174303b
215612c
363190c
367442b
11690a
113619d
283809a
84034b
39360d
522235a
554319c
330954d
472320a
320537b
355175a
132860e
144371b
6075a
569602c
243796d
480576d
443086d
555800d
208347b
78286b
390298c
569174b
522489d
66309b
515300d
289100a
282978b
245242c
288313e
416188a
549098e
295491a
167995e
241178a
160152a
364571b
297009a
400848e
121172a
572147e
5383d
261664e
359164c
233112e
167126b
47774c
21531c
109568a
84815e
274424a
134849b
43742e
459208b
173565d
142587b
324740d
39716b
488980a
509267e
367605a
28349d
6710a
545257e
578119d
454044a
18155c
414212a
349153c
552461b
572042e
135989c
570579a
493485a
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
113019c
170687a
289172d
459110b
324611a
509514e
2477b
577712e
214873b
505642a
412384d
167074b
89707e
327536c
110777e
462929c
340897e
127750c
568677b
189187a
285357c
455902d
6421c
428304c
159403e
43171d
546261e
126808e
302576c
183539b
392476a
566547e
230570b
518918b
533452e
260109a
53464b
279345a
24026a
293576a
502557d
327413b
306127c
216026b
278899b
310564d
452459c
553401b
37291d
455877a
169395c
75362a
522704b
107620e
327813a
207573a
208267a
466134b
152245e
91263a
397938a
400850e
20087d
254589a
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.6712,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.4682,  ...,  1.5401,  0.3411,  0.0000],
        [ 0.0000,  0.0000,  0.4682,  ...,  1.7701,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.2623,  ...,  0.0000,  0.1218,  0.0000],
        [ 0.0000,  0.0000,  0.6169,  ...,  0.0000,  0.1218,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1218,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([204, 384])
tensor([[ 1.0660,  1.2746,  0.0000,  ...,  0.0000,  0.2483,  1.0781],
        [ 0.2465,  1.2335,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2465,  1.2335,  0.0000,  ...,  0.0000,  0.0000,  0.3308],
        ...,
        [ 0.9299,  0.5224,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.4187,  0.2033,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.8143,  1.3576,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([204, 384])
tensor([[ 0.3815,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.9278],
        [ 0.2176,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.5530],
        [ 0.2176,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.6633],
        ...,
        [ 0.2944,  0.2037,  0.0000,  ...,  0.0000,  0.6154,  0.0000],
        [ 0.6671,  0.7050,  0.0000,  ...,  0.0000,  0.6154,  0.0000],
        [ 0.2574,  0.0000,  0.0000,  ...,  0.0000,  0.6154,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([33, 384])
tensor([[ 0.4660,  0.0518,  1.4772,  ..., -0.3808, -0.0034,  0.0854],
        [ 0.0287, -1.2142, -1.0875,  ...,  0.2621,  0.8835, -0.2255],
        [ 0.4660,  0.0518,  1.4772,  ...,  1.5095, -0.5656,  0.1436],
        ...,
        [ 0.8225, -0.9377,  0.8456,  ..., -0.4418,  0.8935, -0.9224],
        [ 0.0287, -1.2142, -1.0875,  ..., -0.4418,  0.8935, -0.9224],
        [ 1.5828, -1.2372,  0.1143,  ..., -0.4418,  0.8935, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([33, 384])
tensor([[ 0.0000,  0.8324,  0.9072,  ...,  0.5841,  1.7437,  1.8921],
        [ 0.0000,  0.9410,  0.0000,  ...,  0.1316,  1.2185,  1.8755],
        [ 0.0000,  0.8324,  0.9072,  ...,  0.0000,  2.5548,  2.2858],
        ...,
        [ 0.0000,  1.7244,  0.0000,  ...,  0.0000,  1.8494,  0.0000],
        [ 0.0000,  1.1565,  0.0000,  ...,  0.0000,  1.8494,  0.0000],
        [ 0.0000,  2.0242,  0.5787,  ...,  0.0000,  1.8494,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([33, 384])
tensor([[ 0.0000,  0.0000,  0.3849,  ...,  1.5212,  0.1650,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.3128,  0.7684,  0.0000],
        [ 0.0000,  0.0000,  0.3849,  ...,  1.1322,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0726,  0.0000],
        [ 0.0000,  0.0000,  0.0626,  ...,  0.0000,  0.0726,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0726,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([33, 384])
tensor([[ 0.3214,  0.9334,  0.0000,  ...,  0.0000,  0.1772,  0.0000],
        [ 0.4686,  0.7189,  0.0000,  ...,  0.0000,  0.0000,  1.0211],
        [ 0.3214,  0.9334,  0.0000,  ...,  0.0000,  0.0724,  0.4083],
        ...,
        [ 1.0276,  1.1551,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.7274,  0.7657,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.6432,  0.7873,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([33, 384])
tensor([[ 0.3947,  0.0930,  0.0000,  ...,  0.0000,  0.0000,  0.3586],
        [ 0.2817,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.7480],
        [ 0.3947,  0.0930,  0.0000,  ...,  0.0000,  0.0000,  0.7539],
        ...,
        [ 0.6090,  0.0000,  0.0000,  ...,  0.0000,  0.3634,  0.0000],
        [ 0.3411,  0.0000,  0.0000,  ...,  0.0000,  0.3634,  0.0000],
        [ 0.3452,  0.0482,  0.0000,  ...,  0.0000,  0.3634,  0.0000]], device='cuda:0')
Starting epoch 4
cur_t_vecs
torch.Size([251, 384])
tensor([[ 0.2955, -0.9859,  0.6173,  ...,  2.0329, -1.9299,  0.6825],
        [ 0.0286, -1.2142, -1.0875,  ...,  2.0329, -1.9299,  0.6825],
        [ 0.2955, -0.9859,  0.6173,  ...,  1.5095, -0.5656,  0.1436],
        ...,
        [-1.0485, -0.1908, -1.3651,  ..., -0.4418,  0.8935, -0.9224],
        [-0.9300,  0.1470,  0.9019,  ..., -0.4418,  0.8935, -0.9224],
        [ 0.0286, -1.2142, -1.0875,  ..., -0.4418,  0.8935, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([251, 384])
tensor([[ 0.6052,  2.4946,  0.0286,  ...,  0.0000,  0.8373,  0.9466],
        [ 0.0000,  1.1549,  0.0000,  ...,  0.0000,  0.8373,  0.9466],
        [ 0.6052,  2.4946,  0.0286,  ...,  0.0000,  1.4509,  1.5716],
        ...,
        [ 0.0000,  1.4190,  0.7354,  ...,  0.0000,  1.4547,  0.0000],
        [ 0.0000,  0.1378,  0.0000,  ...,  0.0000,  1.4547,  0.0000],
        [ 0.0000,  2.2675,  0.0743,  ...,  0.0000,  1.4547,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([251, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.2185,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.2185,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.6208,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([251, 384])
tensor([[ 0.5332,  1.3408,  0.0991,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.4677,  0.9279,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5332,  1.3408,  0.0991,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.4206,  1.7997,  0.7862,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.2794,  0.9505,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.8522,  1.6924,  0.6347,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([251, 384])
tensor([[ 0.7828,  0.7603,  0.0000,  ...,  0.0000,  0.0000,  0.2091],
        [ 0.5967,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.2091],
        [ 0.7828,  0.7603,  0.0000,  ...,  0.0000,  0.0000,  0.7281],
        ...,
        [ 0.7941,  0.4292,  0.0000,  ...,  0.0000,  0.4289,  0.0000],
        [ 0.8502,  0.0000,  0.0000,  ...,  0.0000,  0.4289,  0.0000],
        [ 0.6142,  0.4453,  0.0000,  ...,  0.0000,  0.4289,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 2.8616e-02, -1.2142e+00, -1.0874e+00,  ..., -1.7536e+00,
         -3.8417e-01,  1.1062e-01],
        [-9.9475e-01, -1.1119e+00, -7.3112e-03,  ..., -1.7536e+00,
         -3.8417e-01,  1.1062e-01],
        [ 2.8616e-02, -1.2142e+00, -1.0874e+00,  ..., -1.7536e+00,
         -3.8417e-01,  1.1062e-01],
        ...,
        [ 2.3558e+00, -1.0098e-01,  2.1009e-02,  ..., -4.4183e-01,
          8.9353e-01, -9.2241e-01],
        [ 2.8616e-02, -1.2142e+00, -1.0874e+00,  ..., -4.4183e-01,
          8.9353e-01, -9.2241e-01],
        [-2.0055e+00, -1.0802e+00,  1.1284e-01,  ..., -4.4183e-01,
          8.9353e-01, -9.2241e-01]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.0000,  2.3680,  0.2703,  ...,  0.0000,  0.4712,  2.8242],
        [ 0.0701,  1.0120,  0.0000,  ...,  0.0000,  0.7275,  2.3536],
        [ 0.0000,  2.3680,  0.2703,  ...,  0.0000,  0.4712,  2.8242],
        ...,
        [ 0.0000,  2.7804,  0.0123,  ...,  0.0000,  2.0733,  0.0000],
        [ 0.0000,  0.9219,  0.0000,  ...,  0.0000,  2.0733,  0.0000],
        [ 0.6095,  1.1127,  0.1368,  ...,  0.0000,  2.0733,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.1992,  0.3364,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.2793,  0.2225,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1992,  0.3364,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0929,  0.0000],
        [ 0.0000,  0.0000,  0.4065,  ...,  0.0000,  0.0929,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0929,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.4787,  1.4150,  0.6444,  ...,  0.0000,  0.0000,  0.2313],
        [ 0.9434,  1.0217,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.4787,  1.4150,  0.6444,  ...,  0.0000,  0.0000,  0.2313],
        ...,
        [ 0.0000,  2.0007,  0.2110,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.3621,  1.0749,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.8850,  0.9427,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.2869,  0.4226,  0.0000,  ...,  0.0000,  0.0000,  0.4291],
        [ 0.2934,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.6007],
        [ 0.2869,  0.4226,  0.0000,  ...,  0.0000,  0.0000,  0.4291],
        ...,
        [ 0.5213,  0.8685,  0.0000,  ...,  0.0000,  0.2026,  0.0000],
        [ 0.5794,  0.0000,  0.0000,  ...,  0.0000,  0.2026,  0.0000],
        [ 0.1980,  0.0000,  0.0000,  ...,  0.0000,  0.2026,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[-0.5032,  1.8690,  1.2344,  ...,  0.7601, -1.3399, -1.2999],
        [ 2.3558, -0.1010,  0.0209,  ...,  1.8963,  1.2863, -0.5574],
        [ 1.8403, -0.6287,  1.0466,  ...,  1.5708,  0.3600,  0.8258],
        ...,
        [-2.0055, -1.0801,  0.1129,  ..., -0.4418,  0.8935, -0.9224],
        [ 0.0286, -1.2143, -1.0874,  ..., -0.4418,  0.8935, -0.9224],
        [ 0.4553,  1.7176,  0.5794,  ..., -0.4418,  0.8935, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  1.9922,  0.0000,  ...,  0.0000,  1.5223,  1.6990],
        [ 0.0000,  3.0838,  0.0000,  ...,  0.0000,  1.5925,  2.1990],
        [ 0.0000,  0.6749,  0.6279,  ...,  0.0500,  1.5882,  0.8214],
        ...,
        [ 0.6521,  0.1659,  0.0000,  ...,  0.0000,  1.7703,  0.0000],
        [ 0.0000,  1.5563,  0.0000,  ...,  0.0000,  1.7703,  0.0000],
        [ 0.1604,  0.4415,  0.0000,  ...,  0.0000,  1.7703,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  0.0000,  0.3182,  ...,  0.6639,  0.1617,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.5755,  0.3260,  0.0000],
        [ 0.0000,  0.0000,  0.4174,  ...,  1.1826,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.1185,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1788,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.5514,  0.7516,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1030,  1.7736,  0.1712,  ...,  0.0000,  0.0000,  0.5008],
        [ 1.2958,  1.1940,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 1.9335,  1.2289,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.6037,  1.2402,  0.1903,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.3327,  1.0118,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.4266,  0.2242,  0.0000,  ...,  0.0000,  0.0000,  0.3600],
        [ 0.3755,  0.6358,  0.0000,  ...,  0.0000,  0.0000,  0.9010],
        [ 0.7882,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.3143],
        ...,
        [ 0.5702,  0.2374,  0.0000,  ...,  0.0000,  0.5740,  0.0000],
        [ 0.2432,  1.0535,  0.0000,  ...,  0.0000,  0.5740,  0.0000],
        [ 0.3252,  0.0159,  0.0000,  ...,  0.0000,  0.5740,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 2.3558, -0.1010,  0.0209,  ...,  1.5095, -0.5657,  0.1436],
        [ 2.3558, -0.1010,  0.0209,  ...,  1.5095, -0.5657,  0.1436],
        [ 0.0286, -1.2142, -1.0874,  ...,  1.8963,  1.2863, -0.5574],
        ...,
        [ 1.8402, -0.6287,  1.0466,  ..., -0.4419,  0.8935, -0.9224],
        [ 0.0286, -1.2142, -1.0874,  ..., -0.4419,  0.8935, -0.9224],
        [-0.5032,  1.8690,  1.2343,  ..., -0.4419,  0.8935, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  2.7292,  0.2289,  ...,  0.0000,  1.4577,  1.8979],
        [ 0.0000,  2.7292,  0.2289,  ...,  0.0000,  1.4577,  1.8979],
        [ 0.0000,  1.1334,  0.0000,  ...,  0.0000,  0.9186,  1.8971],
        ...,
        [ 0.0000,  2.2712,  0.9629,  ...,  0.0000,  2.0156,  0.0000],
        [ 0.0000,  0.0000,  0.5974,  ...,  0.0000,  2.0156,  0.0000],
        [ 0.0000,  2.2140,  0.0000,  ...,  0.0000,  2.0156,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.6618,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.6618,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.2109,  ...,  1.2538,  0.4429,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0643,  0.0000],
        [ 0.0000,  0.0000,  0.7914,  ...,  0.0000,  0.0643,  0.0000],
        [ 0.0000,  0.0000,  0.2053,  ...,  0.0000,  0.0643,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  1.2473,  0.1621,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.2473,  0.1621,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.9468,  1.0311,  0.0000,  ...,  0.0000,  0.1284,  0.0000],
        ...,
        [ 0.7809,  1.3739,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.7558,  1.3660,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1738,  0.5716,  0.2360,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.7849,  0.9938,  0.0000,  ...,  0.0000,  0.0000,  0.6118],
        [ 0.7849,  0.9938,  0.0000,  ...,  0.0000,  0.0000,  0.6118],
        [ 0.4089,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.5336],
        ...,
        [ 0.5919,  0.1678,  0.0000,  ...,  0.0000,  0.2272,  0.0000],
        [ 0.5542,  0.0000,  0.0000,  ...,  0.0000,  0.2272,  0.0000],
        [ 0.4911,  1.0697,  0.0000,  ...,  0.0000,  0.2272,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([243, 384])
tensor([[ 8.1375e-01, -6.3643e-01,  7.7883e-01,  ...,  1.5094e+00,
         -5.6574e-01,  1.4366e-01],
        [ 2.2177e-01, -1.3414e+00,  1.6087e+00,  ...,  1.7008e+00,
          2.3804e-01, -9.6398e-01],
        [ 2.8630e-02, -1.2142e+00, -1.0874e+00,  ...,  1.7008e+00,
          2.3804e-01, -9.6398e-01],
        ...,
        [-1.1749e+00,  9.9332e-01, -1.4748e-01,  ..., -4.4186e-01,
          8.9349e-01, -9.2239e-01],
        [-7.9719e-01,  6.8242e-01, -1.1352e+00,  ..., -4.4186e-01,
          8.9349e-01, -9.2239e-01],
        [ 2.8630e-02, -1.2142e+00, -1.0874e+00,  ..., -4.4186e-01,
          8.9349e-01, -9.2239e-01]], device='cuda:0')
cur_t_vecs
torch.Size([243, 384])
tensor([[ 0.2335,  0.0159,  0.0000,  ...,  0.0000,  2.1860,  2.1935],
        [ 0.0000,  1.4503,  0.0000,  ...,  0.0000,  0.7547,  2.1389],
        [ 0.0000,  1.0796,  0.0000,  ...,  0.0000,  0.7547,  2.1389],
        ...,
        [ 0.0000,  0.3724,  0.0000,  ...,  0.0000,  1.5432,  0.0000],
        [ 0.6105,  0.3830,  1.1123,  ...,  0.0000,  1.5432,  0.0000],
        [ 0.0000,  1.6228,  0.5282,  ...,  0.0000,  1.5432,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([243, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.2781,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.5847,  0.1246,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.5847,  0.1246,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.1541,  ...,  0.0000,  0.0614,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0614,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0614,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([243, 384])
tensor([[ 1.0895,  1.2163,  0.0000,  ...,  0.0000,  0.1176,  0.3375],
        [ 0.1056,  1.0661,  0.1395,  ...,  0.0000,  0.1147,  0.0000],
        [ 1.1887,  0.5453,  0.0000,  ...,  0.0000,  0.1147,  0.0000],
        ...,
        [ 0.7582,  0.7124,  0.0000,  ...,  0.0000,  0.1153,  0.0000],
        [ 0.9600,  0.6577,  0.0000,  ...,  0.0000,  0.1153,  0.0000],
        [ 0.6133,  1.3821,  0.4148,  ...,  0.0000,  0.1153,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([243, 384])
tensor([[ 0.4008,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.7993],
        [ 0.5226,  0.1860,  0.0000,  ...,  0.0000,  0.0000,  0.5164],
        [ 0.2666,  0.1871,  0.0000,  ...,  0.0000,  0.0000,  0.5164],
        ...,
        [ 0.6278,  0.0000,  0.0000,  ...,  0.0000,  0.3818,  0.0000],
        [ 0.4402,  0.0793,  0.0000,  ...,  0.0000,  0.3818,  0.0000],
        [ 0.4406,  0.9944,  0.0000,  ...,  0.0000,  0.3818,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[-1.2330, -0.9477,  0.8601,  ..., -0.6398,  1.4521, -0.9927],
        [-1.3597,  0.9240,  0.2599,  ...,  2.3029,  0.4332,  0.2402],
        [-1.3597,  0.9240,  0.2599,  ...,  0.1262, -0.1613,  1.2239],
        ...,
        [-1.2330, -0.9477,  0.8601,  ..., -0.4419,  0.8935, -0.9224],
        [ 2.3558, -0.1010,  0.0208,  ..., -0.4419,  0.8935, -0.9224],
        [ 0.2038,  0.2302,  1.2469,  ..., -0.4419,  0.8935, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.0000,  1.0227,  0.0000,  ...,  0.3818,  1.2466,  2.6020],
        [ 0.0000,  1.0916,  0.0000,  ...,  0.0000,  2.1851,  0.9176],
        [ 0.0000,  1.0916,  0.0000,  ...,  0.0000,  1.3053,  1.7068],
        ...,
        [ 0.0000,  1.8609,  0.2446,  ...,  0.0000,  1.7642,  0.0000],
        [ 0.0000,  0.0000,  0.1028,  ...,  0.0000,  1.7642,  0.0000],
        [ 0.6473,  2.5080,  0.0003,  ...,  0.0000,  1.7642,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.7525,  0.3478,  0.0000],
        [ 0.0000,  0.0000,  0.2627,  ...,  1.5644,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.2627,  ...,  1.5811,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0813,  0.0000],
        [ 0.0000,  0.0000,  0.6747,  ...,  0.0000,  0.0813,  0.0000],
        [ 0.0000,  0.0000,  0.8024,  ...,  0.0000,  0.0813,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.9219,  0.9844,  0.0000,  ...,  0.0000,  0.0468,  0.3869],
        [ 0.7609,  0.8001,  0.0000,  ...,  0.0000,  0.2826,  0.5880],
        [ 0.7609,  0.8001,  0.0000,  ...,  0.0000,  0.0843,  0.0062],
        ...,
        [ 0.8105,  0.5699,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.5259,  1.1855,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3933,  1.0656,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.6900,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.7594],
        [ 0.3439,  0.1717,  0.0000,  ...,  0.0000,  0.0000,  0.7429],
        [ 0.3439,  0.1717,  0.0000,  ...,  0.0000,  0.0000,  0.4926],
        ...,
        [ 0.1747,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.6422,  0.0846,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5516,  0.7275,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[-0.1019,  2.2640,  1.7222,  ...,  1.5094, -0.5658,  0.1437],
        [ 0.0286, -1.2142, -1.0874,  ...,  1.2670,  1.0758, -0.8652],
        [-0.1019,  2.2640,  1.7222,  ...,  1.5094, -0.5658,  0.1437],
        ...,
        [ 2.3559, -0.1010,  0.0207,  ..., -0.4419,  0.8935, -0.9224],
        [ 2.0909,  1.7860, -1.4906,  ..., -0.4419,  0.8935, -0.9224],
        [ 0.5052, -1.1264,  1.9491,  ..., -0.4419,  0.8935, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  1.6382,  0.0000,  ...,  0.0000,  1.6613,  1.5493],
        [ 0.0000,  0.4112,  0.0000,  ...,  0.0000,  1.9275,  1.6142],
        [ 0.0000,  1.6382,  0.0000,  ...,  0.0000,  1.6613,  1.5493],
        ...,
        [ 0.6403,  2.2945,  0.0000,  ...,  0.0000,  1.9508,  0.0000],
        [ 0.2517,  1.7810,  0.0000,  ...,  0.0000,  1.9508,  0.0000],
        [ 0.0000,  0.3614,  0.0000,  ...,  0.0000,  1.9508,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.1179,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0893,  ...,  1.7225,  0.7933,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1179,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.1165,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.2816,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0551,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.6156,  0.9304,  0.1868,  ...,  0.0000,  0.4546,  0.0000],
        [ 1.0665,  1.3644,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.6156,  0.9304,  0.1868,  ...,  0.0000,  0.4546,  0.0000],
        ...,
        [ 0.2502,  1.4674,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.0315,  0.8082,  0.0661,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.5569,  1.0420,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.2626,  0.7383,  0.0000,  ...,  0.0000,  0.0000,  0.5785],
        [ 0.4028,  0.1389,  0.0000,  ...,  0.0000,  0.0000,  0.4708],
        [ 0.2626,  0.7383,  0.0000,  ...,  0.0000,  0.0000,  0.5785],
        ...,
        [ 0.3853,  0.8005,  0.0000,  ...,  0.0000,  0.3233,  0.0000],
        [ 0.0947,  0.0000,  0.0000,  ...,  0.0000,  0.3233,  0.0000],
        [ 0.4825,  0.0000,  0.0000,  ...,  0.0000,  0.3233,  0.0000]], device='cuda:0')
t = 40 / 1000000
 G [bbox_pred]: 2.1251
 G [g_gan_img_loss]: 0.0075
 G [L1_pixel_loss]: 0.9690
 G [total_loss]: 3.4202
 G [g_gan_obj_loss]: 0.0077
 G [ac_loss]: 0.3109
 D_obj [d_obj_gan_loss]: 1.2734
 D_obj [d_ac_loss_real]: 3.2336
 D_obj [d_ac_loss_fake]: 3.1087
 D_img [d_img_gan_loss]: 1.3279
cur_t_vecs
torch.Size([254, 384])
tensor([[ 2.0909,  1.7860, -1.4906,  ..., -0.6853, -0.0486,  0.1554],
        [-1.2330, -0.9477,  0.8601,  ..., -2.1911,  0.5804,  0.7235],
        [ 2.3559, -0.1010,  0.0206,  ..., -0.6853, -0.0486,  0.1554],
        ...,
        [ 1.8401, -0.6286,  1.0465,  ..., -0.4419,  0.8935, -0.9224],
        [ 2.3559, -0.1010,  0.0206,  ..., -0.4419,  0.8935, -0.9224],
        [ 0.0286, -1.2142, -1.0874,  ..., -0.4419,  0.8935, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([254, 384])
tensor([[ 0.0000,  0.1878,  0.0000,  ...,  0.0000,  0.8328,  1.4291],
        [ 0.0000,  2.4947,  0.0000,  ...,  0.0000,  1.0348,  1.6783],
        [ 0.0000,  1.9423,  0.0000,  ...,  0.0000,  0.8328,  1.4291],
        ...,
        [ 0.0210,  1.8502,  0.8874,  ...,  0.0000,  1.9232,  0.0000],
        [ 0.0000,  1.4221,  0.0000,  ...,  0.0000,  1.9232,  0.0000],
        [ 0.0215,  1.7695,  0.0000,  ...,  0.0000,  1.9232,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([254, 384])
tensor([[ 0.0000,  0.0000,  0.1308,  ...,  1.0088,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.0976,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.0088,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0076,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0076,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0076,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([254, 384])
tensor([[ 1.4837,  0.9750,  0.0000,  ...,  0.0000,  0.2189,  0.0000],
        [ 0.0000,  1.7072,  0.0866,  ...,  0.0000,  0.1319,  0.0000],
        [ 0.4527,  1.8718,  0.1427,  ...,  0.0000,  0.2189,  0.0000],
        ...,
        [ 1.7989,  1.0695,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2772,  0.8627,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.8987,  0.5818,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([254, 384])
tensor([[ 0.6398,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.5183],
        [ 0.2957,  0.6818,  0.0000,  ...,  0.0000,  0.0000,  0.4732],
        [ 0.7026,  0.7909,  0.0000,  ...,  0.0000,  0.0000,  0.5183],
        ...,
        [ 0.5059,  0.0000,  0.0000,  ...,  0.0000,  0.1379,  0.0000],
        [ 0.3285,  0.1115,  0.0000,  ...,  0.0000,  0.1379,  0.0000],
        [ 0.2985,  0.0449,  0.0000,  ...,  0.0000,  0.1379,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[-1.9571e+00, -1.4756e+00, -9.0667e-01,  ...,  1.3459e+00,
          7.3982e-01,  1.7767e+00],
        [ 3.8020e-01,  6.9693e-02, -1.1166e+00,  ..., -1.3143e-01,
          7.4429e-01, -1.1506e+00],
        [ 1.9131e+00, -1.1250e+00,  1.9254e+00,  ...,  1.3459e+00,
          7.3982e-01,  1.7767e+00],
        ...,
        [-4.0490e-01, -2.8488e-01, -1.9201e+00,  ..., -4.4186e-01,
          8.9345e-01, -9.2238e-01],
        [ 2.8629e-02, -1.2142e+00, -1.0874e+00,  ..., -4.4186e-01,
          8.9345e-01, -9.2238e-01],
        [ 1.9765e-02,  1.0566e+00, -2.3282e+00,  ..., -4.4186e-01,
          8.9345e-01, -9.2238e-01]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.0000,  0.6722,  0.0000,  ...,  0.0000,  1.5698,  0.7538],
        [ 0.6375,  1.1572,  0.0000,  ...,  0.0000,  0.4470,  1.2829],
        [ 0.2330,  0.4512,  0.1931,  ...,  0.0000,  1.5698,  0.7538],
        ...,
        [ 0.0000,  0.0000,  0.9598,  ...,  0.0000,  1.1874,  0.0000],
        [ 0.0000,  0.9847,  0.4333,  ...,  0.0000,  1.1874,  0.0000],
        [ 0.8311,  2.0095,  0.6636,  ...,  0.0000,  1.1874,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.5180,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.4816,  ...,  0.8184,  0.2616,  0.0000],
        [ 0.0000,  0.0000,  0.2901,  ...,  1.5180,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0398,  ...,  0.0000,  0.1220,  0.0000],
        [ 0.0000,  0.0000,  0.0962,  ...,  0.0000,  0.1220,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1220,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.7858,  0.9214,  0.0000,  ...,  0.0000,  0.2397,  0.1358],
        [ 1.0429,  0.8967,  0.0000,  ...,  0.0000,  0.0000,  0.1835],
        [ 1.3473,  0.9189,  0.0000,  ...,  0.0000,  0.2397,  0.1358],
        ...,
        [ 1.4166,  0.9501,  0.0000,  ...,  0.0000,  0.2295,  0.0000],
        [ 1.4154,  0.7012,  0.0000,  ...,  0.0000,  0.2295,  0.0000],
        [ 0.0000,  1.2502,  0.0352,  ...,  0.0000,  0.2295,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.5049,  0.3617,  0.0000,  ...,  0.0000,  0.0000,  0.8163],
        [ 0.4767,  0.0182,  0.0000,  ...,  0.0000,  0.0000,  0.8444],
        [ 0.3385,  0.0332,  0.0000,  ...,  0.0000,  0.0000,  0.8163],
        ...,
        [ 0.6295,  0.0000,  0.0000,  ...,  0.0000,  0.5360,  0.0000],
        [ 0.3296,  0.0000,  0.0000,  ...,  0.0000,  0.5360,  0.0000],
        [ 0.3811,  0.4765,  0.0000,  ...,  0.0000,  0.5360,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0286, -1.2142, -1.0874,  ..., -2.0017, -0.3207,  0.8153],
        [ 0.2038,  0.2303,  1.2469,  ...,  1.5093, -0.5658,  0.1437],
        [ 0.0286, -1.2142, -1.0874,  ..., -2.0017, -0.3207,  0.8153],
        ...,
        [ 0.3271, -1.5963, -1.2885,  ..., -0.4419,  0.8934, -0.9224],
        [-1.3598,  0.9241,  0.2598,  ..., -0.4419,  0.8934, -0.9224],
        [-0.9359,  1.3450,  1.5364,  ..., -0.4419,  0.8934, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0224,  0.7604,  0.0000,  ...,  0.0000,  1.0082,  0.9950],
        [ 0.2589,  1.9608,  0.3990,  ...,  0.0000,  1.8728,  1.5325],
        [ 0.0224,  0.7604,  0.0000,  ...,  0.0000,  1.0082,  0.9950],
        ...,
        [ 0.0000,  0.2789,  0.0000,  ...,  0.0000,  1.6416,  0.0000],
        [ 0.0000,  2.1097,  0.9164,  ...,  0.0000,  1.6416,  0.0000],
        [ 0.0000,  0.6877,  0.0000,  ...,  0.0000,  1.6416,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  0.0000,  0.0785,  ...,  0.3428,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.4752,  ...,  1.6435,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0785,  ...,  0.3428,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.1799,  ...,  0.0000,  0.0953,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0953,  0.0000],
        [ 0.0000,  0.0000,  0.0121,  ...,  0.0000,  0.0953,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 1.0820,  0.5070,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3458,  0.5620],
        [ 1.0820,  0.5070,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 1.6374,  0.6134,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.4923,  1.5404,  0.4170,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.7900,  0.5502,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.3005,  0.2846,  0.0000,  ...,  0.0000,  0.0000,  0.4495],
        [ 0.3194,  0.9785,  0.0000,  ...,  0.0000,  0.0000,  0.8436],
        [ 0.3005,  0.2846,  0.0000,  ...,  0.0000,  0.0000,  0.4495],
        ...,
        [ 0.6204,  0.0000,  0.0000,  ...,  0.0000,  0.3186,  0.0000],
        [ 0.7769,  0.6943,  0.0000,  ...,  0.0000,  0.3186,  0.0000],
        [ 0.2904,  0.0000,  0.0000,  ...,  0.0000,  0.3186,  0.0000]], device='cuda:0')581061b
572042e
408946a
89707e
233112e
259853a
221633e
355175a
390298c
91263a
30958c
414212a
412992d
500982b
432627d
121172a
269015d
308295c
170687a
103575d
302576c
189033e
49286d
245534b
20291d
466134b
428304c
223420c
521995d
127450a
569602c
385540c
346724d
52324b
400999a
529352e
197029b
409754e
238712c
520389c
153574c
282978b
92107d
459110b
157356a
53464b
365027d
5383d
216026b
11690a
566547e
237859c
60378b
297009a
173565d
119761c
13595b
477468a
509514e
213530e
474105b
173814c
455877a
210266a
171309a
522489d
76802b
146120b
485491e
322121b
14798d
195894e
455902d
6710a
557408d
24026a
533452e
137339b
570579a
242167b
4764e
438267e
324611a
367442b
452459c
329151a
529944e
96067b
400850e
485064e
163412b
388923b
165299d
208585b
71631c
81035b
194050c
142587b
468751d
31442c
101877c
396369b
13576e
560563d
488583b
324740d
488980a
404271d
522704b
139789e
189187a
323129a
260109a
511143a
126204e
135989c
20087d
517417b
109568a
167074b
443086d
113619d
102834e
214873b
493485a
327413b
313608d
400848e
58979c
103582a
96728b
244122d
494795d
472320a
502557d
480576d
289172d
2477b
295491a
289100a
250724b
441816e
478805d
554319c
457086c
306127c
90869b
416188a
354938e
160152a
10082e
397938a
426880c
346915c
389772d
285357c
42704a
167126b
549098e
507148b
288921b
47909e
540926b
363190c
457448d
97170c
545929c
431997e
132516a
364571b
377278b
188498c
176726c
491558e
169395c
302397b
257713b
323479a
557434a
3001a
208267a
257951c
102421d
555800d
22658d
230570b
224629e
243796d
6421c
412384d
569174b
553401b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
185963c
177381e
131374d
261664e
4761e
573149e
187803e
28349d
524924d
127750c
218886e
174303b
246099a
299643b
104537e
550278a
545257e
103558b
546261e
21531c
367605a
515300d
113019c
215612c
107108a
6075a
241178a
522235a
454044a
233869d
26747c
320537b
61202b
23176c
308803a
183539b
102609d
78286b
312359c
154597e
159403e
101426a
217991b
163829e
359164c
459208b
245242c
152245e
75362a
349153c
248591a
84896e
43742e
392476a
37291d
485368b
134597e
310564d
85549b
134849b
88325e
66309b
18155c
543224b
577712e
567305a
316353e
310518e
191690d
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
279345a
107620e
327536c
505642a
150594d
340897e
293576a
438899c
39360d
168417b
331302b
531778b
189648b
295850e
278899b
276694e
353982b
572147e
159199a
134413c
344025a
568677b
110777e
84815e
283809a
39716b
217135c
518918b
444399d
525273e
393647a
150354d
126808e
462929c
578119d
71737d
404395b
288313e
217720d
330954d
132860e
43171d
167995e
84034b
254589a
295693b
332292c
144371b
274424a
207573a
59582d
535265c
509267e
336854d
285651a
47774c
10138e
327813a
552461b
349527d
208347b
277346a
463168c
576526e
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_t_vecs
torch.Size([41, 384])
tensor([[-0.5482,  0.1997,  0.1361,  ...,  1.5093, -0.5658,  0.1437],
        [ 0.0286, -1.2143, -1.0874,  ...,  1.2671,  1.0758, -0.8653],
        [ 0.2217, -1.3413,  1.6087,  ...,  1.5093, -0.5658,  0.1437],
        ...,
        [ 0.0286, -1.2143, -1.0874,  ..., -0.4419,  0.8934, -0.9224],
        [-2.0055, -1.0800,  0.1131,  ..., -0.4419,  0.8934, -0.9224],
        [-1.9571, -1.4757, -0.9067,  ..., -0.4419,  0.8934, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([41, 384])
tensor([[ 0.0000,  2.3175,  1.2042,  ...,  0.0000,  0.9653,  1.7121],
        [ 0.0000,  0.1719,  0.0000,  ...,  0.0000,  1.4640,  1.2544],
        [ 0.0000,  1.1579,  0.1463,  ...,  0.0000,  0.9653,  1.7121],
        ...,
        [ 0.0000,  1.0231,  0.0000,  ...,  0.0000,  1.3568,  0.0000],
        [ 0.0000,  0.0949,  0.0000,  ...,  0.0000,  1.3568,  0.0000],
        [ 0.0000,  1.6729,  0.3801,  ...,  0.0000,  1.3568,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([41, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.4326,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3884,  ...,  1.3908,  0.7956,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.4326,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.3185,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0184,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([41, 384])
tensor([[ 0.0653,  1.0194,  0.4813,  ...,  0.0000,  0.1326,  0.0000],
        [ 1.1727,  0.8163,  0.0000,  ...,  0.0000,  0.2560,  0.4818],
        [ 1.0208,  1.1207,  0.0000,  ...,  0.0000,  0.1326,  0.0000],
        ...,
        [ 0.5962,  0.5496,  0.0000,  ...,  0.0000,  0.1820,  0.0000],
        [ 1.3588,  1.2260,  0.0000,  ...,  0.0000,  0.1820,  0.0000],
        [ 1.0568,  0.9274,  0.0000,  ...,  0.0000,  0.1820,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([41, 384])
tensor([[ 0.6082,  0.9127,  0.0000,  ...,  0.0000,  0.0000,  0.6496],
        [ 0.4857,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.7258],
        [ 0.7502,  0.4457,  0.0000,  ...,  0.0000,  0.0000,  0.6496],
        ...,
        [ 0.4938,  0.2600,  0.0000,  ...,  0.0000,  0.2668,  0.0000],
        [ 0.6622,  0.0983,  0.0000,  ...,  0.0000,  0.2668,  0.0000],
        [ 0.8196,  0.0942,  0.0000,  ...,  0.0000,  0.2668,  0.0000]], device='cuda:0')
Starting epoch 5
cur_t_vecs
torch.Size([230, 384])
tensor([[ 1.8401e+00, -6.2865e-01,  1.0466e+00,  ...,  2.2866e+00,
          1.6527e+00,  2.3984e-01],
        [-1.4564e+00, -2.7163e-01, -3.4778e-01,  ...,  7.6007e-01,
         -1.3398e+00, -1.2998e+00],
        [-1.4564e+00, -2.7163e-01, -3.4778e-01,  ..., -3.6207e+00,
         -1.1025e-01, -6.6000e-01],
        ...,
        [ 1.8401e+00, -6.2865e-01,  1.0466e+00,  ..., -4.4189e-01,
          8.9344e-01, -9.2241e-01],
        [ 1.9796e-02,  1.0565e+00, -2.3283e+00,  ..., -4.4189e-01,
          8.9344e-01, -9.2241e-01],
        [-1.1749e+00,  9.9308e-01, -1.4761e-01,  ..., -4.4189e-01,
          8.9344e-01, -9.2241e-01]], device='cuda:0')
cur_t_vecs
torch.Size([230, 384])
tensor([[ 0.0000,  2.1311,  0.0000,  ...,  0.0000,  2.0977,  0.0520],
        [ 0.0000,  1.8755,  0.9961,  ...,  0.0000,  0.5077,  2.0391],
        [ 0.0000,  1.8755,  0.9961,  ...,  0.0322,  0.4902,  2.6792],
        ...,
        [ 0.0000,  2.6825,  2.2422,  ...,  0.0000,  1.6109,  0.0000],
        [ 0.0000,  0.0395,  0.0000,  ...,  0.0000,  1.6109,  0.0000],
        [ 0.0000,  2.4234,  0.8640,  ...,  0.0000,  1.6109,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([230, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.6749,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.5282,  ...,  0.9259,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.5282,  ...,  1.2986,  0.3833,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3701,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([230, 384])
tensor([[ 1.0769,  1.3065,  0.0000,  ...,  0.0000,  0.1468,  0.0000],
        [ 0.2584,  1.4386,  0.0258,  ...,  0.0000,  0.2405,  0.1278],
        [ 0.2584,  1.4386,  0.0258,  ...,  0.0000,  0.4044,  0.3002],
        ...,
        [ 0.1037,  0.8846,  0.5489,  ...,  0.0000,  0.2284,  0.0000],
        [ 1.9304,  1.0027,  0.0000,  ...,  0.0000,  0.2284,  0.0000],
        [ 0.0000,  1.1191,  1.1152,  ...,  0.0000,  0.2284,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([230, 384])
tensor([[ 0.4910,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.3345],
        [ 0.7832,  1.1991,  0.0000,  ...,  0.0000,  0.0000,  0.5824],
        [ 0.7832,  1.1991,  0.0000,  ...,  0.0000,  0.0000,  0.7330],
        ...,
        [ 0.7263,  0.8252,  0.0000,  ...,  0.0000,  0.4134,  0.0000],
        [ 0.7337,  0.3805,  0.0000,  ...,  0.0000,  0.4134,  0.0000],
        [ 0.6572,  0.7066,  0.0000,  ...,  0.0000,  0.4134,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[-1.9571, -1.4757, -0.9068,  ...,  1.5094, -0.5659,  0.1437],
        [ 0.0286, -1.2143, -1.0874,  ...,  1.3459,  0.7400,  1.7767],
        [ 0.3803,  0.0697, -1.1164,  ..., -0.1312,  0.7444, -1.1507],
        ...,
        [ 0.0286, -1.2143, -1.0874,  ..., -0.4419,  0.8934, -0.9224],
        [ 0.9745,  0.2218,  0.9203,  ..., -0.4419,  0.8934, -0.9224],
        [ 0.1446,  0.3636, -0.5403,  ..., -0.4419,  0.8934, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.0000,  0.9615,  0.0000,  ...,  0.0000,  1.5306,  2.2842],
        [ 0.0000,  0.3417,  0.0000,  ...,  0.0000,  2.2157,  1.2564],
        [ 0.2324,  1.5489,  0.1218,  ...,  0.0000,  0.4745,  1.3377],
        ...,
        [ 0.2385,  2.7663,  0.2257,  ...,  0.0000,  1.4269,  0.0000],
        [ 0.0000,  0.0000,  0.3258,  ...,  0.0000,  1.4269,  0.0000],
        [ 0.5399,  1.8399,  2.2677,  ...,  0.0000,  1.4269,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.9183,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3420,  ...,  1.5400,  0.2153,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.4480,  0.1597,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3451,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3451,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3451,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.6403,  0.4958,  0.0000,  ...,  0.0000,  0.0689,  0.0882],
        [ 1.0038,  1.1780,  0.0000,  ...,  0.0000,  0.3689,  0.5349],
        [ 0.8029,  1.0490,  0.0000,  ...,  0.0000,  0.0647,  0.0752],
        ...,
        [ 0.5579,  1.3022,  0.0705,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.5065,  1.1031,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.3411,  0.4342,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.5076,  0.1796,  0.0000,  ...,  0.0000,  0.0000,  0.8273],
        [ 0.5059,  0.4472,  0.0000,  ...,  0.0000,  0.0000,  1.0301],
        [ 0.5468,  0.1355,  0.0000,  ...,  0.0000,  0.0000,  0.6444],
        ...,
        [ 0.5650,  1.2097,  0.0000,  ...,  0.0000,  0.4837,  0.0000],
        [ 0.8700,  0.1422,  0.0000,  ...,  0.0000,  0.4837,  0.0000],
        [ 0.8756,  0.5720,  0.0000,  ...,  0.0000,  0.4837,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([229, 384])
tensor([[-0.9297,  0.1472,  0.9017,  ...,  0.4894,  0.8378, -1.6203],
        [-0.2259, -0.1828,  0.2312,  ..., -0.4944,  1.5482, -0.4587],
        [-0.2259, -0.1828,  0.2312,  ...,  0.4894,  0.8378, -1.6203],
        ...,
        [-0.1018,  2.2638,  1.7221,  ..., -0.4419,  0.8934, -0.9224],
        [ 1.8401, -0.6286,  1.0466,  ..., -0.4419,  0.8934, -0.9224],
        [ 0.0286, -1.2143, -1.0875,  ..., -0.4419,  0.8934, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([229, 384])
tensor([[ 0.0000,  1.4930,  0.0664,  ...,  0.0000,  1.5388,  0.8976],
        [ 0.0000,  1.8830,  1.1512,  ...,  0.2956,  0.0249,  1.9744],
        [ 0.0000,  1.8830,  1.1512,  ...,  0.0000,  1.5388,  0.8976],
        ...,
        [ 0.0000,  0.2981,  0.0000,  ...,  0.0000,  1.7225,  0.0000],
        [ 0.0000,  1.6009,  1.3333,  ...,  0.0000,  1.7225,  0.0000],
        [ 0.0185,  1.4428,  0.0000,  ...,  0.0000,  1.7225,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([229, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.8811,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1474,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.8811,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.1357,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.5374,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([229, 384])
tensor([[ 1.1384,  1.6650,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2215,  1.2537,  0.1598,  ...,  0.0000,  0.2437,  0.2652],
        [ 0.2215,  1.2537,  0.1598,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 1.4541,  1.0702,  0.0000,  ...,  0.0000,  0.0584,  0.0000],
        [ 0.0000,  1.4294,  0.7805,  ...,  0.0000,  0.0584,  0.0000],
        [ 1.8580,  1.2192,  0.0000,  ...,  0.0000,  0.0584,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([229, 384])
tensor([[ 0.8748,  0.3547,  0.0000,  ...,  0.0000,  0.0000,  0.5599],
        [ 0.9414,  0.7780,  0.0000,  ...,  0.0000,  0.0000,  0.5638],
        [ 0.9414,  0.7780,  0.0000,  ...,  0.0000,  0.0000,  0.5599],
        ...,
        [ 0.9923,  0.4848,  0.0000,  ...,  0.0000,  0.1050,  0.0000],
        [ 0.9161,  0.5038,  0.0000,  ...,  0.0000,  0.1050,  0.0000],
        [ 0.3780,  0.0000,  0.0000,  ...,  0.0000,  0.1050,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[-1.3598e+00,  9.2440e-01,  2.5978e-01,  ..., -1.6888e+00,
          3.8669e-01,  1.6241e+00],
        [-1.3598e+00,  9.2440e-01,  2.5978e-01,  ...,  2.3028e+00,
          4.3308e-01,  2.3989e-01],
        [ 3.2705e-01, -1.5961e+00, -1.2886e+00,  ...,  2.2397e+00,
          1.1009e+00,  3.1700e-01],
        ...,
        [-1.0164e+00, -8.7982e-01,  2.0808e+00,  ..., -4.4193e-01,
          8.9343e-01, -9.2240e-01],
        [ 2.8571e-02, -1.2143e+00, -1.0875e+00,  ..., -4.4193e-01,
          8.9343e-01, -9.2240e-01],
        [-7.5522e-01,  3.2816e-01, -3.3949e-01,  ..., -4.4193e-01,
          8.9343e-01, -9.2240e-01]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.3721,  1.8336,  0.4392,  ...,  0.1804,  0.6291,  0.8067],
        [ 0.3721,  1.8336,  0.4392,  ...,  0.0000,  1.7598,  0.4912],
        [ 0.0000,  0.9666,  0.0000,  ...,  0.0000,  1.3957,  1.6359],
        ...,
        [ 0.0000,  1.8671,  0.3931,  ...,  0.0000,  1.4432,  0.0000],
        [ 0.0000,  0.6390,  0.0000,  ...,  0.0000,  1.4432,  0.0000],
        [ 0.0000,  1.0989,  0.7062,  ...,  0.0000,  1.4432,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.0000,  0.0000,  0.5374,  ...,  0.9800,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.5374,  ...,  1.4484,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  2.0696,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3568,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1259,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.4187,  0.8943,  0.0000,  ...,  0.0000,  0.2541,  0.0000],
        [ 0.4187,  0.8943,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.0389,  1.2209,  0.0000,  ...,  0.0000,  0.0875,  0.2798],
        ...,
        [ 0.6121,  0.8422,  0.0000,  ...,  0.0000,  0.3654,  0.0000],
        [ 0.6744,  0.6207,  0.0000,  ...,  0.0000,  0.3654,  0.0000],
        [ 1.1186,  0.9153,  0.0000,  ...,  0.0000,  0.3654,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.5726,  0.7681,  0.0000,  ...,  0.0000,  0.0000,  0.4675],
        [ 0.5726,  0.7681,  0.0000,  ...,  0.0000,  0.0000,  0.2736],
        [ 0.5203,  0.0659,  0.0000,  ...,  0.0000,  0.0000,  0.7576],
        ...,
        [ 0.4036,  0.0235,  0.0000,  ...,  0.0000,  0.4208,  0.0000],
        [ 0.5435,  0.5501,  0.0000,  ...,  0.0000,  0.4208,  0.0000],
        [ 0.7432,  0.2640,  0.0000,  ...,  0.0000,  0.4208,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 2.2150e-01, -1.3413e+00,  1.6089e+00,  ...,  8.3903e-01,
         -3.9243e-01, -4.2426e-01],
        [ 2.2150e-01, -1.3413e+00,  1.6089e+00,  ...,  8.3903e-01,
         -3.9243e-01, -4.2426e-01],
        [ 2.2150e-01, -1.3413e+00,  1.6089e+00,  ...,  1.5094e+00,
         -5.6603e-01,  1.4375e-01],
        ...,
        [-9.9489e-01, -1.1118e+00, -7.7056e-03,  ..., -4.4193e-01,
          8.9344e-01, -9.2239e-01],
        [ 2.8584e-02, -1.2143e+00, -1.0875e+00,  ..., -4.4193e-01,
          8.9344e-01, -9.2239e-01],
        [ 3.7241e-01, -7.3992e-01, -2.7994e-01,  ..., -4.4193e-01,
          8.9344e-01, -9.2239e-01]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  1.5575,  0.0000,  ...,  0.0000,  0.1667,  1.3944],
        [ 0.0000,  1.5575,  0.0000,  ...,  0.0000,  0.1667,  1.3944],
        [ 0.0000,  1.5575,  0.0000,  ...,  0.0000,  0.6250,  1.8199],
        ...,
        [ 0.0000,  1.6005,  0.8200,  ...,  0.0000,  0.9201,  0.0000],
        [ 0.0000,  1.8841,  0.3003,  ...,  0.0000,  0.9201,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.9201,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  0.3767,  0.0000,  ...,  1.3191,  0.4590,  0.0000],
        [ 0.0000,  0.3767,  0.0000,  ...,  1.3191,  0.4590,  0.0000],
        [ 0.0000,  0.3767,  0.0000,  ...,  1.0475,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.2698,  ...,  0.0000,  0.0080,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0080,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0080,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.0000,  1.2209,  0.6299,  ...,  0.0000,  0.4333,  0.0000],
        [ 0.0000,  1.2209,  0.6299,  ...,  0.0000,  0.4333,  0.0000],
        [ 0.0000,  1.2209,  0.6299,  ...,  0.0000,  0.1926,  0.0000],
        ...,
        [ 0.0000,  0.5178,  0.2732,  ...,  0.0000,  0.4055,  0.0000],
        [ 1.1379,  1.1978,  0.0000,  ...,  0.0000,  0.4055,  0.0000],
        [ 1.6770,  1.2090,  0.0000,  ...,  0.0000,  0.4055,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([237, 384])
tensor([[ 0.6173,  0.6833,  0.0000,  ...,  0.0000,  0.0539,  0.6492],
        [ 0.6173,  0.6833,  0.0000,  ...,  0.0000,  0.0539,  0.6492],
        [ 0.6173,  0.6833,  0.0000,  ...,  0.0000,  0.0000,  0.4720],
        ...,
        [ 0.4061,  0.5984,  0.0000,  ...,  0.0000,  0.5743,  0.0000],
        [ 0.7125,  0.5060,  0.0000,  ...,  0.0000,  0.5743,  0.0000],
        [ 0.7843,  0.0000,  0.0000,  ...,  0.0000,  0.5743,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.2215, -1.3413,  1.6089,  ..., -1.3951, -0.2844,  0.3327],
        [ 0.2215, -1.3413,  1.6089,  ..., -3.6208, -0.1104, -0.6599],
        [ 1.5826, -1.2375,  0.1143,  ...,  1.2673,  1.0756, -0.8654],
        ...,
        [-1.6883,  1.2646, -0.6888,  ..., -0.4419,  0.8934, -0.9224],
        [ 0.0286, -1.2143, -1.0875,  ..., -0.4419,  0.8934, -0.9224],
        [ 2.3559, -0.1012,  0.0202,  ..., -0.4419,  0.8934, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.0000,  0.6532,  0.0000,  ...,  0.0000,  0.7495,  2.6513],
        [ 0.0000,  0.6532,  0.0000,  ...,  0.0789,  0.6851,  2.2371],
        [ 0.0000,  2.0011,  0.0000,  ...,  0.0000,  1.3858,  1.8720],
        ...,
        [ 0.1384,  1.6963,  0.4031,  ...,  0.0000,  1.7766,  0.0000],
        [ 0.0055,  1.8462,  0.0000,  ...,  0.0000,  1.7766,  0.0000],
        [ 0.0000,  0.7931,  0.0000,  ...,  0.0000,  1.7766,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.0000,  0.0000,  0.0164,  ...,  1.1562,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0164,  ...,  1.8622,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.7709,  0.1240,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.4672,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3088,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.4644,  1.1407,  0.0000,  ...,  0.0000,  0.2475,  0.0000],
        [ 0.4644,  1.1407,  0.0000,  ...,  0.0000,  0.4946,  0.0000],
        [ 0.0000,  1.0803,  0.3147,  ...,  0.0000,  0.1836,  0.1379],
        ...,
        [ 0.0000,  1.1289,  0.2766,  ...,  0.0000,  0.1546,  0.0000],
        [ 0.8511,  0.6811,  0.0000,  ...,  0.0000,  0.1546,  0.0000],
        [ 0.7269,  1.5576,  0.0000,  ...,  0.0000,  0.1546,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.3170,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.5913],
        [ 0.3170,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.4468],
        [ 0.1101,  0.5967,  0.0000,  ...,  0.0000,  0.0000,  0.4014],
        ...,
        [ 0.2484,  0.5872,  0.0000,  ...,  0.0960,  0.1032,  0.0000],
        [ 0.3125,  0.1325,  0.0000,  ...,  0.0960,  0.1032,  0.0000],
        [ 0.5380,  0.0000,  0.0000,  ...,  0.0960,  0.1032,  0.0000]], device='cuda:0')
t = 50 / 1000000
 G [bbox_pred]: 2.1910
 G [g_gan_img_loss]: 0.0075
 G [L1_pixel_loss]: 0.8660
 G [total_loss]: 3.3610
 G [g_gan_obj_loss]: 0.0081
 G [ac_loss]: 0.2884
 D_obj [d_obj_gan_loss]: 1.2533
 D_obj [d_ac_loss_real]: 3.0893
 D_obj [d_ac_loss_fake]: 2.8837
 D_img [d_img_gan_loss]: 1.3301
cur_t_vecs
torch.Size([243, 384])
tensor([[ 1.8400, -0.6286,  1.0465,  ..., -0.1310,  0.7444, -1.1508],
        [ 1.9133, -1.1253,  1.9253,  ...,  0.7600, -1.3399, -1.2997],
        [ 1.9133, -1.1253,  1.9253,  ...,  0.7600, -1.3399, -1.2997],
        ...,
        [ 0.0286, -1.2143, -1.0876,  ..., -0.4420,  0.8934, -0.9224],
        [ 0.9746,  0.2215,  0.9201,  ..., -0.4420,  0.8934, -0.9224],
        [ 0.2214, -1.3413,  1.6089,  ..., -0.4420,  0.8934, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([243, 384])
tensor([[ 0.0000,  0.7307,  0.0000,  ...,  0.3043,  1.0218,  0.9814],
        [ 1.0268,  1.8559,  2.1056,  ...,  0.0000,  0.0000,  0.8513],
        [ 1.0268,  1.8559,  2.1056,  ...,  0.0000,  0.0000,  0.8513],
        ...,
        [ 0.1077,  1.5614,  0.6078,  ...,  0.0000,  1.0757,  0.0000],
        [ 0.0000,  0.2670,  0.0930,  ...,  0.0000,  1.0757,  0.0000],
        [ 0.0000,  1.5455,  0.0000,  ...,  0.0000,  1.0757,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([243, 384])
tensor([[ 0.0000,  0.0000,  0.3503,  ...,  0.5003,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.1730,  0.0824,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1739,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([243, 384])
tensor([[ 1.4820,  1.1151,  0.0000,  ...,  0.0000,  0.4063,  0.0000],
        [ 0.1267,  1.6471,  0.6234,  ...,  0.0000,  0.1663,  0.0000],
        [ 0.1267,  1.6471,  0.6234,  ...,  0.0000,  0.1663,  0.0000],
        ...,
        [ 0.8507,  1.1763,  0.0000,  ...,  0.0000,  0.0025,  0.0000],
        [ 0.9604,  1.1083,  0.0000,  ...,  0.0000,  0.0025,  0.0000],
        [ 0.0000,  1.3189,  0.0000,  ...,  0.0000,  0.0025,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([243, 384])
tensor([[ 0.7069,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.5449],
        [ 0.7763,  0.4737,  0.0000,  ...,  0.0000,  0.0000,  0.6550],
        [ 0.7763,  0.4737,  0.0000,  ...,  0.0000,  0.0000,  0.6550],
        ...,
        [ 0.5983,  0.4451,  0.0000,  ...,  0.0924,  0.4871,  0.0000],
        [ 0.5268,  0.0074,  0.0000,  ...,  0.0924,  0.4871,  0.0000],
        [ 0.4481,  0.0000,  0.0000,  ...,  0.0924,  0.4871,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 1.8399e+00, -6.2855e-01,  1.0465e+00,  ..., -8.4791e-01,
         -2.3647e+00,  4.5456e-02],
        [ 1.8399e+00, -6.2855e-01,  1.0465e+00,  ..., -8.4791e-01,
         -2.3647e+00,  4.5456e-02],
        [ 1.5826e+00, -1.2375e+00,  1.1435e-01,  ...,  7.6005e-01,
         -1.3399e+00, -1.2997e+00],
        ...,
        [ 2.8609e-02, -1.2143e+00, -1.0876e+00,  ..., -4.4198e-01,
          8.9345e-01, -9.2238e-01],
        [ 1.5826e+00, -1.2375e+00,  1.1435e-01,  ..., -4.4198e-01,
          8.9345e-01, -9.2238e-01],
        [ 1.4462e-01,  3.6391e-01, -5.4012e-01,  ..., -4.4198e-01,
          8.9345e-01, -9.2238e-01]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  2.0025,  0.5257,  ...,  0.0000,  1.6894,  1.0993],
        [ 0.0000,  2.0025,  0.5257,  ...,  0.0000,  1.6894,  1.0993],
        [ 0.0000,  2.3251,  0.1422,  ...,  0.0000,  0.3896,  2.1855],
        ...,
        [ 0.0000,  1.2182,  0.2802,  ...,  0.0000,  1.2855,  0.0000],
        [ 0.0000,  2.5731,  0.4884,  ...,  0.0000,  1.2855,  0.0000],
        [ 0.0000,  0.6814,  0.9521,  ...,  0.0000,  1.2855,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.4397,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4397,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0276,  ...,  1.4243,  0.6675,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1900,  0.1437,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.5183,  1.2865,  0.0000,  ...,  0.0000,  0.3124,  0.0000],
        [ 0.5183,  1.2865,  0.0000,  ...,  0.0000,  0.3124,  0.0000],
        [ 0.0000,  0.9474,  0.0000,  ...,  0.0000,  0.6859,  0.5388],
        ...,
        [ 0.5925,  1.2480,  0.0000,  ...,  0.0000,  0.1060,  0.0000],
        [ 0.0000,  1.6360,  0.3293,  ...,  0.0000,  0.1060,  0.0000],
        [ 0.7633,  1.3183,  0.0000,  ...,  0.0000,  0.1060,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.8237,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0666],
        [ 0.8237,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0666],
        [ 0.4614,  0.2905,  0.0000,  ...,  0.0000,  0.0000,  0.9577],
        ...,
        [ 0.5574,  0.3268,  0.0000,  ...,  0.0126,  0.3326,  0.0340],
        [ 0.8363,  0.8898,  0.0000,  ...,  0.0126,  0.3326,  0.0340],
        [ 0.6616,  0.0000,  0.0000,  ...,  0.0126,  0.3326,  0.0340]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 3.2698e-01, -1.5960e+00, -1.2887e+00,  ..., -6.8545e-01,
         -4.8376e-02,  1.5528e-01],
        [-9.3593e-01,  1.3452e+00,  1.5363e+00,  ..., -6.8545e-01,
         -4.8376e-02,  1.5528e-01],
        [-9.3593e-01,  1.3452e+00,  1.5363e+00,  ..., -1.6889e+00,
          3.8661e-01,  1.6241e+00],
        ...,
        [ 3.8037e-01,  6.9671e-02, -1.1162e+00,  ..., -4.4200e-01,
          8.9346e-01, -9.2239e-01],
        [ 1.8399e+00, -6.2854e-01,  1.0466e+00,  ..., -4.4200e-01,
          8.9346e-01, -9.2239e-01],
        [ 2.8588e-02, -1.2143e+00, -1.0876e+00,  ..., -4.4200e-01,
          8.9346e-01, -9.2239e-01]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.0000,  1.0449,  0.0000,  ...,  0.0000,  1.2426,  1.2305],
        [ 0.3414,  1.6751,  1.4124,  ...,  0.0000,  1.2426,  1.2305],
        [ 0.3414,  1.6751,  1.4124,  ...,  0.0000,  0.6928,  1.5286],
        ...,
        [ 0.7693,  2.7951,  0.0000,  ...,  0.0000,  0.9739,  0.0000],
        [ 0.0000,  0.7540,  0.0000,  ...,  0.0000,  0.9739,  0.0000],
        [ 0.0000,  1.3900,  0.0402,  ...,  0.0000,  0.9739,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.0000,  0.0000,  0.7395,  ...,  1.1234,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1234,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.4454,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3379,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 1.0627,  0.7688,  0.0000,  ...,  0.0000,  0.0960,  0.0000],
        [ 0.3020,  1.1134,  0.2407,  ...,  0.0000,  0.0960,  0.0000],
        [ 0.3020,  1.1134,  0.2407,  ...,  0.0000,  0.1335,  0.1696],
        ...,
        [ 0.5243,  0.9917,  0.2217,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.1737,  1.5978,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.7741,  0.5070,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.3233,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.5180],
        [ 0.7865,  0.4646,  0.0000,  ...,  0.0000,  0.0000,  0.5180],
        [ 0.7865,  0.4646,  0.0000,  ...,  0.0000,  0.0000,  0.9534],
        ...,
        [ 0.5431,  0.3664,  0.0000,  ...,  0.1453,  0.2176,  0.0000],
        [ 0.9074,  0.2119,  0.0000,  ...,  0.1453,  0.2176,  0.0000],
        [ 0.3072,  0.1043,  0.0000,  ...,  0.1453,  0.2176,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 2.8564e-02, -1.2144e+00, -1.0876e+00,  ..., -4.9450e-01,
          1.5482e+00, -4.5865e-01],
        [-7.9763e-01,  6.8240e-01, -1.1352e+00,  ...,  1.5093e+00,
         -5.6616e-01,  1.4381e-01],
        [ 2.8564e-02, -1.2144e+00, -1.0876e+00,  ..., -4.9450e-01,
          1.5482e+00, -4.5865e-01],
        ...,
        [ 4.6589e-01,  5.1357e-02,  1.4778e+00,  ..., -4.4202e-01,
          8.9346e-01, -9.2240e-01],
        [ 2.8564e-02, -1.2144e+00, -1.0876e+00,  ..., -4.4202e-01,
          8.9346e-01, -9.2240e-01],
        [-2.0056e+00, -1.0801e+00,  1.1321e-01,  ..., -4.4202e-01,
          8.9346e-01, -9.2240e-01]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  0.6714,  0.0000,  ...,  0.4734,  1.0802,  1.3717],
        [ 0.0000,  0.9069,  0.5390,  ...,  0.0000,  2.0890,  1.9507],
        [ 0.0000,  0.6714,  0.0000,  ...,  0.4734,  1.0802,  1.3717],
        ...,
        [ 0.0000,  2.1466,  1.4213,  ...,  0.0000,  1.1934,  0.0000],
        [ 0.3030,  1.0133,  0.0000,  ...,  0.0000,  1.1934,  0.0000],
        [ 0.0000,  0.6970,  0.0000,  ...,  0.0000,  1.1934,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  0.0000,  1.0063,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.4743,  0.0584,  0.0000],
        [ 0.0000,  0.0000,  1.0063,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.5576,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3309,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.9559,  1.3518,  0.0000,  ...,  0.0000,  0.1168,  0.0000],
        [ 0.4145,  0.9195,  0.3567,  ...,  0.0000,  0.6232,  0.4797],
        [ 0.9559,  1.3518,  0.0000,  ...,  0.0000,  0.1168,  0.0000],
        ...,
        [ 0.0000,  1.4082,  0.1913,  ...,  0.0000,  0.4707,  0.0000],
        [ 0.8637,  0.6269,  0.0000,  ...,  0.0000,  0.4707,  0.0000],
        [ 2.2295,  1.5249,  0.0000,  ...,  0.0000,  0.4707,  0.0000]], device='cuda:0')132516a
336854d
546261e
102421d
150354d
494795d
14798d
223420c
6710a
540926b
60378b
385540c
393647a
428304c
569602c
159199a
359164c
131374d
259853a
13595b
58979c
310564d
84896e
570579a
412992d
295850e
30958c
462929c
210266a
340897e
322121b
39360d
246099a
324740d
557408d
137339b
302576c
572147e
349153c
491558e
81035b
4764e
472320a
302397b
531778b
285357c
75362a
10138e
217991b
308295c
404395b
363190c
197029b
295693b
47909e
237859c
457448d
107108a
269015d
502557d
550278a
189187a
566547e
568677b
66309b
245242c
324611a
354938e
254589a
283809a
285651a
581061b
20291d
42704a
176726c
452459c
529944e
474105b
274424a
312359c
5383d
134849b
49286d
500982b
404271d
217135c
572042e
485064e
329151a
173814c
183539b
191690d
349527d
441816e
126808e
289172d
102609d
257713b
39716b
213530e
367442b
208585b
188498c
13576e
248591a
154597e
61202b
293576a
331302b
522704b
157356a
113619d
261664e
533452e
355175a
396369b
257951c
432627d
313608d
260109a
507148b
173565d
414212a
279345a
76802b
165299d
28349d
6421c
160152a
567305a
327413b
505642a
459208b
230570b
107620e
216026b
6075a
389772d
288921b
518918b
320537b
459110b
218886e
110777e
416188a
557434a
468751d
221633e
390298c
400850e
243796d
208347b
96728b
224629e
388923b
71631c
443086d
177381e
22658d
121172a
553401b
288313e
466134b
113019c
84034b
53464b
167074b
152245e
159403e
520389c
522235a
21531c
127450a
515300d
244122d
43742e
524924d
18155c
485368b
308803a
187803e
185963c
194050c
71737d
549098e
132860e
134413c
163412b
153574c
88325e
20087d
97170c
408946a
126204e
215612c
24026a
43171d
163829e
493485a
569174b
101426a
11690a
463168c
367605a
455902d
174303b
543224b
392476a
245534b
477468a
84815e
169395c
412384d
250724b
576526e
103575d
573149e
444399d
278899b
438267e
509267e
102834e
346915c
241178a
521995d
332292c
139789e
282978b
478805d
208267a
454044a
142587b
90869b
52324b
297009a
59582d
310518e
135989c
233869d
92107d
85549b
545257e
409754e
4761e
327813a
346724d
289100a
168417b
26747c
457086c
577712e
552461b
364571b
96067b
555800d
488583b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
167126b
438899c
535265c
189648b
485491e
233112e
171309a
170687a
295491a
455877a
37291d
554319c
344025a
127750c
150594d
517417b
238712c
167995e
119761c
522489d
134597e
529352e
109568a
330954d
488980a
217720d
195894e
431997e
31442c
323129a
91263a
3001a
276694e
377278b
104537e
47774c
327536c
207573a
578119d
101877c
323479a
316353e
89707e
306127c
214873b
426880c
144371b
509514e
103558b
365027d
103582a
400848e
353982b
10082e
480576d
525273e
277346a
189033e
400999a
299643b
545929c
560563d
511143a
146120b
397938a
78286b
23176c
242167b
2477b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.5294,  0.4018,  0.0000,  ...,  0.0000,  0.0000,  0.4389],
        [ 0.2690,  0.3717,  0.0000,  ...,  0.0000,  0.0000,  0.6562],
        [ 0.5294,  0.4018,  0.0000,  ...,  0.0000,  0.0000,  0.4389],
        ...,
        [ 0.5865,  0.7705,  0.0000,  ...,  0.0000,  0.4844,  0.0220],
        [ 0.3687,  0.0000,  0.0000,  ...,  0.0000,  0.4844,  0.0220],
        [ 1.2008,  0.8847,  0.0000,  ...,  0.0000,  0.4844,  0.0220]], device='cuda:0')
cur_t_vecs
torch.Size([43, 384])
tensor([[ 2.0907,  1.7859, -1.4901,  ...,  2.3029,  0.4330,  0.2397],
        [ 2.3559, -0.1013,  0.0199,  ...,  1.5093, -0.5662,  0.1438],
        [ 0.8139, -0.6367,  0.7791,  ..., -2.1908,  0.5801,  0.7235],
        ...,
        [ 1.8399, -0.6285,  1.0466,  ..., -0.4420,  0.8935, -0.9224],
        [ 0.0285, -1.2144, -1.0876,  ..., -0.4420,  0.8935, -0.9224],
        [ 2.3559, -0.1013,  0.0199,  ..., -0.4420,  0.8935, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([43, 384])
tensor([[ 0.2441,  1.3527,  0.0655,  ...,  0.0000,  1.3657,  0.9377],
        [ 0.0000,  0.9008,  0.0000,  ...,  0.0000,  1.5857,  2.0882],
        [ 0.2942,  0.8053,  0.5575,  ...,  0.6399,  1.2395,  0.9633],
        ...,
        [ 0.0000,  1.4579,  0.2527,  ...,  0.0000,  1.5286,  0.0000],
        [ 0.1021,  2.0375,  0.3959,  ...,  0.0000,  1.5286,  0.0000],
        [ 0.0000,  1.5752,  0.0000,  ...,  0.0000,  1.5286,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([43, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.9729,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.7597,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.7669,  0.0698,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0183,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3019,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([43, 384])
tensor([[ 0.9827,  0.8416,  0.0000,  ...,  0.0000,  0.5829,  0.0000],
        [ 0.9234,  1.7356,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1633,  0.6350,  0.2103,  ...,  0.0000,  0.1491,  0.0000],
        ...,
        [ 0.4973,  1.3657,  0.0000,  ...,  0.0000,  0.0331,  0.0000],
        [ 0.3504,  1.9311,  0.4277,  ...,  0.0000,  0.0331,  0.0000],
        [ 0.1264,  1.4889,  0.1280,  ...,  0.0000,  0.0331,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([43, 384])
tensor([[ 0.2550,  0.1944,  0.0000,  ...,  0.0000,  0.0000,  0.6423],
        [ 0.5695,  0.2430,  0.0000,  ...,  0.0000,  0.0000,  0.6753],
        [ 0.5807,  0.6974,  0.0000,  ...,  0.0000,  0.0000,  0.7502],
        ...,
        [ 0.4771,  0.0000,  0.0000,  ...,  0.0000,  0.1470,  0.0000],
        [ 0.3068,  0.7425,  0.0000,  ...,  0.0000,  0.1470,  0.0000],
        [ 0.3101,  0.1961,  0.0000,  ...,  0.0000,  0.1470,  0.0000]], device='cuda:0')
Starting epoch 6
cur_t_vecs
torch.Size([228, 384])
tensor([[-1.3333e+00,  8.1528e-01,  6.4113e-01,  ...,  1.2675e+00,
          1.0755e+00, -8.6554e-01],
        [ 2.2124e-01, -1.3412e+00,  1.6090e+00,  ...,  4.9123e-01,
         -1.0646e+00,  1.3767e+00],
        [ 1.5825e+00, -1.2377e+00,  1.1443e-01,  ...,  1.2675e+00,
          1.0755e+00, -8.6554e-01],
        ...,
        [ 2.8533e-02, -1.2144e+00, -1.0876e+00,  ..., -4.4205e-01,
          8.9347e-01, -9.2241e-01],
        [ 2.0907e+00,  1.7859e+00, -1.4900e+00,  ..., -4.4205e-01,
          8.9347e-01, -9.2241e-01],
        [ 8.1393e-01, -6.3671e-01,  7.7910e-01,  ..., -4.4205e-01,
          8.9347e-01, -9.2241e-01]], device='cuda:0')
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.0000,  0.5834,  0.0000,  ...,  0.0000,  1.8518,  0.7696],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.9804,  1.6559],
        [ 0.0000,  2.1998,  0.3423,  ...,  0.0000,  1.8518,  0.7696],
        ...,
        [ 0.0000,  2.1075,  0.2190,  ...,  0.0000,  1.3731,  0.0000],
        [ 0.3406,  1.9850,  0.4216,  ...,  0.0000,  1.3731,  0.0000],
        [ 0.0000,  0.4051,  0.0000,  ...,  0.0000,  1.3731,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.1447,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.7001,  0.2648,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1447,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1942,  0.0000],
        [ 0.0000,  0.0000,  0.4235,  ...,  0.0000,  0.1942,  0.0000],
        [ 0.0000,  0.0000,  0.0319,  ...,  0.0000,  0.1942,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.6172,  0.8163,  0.0000,  ...,  0.0000,  0.3885,  0.0000],
        [ 0.7542,  1.2891,  0.0000,  ...,  0.0000,  0.4870,  0.3509],
        [ 0.0000,  1.3510,  0.0341,  ...,  0.0000,  0.3885,  0.0000],
        ...,
        [ 0.2539,  1.4701,  0.6939,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3263,  1.1532,  0.5830,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.1814,  1.0196,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.5393,  0.1193,  0.0000,  ...,  0.0000,  0.0000,  0.6432],
        [ 0.5286,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.8917],
        [ 0.3243,  0.3416,  0.0000,  ...,  0.0000,  0.0000,  0.6432],
        ...,
        [ 0.8177,  0.6567,  0.0000,  ...,  0.0000,  0.2175,  0.0465],
        [ 0.5374,  0.6817,  0.0000,  ...,  0.0000,  0.2175,  0.0465],
        [ 0.5399,  0.0000,  0.0000,  ...,  0.0000,  0.2175,  0.0465]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 2.9534e-01, -9.8639e-01,  6.1689e-01,  ...,  1.5093e+00,
         -5.6621e-01,  1.4383e-01],
        [ 2.8517e-02, -1.2144e+00, -1.0876e+00,  ...,  2.0326e+00,
         -1.9299e+00,  6.8323e-01],
        [ 2.9534e-01, -9.8639e-01,  6.1689e-01,  ...,  1.5093e+00,
         -5.6621e-01,  1.4383e-01],
        ...,
        [-3.2824e-01,  8.4432e-01, -7.8916e-01,  ..., -4.4208e-01,
          8.9346e-01, -9.2242e-01],
        [ 1.7642e-01,  3.0383e-01, -6.8529e-01,  ..., -4.4208e-01,
          8.9346e-01, -9.2242e-01],
        [-5.0287e-01,  1.8690e+00,  1.2339e+00,  ..., -4.4208e-01,
          8.9346e-01, -9.2242e-01]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.3986,  2.7054,  0.7676,  ...,  0.0000,  1.2303,  0.9182],
        [ 0.0000,  1.0061,  0.0000,  ...,  0.0000,  0.4413,  1.7323],
        [ 0.3986,  2.7054,  0.7676,  ...,  0.0000,  1.2303,  0.9182],
        ...,
        [ 0.0000,  1.3060,  0.4314,  ...,  0.0000,  1.6256,  0.0000],
        [ 0.0170,  1.4553,  0.0000,  ...,  0.0000,  1.6256,  0.0000],
        [ 0.0000,  2.2420,  0.4642,  ...,  0.0000,  1.6256,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.0000,  0.1367,  0.0000,  ...,  1.2519,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1290,  ...,  0.3729,  0.0000,  0.0000],
        [ 0.0000,  0.1367,  0.0000,  ...,  1.2519,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.4932,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.6200,  1.6092,  0.4502,  ...,  0.0000,  0.1089,  0.0000],
        [ 1.7243,  1.0429,  0.0000,  ...,  0.0000,  0.1550,  0.0276],
        [ 0.6200,  1.6092,  0.4502,  ...,  0.0000,  0.1089,  0.0000],
        ...,
        [ 1.0038,  0.7258,  0.0000,  ...,  0.0000,  0.0772,  0.0000],
        [ 0.5632,  0.7277,  0.0000,  ...,  0.0000,  0.0772,  0.0000],
        [ 1.4443,  0.9568,  0.0000,  ...,  0.0000,  0.0772,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([226, 384])
tensor([[ 0.8945,  0.6413,  0.0000,  ...,  0.0000,  0.0000,  0.7035],
        [ 0.9745,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.6879],
        [ 0.8945,  0.6413,  0.0000,  ...,  0.0000,  0.0000,  0.7035],
        ...,
        [ 0.4974,  0.0000,  0.0000,  ...,  0.0000,  0.3904,  0.0002],
        [ 0.4702,  0.2630,  0.0000,  ...,  0.0000,  0.3904,  0.0002],
        [ 0.1705,  0.0000,  0.0000,  ...,  0.0000,  0.3904,  0.0002]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 1.9134, -1.1254,  1.9254,  ..., -0.1307,  0.7443, -1.1510],
        [-1.9572, -1.4755, -0.9073,  ...,  1.5093, -0.5662,  0.1438],
        [-1.9572, -1.4755, -0.9073,  ..., -3.6209, -0.1103, -0.6597],
        ...,
        [ 1.8397, -0.6285,  1.0465,  ..., -0.4421,  0.8935, -0.9224],
        [-0.2257, -0.1823,  0.2312,  ..., -0.4421,  0.8935, -0.9224],
        [ 2.3559, -0.1014,  0.0197,  ..., -0.4421,  0.8935, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.1051,  1.3246,  0.9244,  ...,  0.0000,  0.3302,  1.7310],
        [ 0.0000,  1.2282,  0.2278,  ...,  0.0000,  1.2060,  0.9876],
        [ 0.0000,  1.2282,  0.2278,  ...,  0.0212,  1.0108,  1.7417],
        ...,
        [ 0.5249,  2.3310,  2.3264,  ...,  0.0000,  1.1349,  0.0000],
        [ 0.0000,  2.7574,  0.9707,  ...,  0.0000,  1.1349,  0.0000],
        [ 0.0000,  0.7166,  0.0000,  ...,  0.0000,  1.1349,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.0000,  0.0000,  0.0254,  ...,  1.2059,  0.2774,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.5373,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.8379,  0.2482,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2243,  0.0000],
        [ 0.0000,  0.0000,  0.1457,  ...,  0.0000,  0.2243,  0.0000],
        [ 0.0000,  0.0000,  0.1062,  ...,  0.0000,  0.2243,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 1.1362,  1.2605,  0.1180,  ...,  0.0000,  0.5567,  0.3851],
        [ 0.7732,  0.5799,  0.0000,  ...,  0.0000,  0.3535,  0.0000],
        [ 0.7732,  0.5799,  0.0000,  ...,  0.0000,  0.7563,  0.5042],
        ...,
        [ 0.0000,  1.5249,  0.4503,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.6188,  0.7246,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.1254,  1.3875,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.6541,  0.3309,  0.0000,  ...,  0.0000,  0.0000,  0.7610],
        [ 0.5682,  0.0893,  0.0000,  ...,  0.0000,  0.0000,  0.4723],
        [ 0.5682,  0.0893,  0.0000,  ...,  0.0000,  0.0000,  0.6921],
        ...,
        [ 0.5509,  0.5357,  0.0000,  ...,  0.0000,  0.3217,  0.0000],
        [ 0.3873,  0.0000,  0.0000,  ...,  0.0000,  0.3217,  0.0000],
        [ 0.7541,  0.0372,  0.0000,  ...,  0.0000,  0.3217,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[-1.0164, -0.8796,  2.0807,  ...,  0.7601, -1.3399, -1.2996],
        [-1.4566, -0.2713, -0.3478,  ...,  0.7601, -1.3399, -1.2996],
        [-1.0164, -0.8796,  2.0807,  ..., -0.7908,  0.9977,  1.7895],
        ...,
        [ 1.8397, -0.6285,  1.0465,  ..., -0.4422,  0.8934, -0.9224],
        [ 0.0285, -1.2143, -1.0876,  ..., -0.4422,  0.8934, -0.9224],
        [-1.1746,  0.9925, -0.1478,  ..., -0.4422,  0.8934, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.4159,  2.6340,  1.0525,  ...,  0.0000,  0.6313,  0.0000],
        [ 0.0000,  1.2014,  1.0929,  ...,  0.0000,  0.6313,  0.0000],
        [ 0.4159,  2.6340,  1.0525,  ...,  0.2060,  0.0227,  1.4764],
        ...,
        [ 0.0000,  1.1898,  0.0776,  ...,  0.0000,  1.3714,  0.0000],
        [ 0.0000,  1.2320,  0.8873,  ...,  0.0000,  1.3714,  0.0000],
        [ 0.0000,  0.7004,  0.6288,  ...,  0.0000,  1.3714,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.0000,  0.0000,  0.2310,  ...,  0.4330,  0.0213,  0.0000],
        [ 0.0000,  0.0000,  0.0435,  ...,  0.4330,  0.0213,  0.0000],
        [ 0.0000,  0.0000,  0.2310,  ...,  1.3625,  0.7045,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3063,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3704,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.3057,  0.9983,  0.2984,  ...,  0.0000,  0.5760,  0.0000],
        [ 0.9151,  0.7141,  0.0000,  ...,  0.0000,  0.5760,  0.0000],
        [ 0.3057,  0.9983,  0.2984,  ...,  0.0000,  0.3893,  0.1769],
        ...,
        [ 1.1396,  0.8326,  0.0000,  ...,  0.0000,  0.1660,  0.0000],
        [ 0.7537,  1.4333,  0.0314,  ...,  0.0000,  0.1660,  0.0000],
        [ 0.6132,  0.2658,  0.0000,  ...,  0.0000,  0.1660,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.3742,  0.2601,  0.0000,  ...,  0.0000,  0.0000,  0.3165],
        [ 0.4220,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.3165],
        [ 0.3742,  0.2601,  0.0000,  ...,  0.0000,  0.0000,  0.4558],
        ...,
        [ 0.6313,  0.0000,  0.0000,  ...,  0.0335,  0.5110,  0.0000],
        [ 0.6140,  0.6639,  0.0000,  ...,  0.0335,  0.5110,  0.0000],
        [ 0.4128,  0.0000,  0.0000,  ...,  0.0335,  0.5110,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([241, 384])
tensor([[-2.1375e+00,  1.0624e+00,  1.4631e+00,  ..., -5.3901e-01,
          3.6917e-01,  2.8461e-01],
        [ 1.7646e-01,  3.0380e-01, -6.8543e-01,  ...,  9.9400e-01,
          4.6317e-02, -3.3880e-01],
        [ 1.7646e-01,  3.0380e-01, -6.8543e-01,  ...,  9.9400e-01,
          4.6317e-02, -3.3880e-01],
        ...,
        [-2.0054e+00, -1.0804e+00,  1.1304e-01,  ..., -4.4219e-01,
          8.9344e-01, -9.2241e-01],
        [ 2.3558e+00, -1.0139e-01,  1.9571e-02,  ..., -4.4219e-01,
          8.9344e-01, -9.2241e-01],
        [ 1.8397e+00, -6.2843e-01,  1.0465e+00,  ..., -4.4219e-01,
          8.9344e-01, -9.2241e-01]], device='cuda:0')
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.2576,  0.9288,  0.0000,  ...,  0.0852,  0.5380,  2.9509],
        [ 0.5450,  1.6012,  0.2604,  ...,  0.5953,  1.9822,  1.1250],
        [ 0.5450,  1.6012,  0.2604,  ...,  0.5953,  1.9822,  1.1250],
        ...,
        [ 0.9167,  1.5736,  0.4772,  ...,  0.0000,  1.5591,  0.0000],
        [ 0.0000,  0.7470,  0.0000,  ...,  0.0000,  1.5591,  0.0000],
        [ 0.1307,  2.3986,  1.3721,  ...,  0.0000,  1.5591,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.1482,  0.0132,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4862,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4862,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1955,  0.0000],
        [ 0.0000,  0.0000,  0.4283,  ...,  0.0000,  0.1955,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1955,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([241, 384])
tensor([[ 1.2255,  0.6133,  0.0000,  ...,  0.0000,  0.0000,  0.0431],
        [ 0.4431,  1.6530,  0.0000,  ...,  0.0000,  0.0119,  0.0000],
        [ 0.4431,  1.6530,  0.0000,  ...,  0.0000,  0.0119,  0.0000],
        ...,
        [ 1.6572,  1.3125,  0.0000,  ...,  0.0000,  0.2176,  0.0000],
        [ 0.9310,  0.7920,  0.0000,  ...,  0.0000,  0.2176,  0.0000],
        [ 0.4715,  1.7946,  0.0000,  ...,  0.0000,  0.2176,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.3151,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.3885],
        [ 0.1110,  0.3569,  0.0000,  ...,  0.0000,  0.0000,  0.3007],
        [ 0.1110,  0.3569,  0.0000,  ...,  0.0000,  0.0000,  0.3007],
        ...,
        [ 0.6825,  0.0786,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.7774,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.7789,  0.6719,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
t = 60 / 1000000
 G [bbox_pred]: 2.2065
 G [g_gan_img_loss]: 0.0080
 G [L1_pixel_loss]: 0.9064
 G [total_loss]: 3.4197
 G [g_gan_obj_loss]: 0.0086
 G [ac_loss]: 0.2902
 D_obj [d_obj_gan_loss]: 1.1221
 D_obj [d_ac_loss_real]: 3.1897
 D_obj [d_ac_loss_fake]: 2.9022
 D_img [d_img_gan_loss]: 1.2701
cur_t_vecs
torch.Size([228, 384])
tensor([[-0.7978,  0.6822, -1.1350,  ...,  0.2614,  0.8835, -0.2254],
        [ 0.4659,  0.0514,  1.4779,  ..., -0.3799, -0.0023,  0.0846],
        [ 0.0284, -1.2143, -1.0876,  ...,  0.2614,  0.8835, -0.2254],
        ...,
        [-0.2256, -0.1822,  0.2312,  ..., -0.4422,  0.8934, -0.9224],
        [ 0.2211, -1.3411,  1.6091,  ..., -0.4422,  0.8934, -0.9224],
        [ 0.0284, -1.2143, -1.0876,  ..., -0.4422,  0.8934, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.8150,  0.9384,  0.0000,  ...,  0.0000,  0.8166,  0.8759],
        [ 0.0000,  0.6555,  0.6830,  ...,  0.0413,  1.7315,  2.2960],
        [ 0.3668,  1.6233,  0.0000,  ...,  0.0000,  0.8166,  0.8759],
        ...,
        [ 0.0000,  2.7925,  2.0774,  ...,  0.0000,  0.3488,  0.0000],
        [ 0.0000,  0.1897,  0.0000,  ...,  0.0000,  0.3488,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3488,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.6620,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.6858,  ...,  1.0539,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.6620,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.2395,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0030,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.5567,  0.9034,  0.0000,  ...,  0.0000,  0.0000,  0.0377],
        [ 0.5784,  0.9875,  0.0000,  ...,  0.0000,  0.6325,  0.4909],
        [ 0.0426,  1.6609,  0.4570,  ...,  0.0000,  0.0000,  0.0377],
        ...,
        [ 0.1237,  0.8927,  0.3857,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.0340,  1.3977,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.5919,  1.2310,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([228, 384])
tensor([[ 0.4716,  0.0618,  0.0000,  ...,  0.0000,  0.0000,  0.3298],
        [ 0.6455,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.5416],
        [ 0.1408,  0.7093,  0.0000,  ...,  0.0000,  0.0000,  0.3298],
        ...,
        [ 0.3771,  0.2340,  0.0000,  ...,  0.0000,  0.5593,  0.0000],
        [ 0.1803,  0.0000,  0.0000,  ...,  0.0000,  0.5593,  0.0000],
        [ 0.5495,  0.1026,  0.0000,  ...,  0.0000,  0.5593,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[ 4.7512e-01, -4.0988e-01,  1.1785e+00,  ...,  9.9395e-01,
          4.6391e-02, -3.3888e-01],
        [ 2.8411e-02, -1.2144e+00, -1.0876e+00,  ...,  1.0843e+00,
          1.0663e+00, -1.2934e+00],
        [ 4.7512e-01, -4.0988e-01,  1.1785e+00,  ...,  3.0193e+00,
          7.8866e-01,  8.5877e-01],
        ...,
        [-2.3337e-01, -3.8951e-01, -6.3128e-01,  ..., -4.4223e-01,
          8.9344e-01, -9.2242e-01],
        [ 1.5824e+00, -1.2378e+00,  1.1456e-01,  ..., -4.4223e-01,
          8.9344e-01, -9.2242e-01],
        [-3.7371e-01, -6.8626e-01, -6.3894e-01,  ..., -4.4223e-01,
          8.9344e-01, -9.2242e-01]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.0000,  0.9161,  0.0000,  ...,  0.2378,  1.3022,  2.0838],
        [ 0.0000,  2.2692,  0.2365,  ...,  0.0000,  0.2301,  2.2414],
        [ 0.0000,  0.9161,  0.0000,  ...,  0.0000,  1.9369,  1.3853],
        ...,
        [ 0.1213,  1.8984,  0.9796,  ...,  0.0000,  1.5966,  0.0000],
        [ 0.0000,  2.0679,  0.0000,  ...,  0.0000,  1.5966,  0.0000],
        [ 0.6383,  3.0457,  0.3902,  ...,  0.0000,  1.5966,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.0000,  0.0000,  0.2334,  ...,  0.7510,  0.0599,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.8265,  0.2484,  0.0000],
        [ 0.0000,  0.0000,  0.2334,  ...,  1.3558,  0.7501,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.1288,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3880,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.8655,  1.0603,  0.0000,  ...,  0.0000,  0.0000,  0.0439],
        [ 0.3381,  1.4725,  0.8535,  ...,  0.0000,  0.3928,  0.1924],
        [ 0.8655,  1.0603,  0.0000,  ...,  0.0000,  0.2686,  0.0000],
        ...,
        [ 0.6685,  1.6523,  0.3510,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.0448,  1.3511,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.6339,  0.5479,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.4382,  0.0363,  0.0000,  ...,  0.0000,  0.0000,  0.4660],
        [ 0.1093,  0.8037,  0.0000,  ...,  0.0000,  0.0000,  0.4226],
        [ 0.4382,  0.0363,  0.0000,  ...,  0.0000,  0.0000,  0.5663],
        ...,
        [ 0.7082,  0.2440,  0.0000,  ...,  0.0000,  0.1880,  0.0000],
        [ 0.2239,  0.0000,  0.0000,  ...,  0.0000,  0.1880,  0.0000],
        [ 0.3984,  0.7947,  0.0000,  ...,  0.0000,  0.1880,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([218, 384])
tensor([[ 2.3558, -0.1015,  0.0194,  ..., -0.3604,  0.0771, -1.6635],
        [-2.0053, -1.0806,  0.1130,  ...,  2.3029,  0.4330,  0.2395],
        [ 1.8395, -0.6283,  1.0464,  ..., -0.3604,  0.0771, -1.6635],
        ...,
        [ 0.1765,  0.3039, -0.6854,  ..., -0.4422,  0.8934, -0.9224],
        [-2.1375,  1.0625,  1.4631,  ..., -0.4422,  0.8934, -0.9224],
        [ 0.4643, -1.0867, -0.2197,  ..., -0.4422,  0.8934, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([218, 384])
tensor([[ 0.0000,  1.3301,  0.0000,  ...,  0.0000,  0.7621,  2.5205],
        [ 0.6831,  0.9089,  0.0000,  ...,  0.0000,  1.3889,  1.1994],
        [ 0.0000,  2.9226,  1.7049,  ...,  0.0000,  0.7621,  2.5205],
        ...,
        [ 0.1479,  1.7874,  0.0000,  ...,  0.0000,  1.0069,  0.0000],
        [ 0.5739,  0.6721,  0.4557,  ...,  0.0000,  1.0069,  0.0000],
        [ 0.4056,  1.0517,  0.0000,  ...,  0.0000,  1.0069,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([218, 384])
tensor([[ 0.0000,  0.0505,  0.0000,  ...,  1.0501,  0.2503,  0.0000],
        [ 0.0000,  0.0000,  0.0932,  ...,  1.5744,  0.0000,  0.0000],
        [ 0.0000,  0.3027,  0.0000,  ...,  1.0501,  0.2503,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3331,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3331,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3331,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([218, 384])
tensor([[ 0.5841,  1.7679,  0.0957,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.1135,  0.8721,  0.0000,  ...,  0.0000,  0.5919,  0.6441],
        [ 0.0000,  1.8833,  0.7756,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.4324,  1.3968,  0.0771,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.5483,  1.0075,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5365,  0.3439,  0.0607,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([218, 384])
tensor([[ 0.6329,  0.3348,  0.0000,  ...,  0.0000,  0.0000,  0.4638],
        [ 0.5791,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.5243],
        [ 0.4992,  0.5335,  0.0000,  ...,  0.0000,  0.0000,  0.4638],
        ...,
        [ 0.2130,  0.4088,  0.0000,  ...,  0.0000,  0.1971,  0.0369],
        [ 0.1449,  0.0894,  0.0000,  ...,  0.0000,  0.1971,  0.0369],
        [ 0.3092,  0.0388,  0.0000,  ...,  0.0000,  0.1971,  0.0369]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 1.9134, -1.1254,  1.9255,  ...,  1.7013,  0.2382, -0.9644],
        [ 0.5800,  0.5446, -0.2229,  ...,  1.7013,  0.2382, -0.9644],
        [ 0.8141, -0.6368,  0.7792,  ..., -0.7515, -1.3859, -1.5315],
        ...,
        [ 1.6688, -1.0916, -0.3156,  ..., -0.4422,  0.8935, -0.9224],
        [ 2.6877, -0.5608,  1.8773,  ..., -0.4422,  0.8935, -0.9224],
        [ 0.1765,  0.3039, -0.6854,  ..., -0.4422,  0.8935, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.2867,  1.9325,  1.4058,  ...,  0.0000,  1.0352,  1.4143],
        [ 0.0000,  1.2238,  0.0962,  ...,  0.0000,  1.0352,  1.4143],
        [ 0.0000,  1.0308,  0.0000,  ...,  0.0000,  0.5342,  1.2800],
        ...,
        [ 0.0000,  1.4119,  0.3900,  ...,  0.0000,  1.2343,  0.0000],
        [ 0.4732,  1.6936,  2.2610,  ...,  0.0000,  1.2343,  0.0000],
        [ 0.0000,  2.4564,  1.2269,  ...,  0.0000,  1.2343,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.8431,  0.2729,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.8431,  0.2729,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.6970,  0.8951,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0045,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.7105,  0.7776,  1.0135,  ...,  0.0000,  0.5285,  0.0000],
        [ 0.6079,  0.2551,  0.0000,  ...,  0.0000,  0.5285,  0.0000],
        [ 1.3010,  1.1920,  0.0000,  ...,  0.0000,  0.4821,  0.5345],
        ...,
        [ 1.3184,  0.8214,  0.0000,  ...,  0.0000,  0.0084,  0.0000],
        [ 0.1603,  0.4526,  0.4611,  ...,  0.0000,  0.0084,  0.0000],
        [ 0.0518,  1.0589,  0.6189,  ...,  0.0000,  0.0084,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.1095,  0.4884,  0.0000,  ...,  0.0000,  0.0000,  0.6128],
        [ 0.2990,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.6128],
        [ 0.4189,  0.2246,  0.0000,  ...,  0.0000,  0.0000,  0.6728],
        ...,
        [ 0.2798,  0.0000,  0.0000,  ...,  0.0000,  0.3696,  0.0000],
        [ 0.0293,  0.6078,  0.0000,  ...,  0.0000,  0.3696,  0.0000],
        [ 0.4942,  0.7061,  0.0000,  ...,  0.0000,  0.3696,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[-0.7548,  0.3284, -0.3401,  ...,  1.5093, -0.5663,  0.1439],
        [-0.7548,  0.3284, -0.3401,  ...,  1.5093, -0.5663,  0.1439],
        [ 0.0284, -1.2144, -1.0875,  ..., -0.4948,  1.5484, -0.4587],
        ...,
        [-1.3335,  0.8153,  0.6415,  ..., -0.4423,  0.8935, -0.9224],
        [ 0.1447,  0.3642, -0.5397,  ..., -0.4423,  0.8935, -0.9224],
        [-1.9573, -1.4753, -0.9076,  ..., -0.4423,  0.8935, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.0528,  1.2334,  1.5180,  ...,  0.0000,  1.9995,  0.9975],
        [ 0.0528,  1.2334,  1.5180,  ...,  0.0000,  1.9995,  0.9975],
        [ 0.0000,  1.2826,  0.0000,  ...,  0.3665,  0.5117,  1.5608],
        ...,
        [ 0.0000,  0.3998,  0.0000,  ...,  0.0000,  1.2653,  0.0000],
        [ 0.0000,  0.3669,  1.1529,  ...,  0.0000,  1.2653,  0.0000],
        [ 0.0000,  2.0964,  1.2092,  ...,  0.0000,  1.2653,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.7175,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.7175,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1732,  ...,  0.3181,  0.5216,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.1224,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2463,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.0000,  0.6699,  0.6904,  ...,  0.0000,  0.7259,  0.0000],
        [ 0.0000,  0.6699,  0.6904,  ...,  0.0000,  0.7259,  0.0000],
        [ 1.0643,  1.4892,  0.0000,  ...,  0.0000,  0.2778,  0.0000],
        ...,
        [ 1.3728,  1.1157,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.9634,  0.8790,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1988,  2.5261,  1.1688,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([252, 384])
tensor([[ 0.3190,  0.4512,  0.0000,  ...,  0.0000,  0.0000,  0.4270],
        [ 0.3190,  0.4512,  0.0000,  ...,  0.0000,  0.0000,  0.4270],
        [ 0.5817,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.3103],
        ...,
        [ 0.8107,  0.1500,  0.0000,  ...,  0.0000,  0.3386,  0.0000],
        [ 0.6615,  0.0000,  0.0000,  ...,  0.0000,  0.3386,  0.0000],
        [ 0.8318,  1.0573,  0.0000,  ...,  0.0000,  0.3386,  0.0000]], device='cuda:0')520389c
66309b
11690a
396369b
569174b
340897e
216026b
462929c
139789e
353982b
488980a
459208b
91263a
522235a
28349d
20291d
577712e
58979c
493485a
119761c
438267e
568677b
329151a
81035b
293576a
459110b
274424a
103558b
567305a
109568a
92107d
397938a
261664e
388923b
428304c
327813a
183539b
6710a
367442b
322121b
578119d
392476a
295850e
390298c
78286b
438899c
159403e
137339b
26747c
208267a
316353e
47909e
71737d
241178a
18155c
132860e
488583b
299643b
441816e
173565d
282978b
409754e
566547e
444399d
233112e
355175a
185963c
6421c
208347b
230570b
85549b
132516a
195894e
283809a
404271d
412992d
557434a
13576e
522704b
491558e
377278b
349153c
42704a
43171d
546261e
364571b
107108a
359164c
336854d
39360d
5383d
59582d
134597e
121172a
455902d
96067b
581061b
102421d
2477b
313608d
457086c
135989c
113619d
218886e
4761e
223420c
254589a
312359c
167074b
572147e
400850e
468751d
4764e
75362a
20087d
152245e
324740d
550278a
188498c
134413c
416188a
573149e
150594d
511143a
494795d
24026a
349527d
288313e
552461b
217991b
323479a
237859c
289100a
22658d
52324b
324611a
545929c
238712c
330954d
570579a
385540c
454044a
250724b
215612c
146120b
197029b
127450a
507148b
569602c
167126b
295491a
466134b
102834e
346724d
163412b
110777e
177381e
60378b
163829e
160152a
389772d
485491e
217720d
269015d
233869d
327413b
76802b
157356a
113019c
509267e
88325e
23176c
257713b
557408d
276694e
414212a
126204e
285651a
101426a
165299d
259853a
167995e
150354d
245534b
404395b
365027d
485064e
84815e
480576d
531778b
168417b
103582a
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
159199a
332292c
96728b
191690d
169395c
320537b
297009a
408946a
127750c
524924d
39716b
10082e
529352e
221633e
134849b
31442c
53464b
525273e
431997e
509514e
412384d
174303b
432627d
189187a
452459c
543224b
194050c
327536c
224629e
248591a
131374d
310564d
533452e
207573a
477468a
213530e
30958c
245242c
502557d
101877c
560563d
289172d
257951c
49286d
400999a
71631c
367605a
47774c
572042e
500982b
346915c
518918b
144371b
354938e
90869b
243796d
246099a
214873b
443086d
554319c
310518e
308803a
426880c
521995d
13595b
126808e
463168c
260109a
21531c
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
102609d
545257e
400848e
540926b
171309a
285357c
279345a
210266a
555800d
84896e
278899b
10138e
107620e
576526e
474105b
553401b
244122d
37291d
455877a
288921b
295693b
217135c
302576c
89707e
84034b
331302b
277346a
457448d
189648b
549098e
208585b
14798d
154597e
104537e
393647a
344025a
153574c
43742e
173814c
61202b
242167b
535265c
142587b
472320a
170687a
529944e
6075a
306127c
97170c
478805d
505642a
3001a
323129a
485368b
363190c
103575d
187803e
517417b
302397b
308295c
176726c
189033e
515300d
522489d
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_t_vecs
torch.Size([50, 384])
tensor([[ 2.3558e+00, -1.0165e-01,  1.9221e-02,  ...,  3.6024e-01,
          5.1551e-01,  2.6842e+00],
        [ 1.8395e+00, -6.2820e-01,  1.0464e+00,  ...,  3.6024e-01,
          5.1551e-01,  2.6842e+00],
        [ 1.8395e+00, -6.2820e-01,  1.0464e+00,  ...,  2.3030e+00,
          4.3305e-01,  2.3945e-01],
        ...,
        [ 2.8405e-02, -1.2144e+00, -1.0875e+00,  ..., -4.4226e-01,
          8.9345e-01, -9.2242e-01],
        [ 1.7649e-01,  3.0394e-01, -6.8536e-01,  ..., -4.4226e-01,
          8.9345e-01, -9.2242e-01],
        [ 2.3558e+00, -1.0165e-01,  1.9221e-02,  ..., -4.4226e-01,
          8.9345e-01, -9.2242e-01]], device='cuda:0')
cur_t_vecs
torch.Size([50, 384])
tensor([[ 0.0000,  0.3255,  0.0000,  ...,  0.1309,  0.7626,  0.4800],
        [ 0.0000,  2.2088,  1.6197,  ...,  0.1309,  0.7626,  0.4800],
        [ 0.0000,  2.2088,  1.6197,  ...,  0.0000,  1.4146,  1.6464],
        ...,
        [ 0.2758,  2.3607,  0.6222,  ...,  0.0000,  1.6369,  0.0000],
        [ 0.2891,  2.3383,  1.0213,  ...,  0.0000,  1.6369,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  1.6369,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([50, 384])
tensor([[ 0.0000,  0.0000,  0.2835,  ...,  0.6662,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.6662,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1499,  0.3100,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0595,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0595,  0.0000],
        [ 0.0000,  0.0000,  0.1571,  ...,  0.0000,  0.0595,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([50, 384])
tensor([[ 0.7512,  1.2299,  0.0000,  ...,  0.0000,  0.0410,  0.0000],
        [ 0.0000,  0.7338,  0.5926,  ...,  0.0000,  0.0410,  0.0000],
        [ 0.0000,  0.7338,  0.5926,  ...,  0.0000,  0.5968,  0.0000],
        ...,
        [ 0.2805,  1.1742,  0.4938,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2179,  0.9817,  0.7752,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.2741,  1.8101,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([50, 384])
tensor([[ 0.6365,  0.4136,  0.0000,  ...,  0.0000,  0.0000,  0.0664],
        [ 0.4142,  0.6390,  0.0000,  ...,  0.0000,  0.0000,  0.0664],
        [ 0.4142,  0.6390,  0.0000,  ...,  0.0000,  0.0000,  0.3711],
        ...,
        [ 0.0000,  0.6014,  0.0000,  ...,  0.0000,  0.0963,  0.0000],
        [ 0.4621,  0.7152,  0.0000,  ...,  0.0000,  0.0963,  0.0000],
        [ 0.6877,  0.3718,  0.0000,  ...,  0.0000,  0.0963,  0.0000]], device='cuda:0')
Starting epoch 7
cur_t_vecs
torch.Size([240, 384])
tensor([[-1.2338e+00, -9.4763e-01,  8.6114e-01,  ...,  1.2579e-01,
         -1.6091e-01,  1.2243e+00],
        [-1.2338e+00, -9.4763e-01,  8.6114e-01,  ...,  1.5093e+00,
         -5.6631e-01,  1.4388e-01],
        [ 2.8400e-02, -1.2144e+00, -1.0875e+00,  ...,  3.6021e-01,
          5.1554e-01,  2.6841e+00],
        ...,
        [-5.4902e-01,  1.9970e-01,  1.3718e-01,  ..., -4.4226e-01,
          8.9344e-01, -9.2241e-01],
        [ 2.8400e-02, -1.2144e+00, -1.0875e+00,  ..., -4.4226e-01,
          8.9344e-01, -9.2241e-01],
        [ 2.2081e-01, -1.3411e+00,  1.6091e+00,  ..., -4.4226e-01,
          8.9344e-01, -9.2241e-01]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  2.6948,  0.7952,  ...,  0.0000,  0.7547,  1.1491],
        [ 0.0000,  2.6948,  0.7952,  ...,  0.0000,  1.9751,  2.0976],
        [ 0.0000,  0.1847,  0.0000,  ...,  0.0000,  0.3431,  1.9304],
        ...,
        [ 0.0000,  2.2868,  0.8239,  ...,  0.0000,  1.3734,  0.0000],
        [ 0.0000,  1.1079,  0.0000,  ...,  0.0000,  1.3734,  0.0000],
        [ 0.0000,  0.4596,  0.0000,  ...,  0.0000,  1.3734,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.6853,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.9154,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.2516,  ...,  0.5108,  0.6528,  0.0000],
        ...,
        [ 0.0000,  0.1032,  0.0000,  ...,  0.0000,  0.1273,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1273,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1273,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  0.5852,  0.0137,  ...,  0.0000,  0.3042,  0.0000],
        [ 0.0000,  0.5852,  0.0137,  ...,  0.0000,  0.5036,  0.3154],
        [ 0.8743,  1.3960,  0.0000,  ...,  0.0000,  0.6390,  0.4369],
        ...,
        [ 0.1152,  1.0793,  1.1235,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2686,  0.7078,  0.4268,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.7582,  1.4186,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  0.4206,  0.0000,  ...,  0.0000,  0.0000,  0.2446],
        [ 0.0000,  0.4206,  0.0000,  ...,  0.0000,  0.0000,  0.5842],
        [ 0.4008,  0.4399,  0.0000,  ...,  0.0000,  0.0000,  0.6111],
        ...,
        [ 0.2490,  0.5505,  0.0000,  ...,  0.0000,  0.1944,  0.0000],
        [ 0.2563,  0.6144,  0.0000,  ...,  0.0000,  0.1944,  0.0000],
        [ 0.4236,  0.3983,  0.0000,  ...,  0.0000,  0.1944,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[-2.1374e+00,  1.0626e+00,  1.4629e+00,  ...,  1.5711e+00,
          3.6106e-01,  8.2602e-01],
        [-2.1374e+00,  1.0626e+00,  1.4629e+00,  ...,  2.2862e+00,
          1.6530e+00,  2.3989e-01],
        [-2.1374e+00,  1.0626e+00,  1.4629e+00,  ...,  3.6019e-01,
          5.1558e-01,  2.6841e+00],
        ...,
        [-1.9572e+00, -1.4753e+00, -9.0771e-01,  ..., -4.4228e-01,
          8.9344e-01, -9.2241e-01],
        [ 1.8394e+00, -6.2810e-01,  1.0464e+00,  ..., -4.4228e-01,
          8.9344e-01, -9.2241e-01],
        [-2.0052e+00, -1.0808e+00,  1.1304e-01,  ..., -4.4228e-01,
          8.9344e-01, -9.2241e-01]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.3021,  0.5719,  0.9431,  ...,  0.0000,  0.8339,  1.0541],
        [ 0.3021,  0.5719,  0.9431,  ...,  0.4603,  1.8598,  0.6156],
        [ 0.3021,  0.5719,  0.9431,  ...,  0.0000,  1.5264,  1.8104],
        ...,
        [ 0.0000,  1.2185,  0.2914,  ...,  0.0000,  1.2793,  0.0000],
        [ 0.0000,  0.5554,  0.0275,  ...,  0.0000,  1.2793,  0.0000],
        [ 1.1626,  0.8780,  0.3310,  ...,  0.0000,  1.2793,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.4044,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.2885,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.4029,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1613,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1613,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1613,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.5090,  0.6781,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5090,  0.6781,  0.0000,  ...,  0.0000,  0.0014,  0.0000],
        [ 0.5090,  0.6781,  0.0000,  ...,  0.0000,  0.3575,  0.2145],
        ...,
        [ 0.7171,  1.6122,  0.0000,  ...,  0.0000,  0.1342,  0.0000],
        [ 1.1938,  1.3019,  0.0000,  ...,  0.0000,  0.1342,  0.0000],
        [ 0.6706,  0.7168,  0.0000,  ...,  0.0000,  0.1342,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.5789,  0.3815,  0.0000,  ...,  0.0000,  0.0000,  0.3237],
        [ 0.5789,  0.3815,  0.0000,  ...,  0.0000,  0.0000,  0.3337],
        [ 0.5789,  0.3815,  0.0000,  ...,  0.0000,  0.0000,  0.2987],
        ...,
        [ 0.7012,  0.3957,  0.0000,  ...,  0.0000,  0.2265,  0.0000],
        [ 0.7263,  0.1087,  0.0000,  ...,  0.0000,  0.2265,  0.0000],
        [ 0.4142,  0.0000,  0.0000,  ...,  0.0000,  0.2265,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([241, 384])
tensor([[ 2.8384e-02, -1.2144e+00, -1.0875e+00,  ..., -4.9486e-01,
          1.5484e+00, -4.5865e-01],
        [-7.1395e-01, -3.5682e+00, -9.5460e-02,  ...,  1.5093e+00,
         -5.6633e-01,  1.4387e-01],
        [-7.1395e-01, -3.5682e+00, -9.5460e-02,  ..., -1.0080e+00,
         -1.6075e+00,  3.9978e-01],
        ...,
        [ 1.7640e-01,  3.0410e-01, -6.8525e-01,  ..., -4.4230e-01,
          8.9343e-01, -9.2242e-01],
        [-2.1374e+00,  1.0626e+00,  1.4628e+00,  ..., -4.4230e-01,
          8.9343e-01, -9.2242e-01],
        [ 4.6443e-01, -1.0863e+00, -2.1952e-01,  ..., -4.4230e-01,
          8.9343e-01, -9.2242e-01]], device='cuda:0')
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.0000,  0.8014,  0.0000,  ...,  0.1438,  0.2929,  1.2860],
        [ 0.0000,  0.9629,  1.5706,  ...,  0.0000,  1.4844,  1.6585],
        [ 0.0000,  0.9629,  1.5706,  ...,  0.0000,  0.8403,  1.2969],
        ...,
        [ 0.7775,  0.8339,  0.0000,  ...,  0.0000,  1.1009,  0.0000],
        [ 0.1736,  0.6764,  0.1295,  ...,  0.0000,  1.1009,  0.0000],
        [ 1.1401,  0.3035,  0.4728,  ...,  0.0000,  1.1009,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.0000,  0.0000,  0.1820,  ...,  0.5897,  0.0472,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1307,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.3807,  0.4952,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.5690,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.5690,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.5690,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([241, 384])
tensor([[ 1.1778,  1.0328,  0.0000,  ...,  0.0000,  0.4680,  0.0000],
        [ 0.0000,  0.7973,  0.6621,  ...,  0.0000,  0.3487,  0.0000],
        [ 0.0000,  0.7973,  0.6621,  ...,  0.0000,  0.5333,  0.3328],
        ...,
        [ 1.3787,  1.0967,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.6360,  0.5583,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.9747,  0.9180,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([241, 384])
tensor([[ 0.4349,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1472,  0.3500,  0.0000,  ...,  0.0000,  0.0000,  0.3839],
        [ 0.1472,  0.3500,  0.0000,  ...,  0.0000,  0.0000,  0.3013],
        ...,
        [ 0.2898,  0.1423,  0.0000,  ...,  0.0000,  0.4284,  0.0000],
        [ 0.2428,  0.3797,  0.0000,  ...,  0.0000,  0.4284,  0.0000],
        [ 0.3217,  0.0559,  0.0000,  ...,  0.0000,  0.4284,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[-1.6883e+00,  1.2649e+00, -6.8757e-01,  ...,  1.5093e+00,
         -5.6633e-01,  1.4386e-01],
        [ 2.2067e-01, -1.3411e+00,  1.6091e+00,  ..., -4.5898e-01,
          5.0364e-01, -5.9953e-01],
        [ 2.3557e+00, -1.0196e-01,  1.8853e-02,  ...,  1.5093e+00,
         -5.6633e-01,  1.4386e-01],
        ...,
        [-1.0163e+00, -8.7951e-01,  2.0806e+00,  ..., -4.4233e-01,
          8.9343e-01, -9.2243e-01],
        [ 1.8394e+00, -6.2802e-01,  1.0464e+00,  ..., -4.4233e-01,
          8.9343e-01, -9.2243e-01],
        [ 4.6583e-01,  5.1378e-02,  1.4780e+00,  ..., -4.4233e-01,
          8.9343e-01, -9.2243e-01]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.0000,  0.2799,  0.4638,  ...,  0.0000,  1.6507,  1.1940],
        [ 0.0000,  1.0358,  0.2300,  ...,  0.0000,  1.0174,  2.1666],
        [ 0.0000,  2.6311,  0.0000,  ...,  0.0000,  1.6507,  1.1940],
        ...,
        [ 0.0000,  1.5520,  1.6465,  ...,  0.0000,  1.4367,  0.0000],
        [ 0.0000,  1.8289,  1.0708,  ...,  0.0000,  1.4367,  0.0000],
        [ 0.0000,  0.9783,  0.2818,  ...,  0.0000,  1.4367,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.4736,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  2.3763,  0.8218,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4736,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1100,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1100,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1100,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.3753,  0.1648,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.4481,  1.2278,  0.0000,  ...,  0.0000,  0.4104,  0.4007],
        [ 0.0000,  1.9512,  0.5290,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0781,  1.2878,  0.3282,  ...,  0.0000,  0.1186,  0.0000],
        [ 1.0887,  1.2018,  0.0000,  ...,  0.0000,  0.1186,  0.0000],
        [ 0.8851,  0.8268,  0.0000,  ...,  0.0000,  0.1186,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([238, 384])
tensor([[ 0.3133,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.1697],
        [ 0.1229,  0.3912,  0.0000,  ...,  0.0000,  0.0000,  0.3097],
        [ 0.2697,  0.5404,  0.0000,  ...,  0.0000,  0.0000,  0.1697],
        ...,
        [ 0.0563,  0.2461,  0.0000,  ...,  0.0000,  0.1312,  0.0000],
        [ 0.4803,  0.3613,  0.0000,  ...,  0.0000,  0.1312,  0.0000],
        [ 0.3649,  0.0000,  0.0000,  ...,  0.0000,  0.1312,  0.0000]], device='cuda:0')
t = 70 / 1000000
 G [bbox_pred]: 2.0683
 G [g_gan_img_loss]: 0.0078
 G [L1_pixel_loss]: 0.9135
 G [total_loss]: 3.2669
 G [g_gan_obj_loss]: 0.0096
 G [ac_loss]: 0.2676
 D_obj [d_obj_gan_loss]: 1.1103
 D_obj [d_ac_loss_real]: 2.9156
 D_obj [d_ac_loss_fake]: 2.6764
 D_img [d_img_gan_loss]: 1.2629
cur_t_vecs
torch.Size([234, 384])
tensor([[ 2.8364e-02, -1.2144e+00, -1.0875e+00,  ..., -1.0724e+00,
         -6.3354e-01,  1.3285e+00],
        [ 2.8364e-02, -1.2144e+00, -1.0875e+00,  ...,  4.8973e-01,
          8.3757e-01, -1.6207e+00],
        [ 1.5824e+00, -1.2382e+00,  1.1477e-01,  ...,  4.8973e-01,
          8.3757e-01, -1.6207e+00],
        ...,
        [ 4.5597e-01,  1.7181e+00,  5.7979e-01,  ..., -4.4235e-01,
          8.9343e-01, -9.2244e-01],
        [ 4.6451e-01, -1.0862e+00, -2.1941e-01,  ..., -4.4235e-01,
          8.9343e-01, -9.2244e-01],
        [-5.7589e-01,  1.1121e+00, -6.4315e-01,  ..., -4.4235e-01,
          8.9343e-01, -9.2244e-01]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.4978,  1.8129,  0.0000,  ...,  0.0107,  0.9924,  1.7100],
        [ 0.4978,  1.8129,  0.0000,  ...,  0.0000,  1.7634,  0.0619],
        [ 0.0000,  0.7635,  1.1875,  ...,  0.0000,  1.7634,  0.0619],
        ...,
        [ 0.0125,  0.2485,  0.3548,  ...,  0.0000,  1.2308,  0.0000],
        [ 0.2318,  0.5121,  0.4774,  ...,  0.0000,  1.2308,  0.0000],
        [ 0.2351,  2.0099,  1.7891,  ...,  0.0000,  1.2308,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.1415,  0.7400,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.8899,  0.0121,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.8899,  0.0121,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3517,  0.0000],
        [ 0.0000,  0.0000,  0.4585,  ...,  0.0000,  0.3517,  0.0000],
        [ 0.0000,  0.0995,  0.0000,  ...,  0.0000,  0.3517,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.5461,  1.7205,  0.7508,  ...,  0.0000,  0.6272,  0.2247],
        [ 0.5461,  1.7205,  0.7508,  ...,  0.0000,  0.1497,  0.0000],
        [ 1.3638,  1.1743,  0.0000,  ...,  0.0000,  0.1497,  0.0000],
        ...,
        [ 0.9854,  0.6335,  0.0000,  ...,  0.0000,  0.1858,  0.0000],
        [ 0.9947,  0.5125,  0.0000,  ...,  0.0000,  0.1858,  0.0000],
        [ 0.1953,  1.2209,  0.5378,  ...,  0.0000,  0.1858,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.3710,  0.5702,  0.0000,  ...,  0.0000,  0.0000,  0.4562],
        [ 0.3710,  0.5702,  0.0000,  ...,  0.0000,  0.0000,  0.1496],
        [ 0.4139,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.1496],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3694,  0.0000],
        [ 0.3088,  0.0000,  0.0000,  ...,  0.0000,  0.3694,  0.0000],
        [ 0.0000,  0.1506,  0.0000,  ...,  0.0000,  0.3694,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[-7.1395e-01, -3.5682e+00, -9.5433e-02,  ...,  9.9389e-01,
          4.6256e-02, -3.3913e-01],
        [ 4.7498e-01, -4.1007e-01,  1.1786e+00,  ...,  1.5093e+00,
         -5.6635e-01,  1.4384e-01],
        [ 2.8360e-02, -1.2144e+00, -1.0875e+00,  ...,  3.0190e+00,
          7.8879e-01,  8.5892e-01],
        ...,
        [-1.0164e+00, -8.7955e-01,  2.0806e+00,  ..., -4.4236e-01,
          8.9343e-01, -9.2246e-01],
        [-2.3347e-01, -3.8979e-01, -6.3150e-01,  ..., -4.4236e-01,
          8.9343e-01, -9.2246e-01],
        [ 1.8394e+00, -6.2790e-01,  1.0463e+00,  ..., -4.4236e-01,
          8.9343e-01, -9.2246e-01]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  0.8914,  0.1609,  ...,  0.0000,  0.7178,  2.0025],
        [ 0.0000,  0.6393,  0.1033,  ...,  0.0000,  1.9336,  2.2585],
        [ 0.0000,  1.7952,  0.5954,  ...,  0.0000,  1.9152,  1.5669],
        ...,
        [ 0.0000,  0.8727,  0.4489,  ...,  0.0000,  1.5704,  0.0000],
        [ 0.0000,  1.2126,  0.0000,  ...,  0.0000,  1.5704,  0.0000],
        [ 0.0000,  0.8597,  0.2144,  ...,  0.0000,  1.5704,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.9123,  0.1761,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.0449,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.6176,  0.6335,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0570,  ...,  0.0000,  0.1579,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1579,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1579,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.8729,  1.1415,  0.0000,  ...,  0.0000,  0.2750,  0.0000],
        [ 0.3253,  0.8628,  0.0000,  ...,  0.0000,  0.6689,  0.7678],
        [ 1.0779,  1.0036,  0.0000,  ...,  0.0000,  0.4731,  0.4744],
        ...,
        [ 0.7212,  0.8288,  0.0000,  ...,  0.0000,  0.0257,  0.0000],
        [ 0.9252,  0.7081,  0.0000,  ...,  0.0000,  0.0257,  0.0000],
        [ 1.0860,  1.5688,  0.0000,  ...,  0.0000,  0.0257,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.5715,  0.2535,  0.0000,  ...,  0.0000,  0.0000,  0.1621],
        [ 0.3779,  0.0260,  0.0000,  ...,  0.0000,  0.0000,  0.5973],
        [ 0.2664,  0.2210,  0.0000,  ...,  0.0000,  0.0000,  0.6428],
        ...,
        [ 0.3861,  0.0000,  0.0000,  ...,  0.0000,  0.2572,  0.0000],
        [ 0.3004,  0.0000,  0.0000,  ...,  0.0000,  0.2572,  0.0000],
        [ 0.5787,  0.0045,  0.0000,  ...,  0.0000,  0.2572,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([253, 384])
tensor([[-4.0433e-01, -2.8543e-01, -1.9203e+00,  ..., -3.6041e-01,
          7.7448e-02, -1.6635e+00],
        [-2.0051e+00, -1.0809e+00,  1.1313e-01,  ...,  1.4654e-02,
         -1.1997e+00,  2.1781e-01],
        [-2.0051e+00, -1.0809e+00,  1.1313e-01,  ...,  1.5093e+00,
         -5.6636e-01,  1.4383e-01],
        ...,
        [-1.0163e+00, -8.7954e-01,  2.0805e+00,  ..., -4.4237e-01,
          8.9343e-01, -9.2246e-01],
        [-1.3336e+00,  8.1531e-01,  6.4166e-01,  ..., -4.4237e-01,
          8.9343e-01, -9.2246e-01],
        [ 2.8360e-02, -1.2144e+00, -1.0875e+00,  ..., -4.4237e-01,
          8.9343e-01, -9.2246e-01]], device='cuda:0')
cur_t_vecs
torch.Size([253, 384])
tensor([[ 1.2797,  1.4228,  0.6830,  ...,  0.0769,  1.3236,  2.8321],
        [ 1.0241,  1.3208,  0.3286,  ...,  0.0000,  0.7886,  0.8168],
        [ 1.0241,  1.3208,  0.3286,  ...,  0.0000,  1.5924,  1.6263],
        ...,
        [ 0.2298,  2.6816,  2.1380,  ...,  0.0000,  1.3047,  0.0000],
        [ 0.0000,  0.8164,  0.0000,  ...,  0.0000,  1.3047,  0.0000],
        [ 0.0000,  0.5510,  0.5528,  ...,  0.0000,  1.3047,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([253, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.1287,  0.1424,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.9883,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.5365,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1453,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1453,  0.0000],
        [ 0.0000,  0.0000,  0.2351,  ...,  0.0000,  0.1453,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([253, 384])
tensor([[ 0.0000,  1.2837,  0.4531,  ...,  0.0000,  0.6094,  0.7984],
        [ 0.7572,  1.2127,  0.0000,  ...,  0.0000,  0.2653,  0.0000],
        [ 0.7572,  1.2127,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.1575,  1.3090,  0.7482,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.9574,  0.6288,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.1784,  1.0991,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([253, 384])
tensor([[ 0.4909,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.6674],
        [ 0.2339,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.2589],
        [ 0.2339,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.1315],
        ...,
        [ 0.4676,  0.1368,  0.0000,  ...,  0.0000,  0.4927,  0.0000],
        [ 0.4979,  0.3956,  0.0000,  ...,  0.0000,  0.4927,  0.0000],
        [ 0.4009,  0.0000,  0.0000,  ...,  0.0000,  0.4927,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 2.8374e-02, -1.2143e+00, -1.0875e+00,  ...,  3.9886e-01,
         -9.7532e-01,  9.4801e-01],
        [-9.2963e-01,  1.4801e-01,  9.0156e-01,  ...,  3.9886e-01,
         -9.7532e-01,  9.4801e-01],
        [ 2.8374e-02, -1.2143e+00, -1.0875e+00,  ..., -4.9491e-01,
          1.5483e+00, -4.5867e-01],
        ...,
        [-7.5468e-01,  3.2851e-01, -3.4030e-01,  ..., -4.4239e-01,
          8.9342e-01, -9.2245e-01],
        [ 2.8374e-02, -1.2143e+00, -1.0875e+00,  ..., -4.4239e-01,
          8.9342e-01, -9.2245e-01],
        [-9.2963e-01,  1.4801e-01,  9.0156e-01,  ..., -4.4239e-01,
          8.9342e-01, -9.2245e-01]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.0000,  2.2585,  0.6819,  ...,  0.5615,  0.9544,  1.2416],
        [ 0.0000,  1.1843,  0.3686,  ...,  0.5615,  0.9544,  1.2416],
        [ 0.0000,  2.2585,  0.6819,  ...,  0.0000,  0.5774,  1.8559],
        ...,
        [ 0.0000,  1.2588,  1.9708,  ...,  0.0000,  1.6267,  0.0000],
        [ 0.0000,  0.6918,  0.3149,  ...,  0.0000,  1.6267,  0.0000],
        [ 0.0000,  1.0974,  0.0000,  ...,  0.0000,  1.6267,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.4112,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4112,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.3381,  0.1067,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.5304,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.3291,  1.0854,  0.8870,  ...,  0.0000,  0.2832,  0.0000],
        [ 1.0624,  0.3319,  0.0000,  ...,  0.0000,  0.2832,  0.0000],
        [ 0.3291,  1.0854,  0.8870,  ...,  0.0000,  0.0000,  0.2148],
        ...,
        [ 0.0345,  0.4296,  0.6324,  ...,  0.0000,  0.1923,  0.0000],
        [ 0.7297,  0.8330,  0.0000,  ...,  0.0000,  0.1923,  0.0000],
        [ 0.7928,  1.5689,  0.0000,  ...,  0.0000,  0.1923,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.1720,  0.0808,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2572,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1720,  0.0808,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.2817,  0.0000,  ...,  0.0000,  0.3341,  0.0000],
        [ 0.5208,  0.0000,  0.0000,  ...,  0.0000,  0.3341,  0.0000],
        [ 0.4453,  0.0279,  0.0000,  ...,  0.0000,  0.3341,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[-1.0163, -0.8795,  2.0805,  ...,  0.7600, -1.3398, -1.2993],
        [ 0.0284, -1.2143, -1.0876,  ...,  0.7600, -1.3398, -1.2993],
        [ 0.0284, -1.2143, -1.0876,  ...,  0.7600, -1.3398, -1.2993],
        ...,
        [ 0.7512,  0.3712, -0.5524,  ..., -0.4424,  0.8934, -0.9224],
        [ 0.7512,  0.3712, -0.5524,  ..., -0.4424,  0.8934, -0.9224],
        [ 0.0284, -1.2143, -1.0876,  ..., -0.4424,  0.8934, -0.9224]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.2558,  1.6624,  1.6780,  ...,  0.0000,  0.4638,  1.4654],
        [ 0.0000,  2.2406,  0.7653,  ...,  0.0000,  0.4638,  1.4654],
        [ 0.0000,  2.2406,  0.7653,  ...,  0.0000,  0.4638,  1.4654],
        ...,
        [ 0.0000,  0.8277,  0.0942,  ...,  0.0000,  1.4875,  0.0000],
        [ 0.0000,  0.2075,  0.1346,  ...,  0.0000,  1.4875,  0.0000],
        [ 0.0454,  1.1120,  0.0000,  ...,  0.0000,  1.4875,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.8224,  0.7931,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.8224,  0.7931,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.8224,  0.7931,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3718,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3718,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3718,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.2280,  1.0484,  0.6565,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1837,  1.5612,  0.9290,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1837,  1.5612,  0.9290,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.8714,  0.5197,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5516,  0.8867,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.9629,  0.7319,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.2921,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5764,  0.5726,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5764,  0.5726,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.3025,  0.2082,  0.0000,  ...,  0.0000,  0.0435,  0.0000],
        [ 0.5359,  0.0890,  0.0000,  ...,  0.0000,  0.0435,  0.0000],
        [ 0.3253,  0.2962,  0.0000,  ...,  0.0000,  0.0435,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.2205, -1.3412,  1.6091,  ...,  1.5092, -0.5664,  0.1438],
        [ 0.0284, -1.2143, -1.0876,  ...,  1.4449, -0.1650,  1.2178],
        [ 0.9741,  0.2204,  0.9187,  ...,  1.2678,  1.0757, -0.8662],
        ...,
        [ 0.2371,  0.3969,  1.0616,  ..., -0.4424,  0.8934, -0.9225],
        [ 0.0284, -1.2143, -1.0876,  ..., -0.4424,  0.8934, -0.9225],
        [-0.3737, -0.6859, -0.6387,  ..., -0.4424,  0.8934, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  1.1748,  0.7509,  ...,  0.0000,  1.0144,  1.5640],
        [ 0.2212,  1.3731,  0.5097,  ...,  0.0000,  1.0970,  1.2825],
        [ 0.0000,  0.5677,  0.0000,  ...,  0.2499,  0.9772,  0.7861],
        ...,
        [ 1.0698,  0.1686,  0.6772,  ...,  0.0000,  1.3948,  0.0000],
        [ 0.3937,  1.5392,  1.2021,  ...,  0.0000,  1.3948,  0.0000],
        [ 0.8312,  2.6465,  1.6115,  ...,  0.0000,  1.3948,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.1494,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.7179,  1.1705,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.2180,  0.6398,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.2448,  ...,  0.0000,  0.3270,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3270,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3270,  0.0000]], device='cuda:0')20291d
288313e
71631c
126204e
553401b
332292c
385540c
119761c
31442c
26747c
359164c
18155c
313608d
248591a
293576a
185963c
230570b
134597e
279345a
261664e
488583b
441816e
167995e
570579a
491558e
103582a
340897e
20087d
511143a
377278b
6075a
577712e
139789e
323129a
135989c
213530e
150594d
187803e
396369b
243796d
414212a
49286d
103558b
457448d
6710a
557408d
392476a
208347b
259853a
363190c
457086c
254589a
283809a
167074b
177381e
127450a
92107d
163829e
245534b
238712c
412992d
444399d
214873b
404271d
306127c
459208b
90869b
462929c
308295c
103575d
13595b
42704a
170687a
459110b
452459c
127750c
113619d
43171d
208267a
52324b
438899c
346915c
566547e
569174b
573149e
409754e
183539b
299643b
454044a
572042e
578119d
545929c
154597e
75362a
107108a
517417b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
242167b
89707e
121172a
132516a
110777e
494795d
455877a
47909e
257951c
39360d
428304c
131374d
189033e
277346a
14798d
78286b
244122d
53464b
400848e
480576d
540926b
426880c
485368b
327813a
101426a
555800d
102609d
210266a
91263a
295850e
276694e
137339b
533452e
353982b
520389c
324611a
438267e
522704b
468751d
320537b
269015d
30958c
288921b
132860e
191690d
515300d
134413c
159403e
102421d
543224b
104537e
509514e
126808e
390298c
367442b
71737d
189187a
463168c
522235a
472320a
364571b
250724b
168417b
529352e
274424a
285357c
101877c
416188a
97170c
560563d
365027d
207573a
223420c
278899b
107620e
217135c
576526e
195894e
194050c
246099a
10082e
431997e
552461b
322121b
58979c
28349d
349153c
455902d
142587b
66309b
173565d
505642a
302576c
535265c
408946a
323479a
557434a
412384d
388923b
524924d
432627d
81035b
197029b
485064e
507148b
216026b
237859c
171309a
400999a
109568a
159199a
289100a
488980a
37291d
88325e
477468a
344025a
152245e
224629e
85549b
295693b
189648b
13576e
96728b
173814c
355175a
23176c
522489d
217991b
331302b
518918b
354938e
397938a
316353e
502557d
525273e
39716b
400850e
500982b
2477b
10138e
531778b
529944e
176726c
217720d
3001a
478805d
310518e
289172d
521995d
509267e
160152a
221633e
43742e
96067b
21531c
84896e
47774c
260109a
466134b
282978b
61202b
4761e
285651a
324740d
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
295491a
310564d
169395c
443086d
241178a
367605a
567305a
308803a
4764e
545257e
113019c
312359c
474105b
349527d
102834e
208585b
302397b
59582d
257713b
485491e
60378b
297009a
346724d
76802b
549098e
134849b
404395b
233112e
327536c
24026a
569602c
153574c
11690a
144371b
493485a
167126b
174303b
327413b
336854d
546261e
157356a
163412b
165299d
329151a
581061b
150354d
146120b
233869d
330954d
550278a
84034b
22658d
572147e
215612c
245242c
5383d
188498c
6421c
393647a
84815e
218886e
554319c
568677b
389772d
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.6161,  0.9279,  0.0000,  ...,  0.0000,  0.8555,  0.4888],
        [ 0.4299,  1.0994,  0.0360,  ...,  0.0000,  0.6909,  0.5506],
        [ 0.8694,  0.1136,  0.0000,  ...,  0.0000,  0.6281,  0.4774],
        ...,
        [ 1.3622,  1.4732,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.0137,  1.0984,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1773,  0.3439,  0.8025,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.3638,  0.1989,  0.0000,  ...,  0.0000,  0.0000,  0.5390],
        [ 0.1942,  0.0799,  0.0000,  ...,  0.0000,  0.0000,  0.5015],
        [ 0.2697,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0604],
        ...,
        [ 0.3190,  0.4502,  0.0000,  ...,  0.0000,  0.4191,  0.0000],
        [ 0.1654,  0.0000,  0.0000,  ...,  0.0000,  0.4191,  0.0000],
        [ 0.0000,  0.3362,  0.0000,  ...,  0.0000,  0.4191,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([32, 384])
tensor([[ 2.0897e+00,  1.7864e+00, -1.4889e+00,  ...,  1.8954e+00,
          1.2857e+00, -5.5685e-01],
        [-3.2810e-01,  8.4503e-01, -7.8899e-01,  ..., -2.1905e+00,
          5.7978e-01,  7.2324e-01],
        [-3.2810e-01,  8.4503e-01, -7.8899e-01,  ..., -2.1905e+00,
          5.7978e-01,  7.2324e-01],
        ...,
        [ 2.3553e+00, -1.0233e-01,  1.8633e-02,  ..., -4.4242e-01,
          8.9341e-01, -9.2247e-01],
        [ 1.8394e+00, -6.2772e-01,  1.0462e+00,  ..., -4.4242e-01,
          8.9341e-01, -9.2247e-01],
        [ 3.8053e-01,  6.9618e-02, -1.1153e+00,  ..., -4.4242e-01,
          8.9341e-01, -9.2247e-01]], device='cuda:0')
cur_t_vecs
torch.Size([32, 384])
tensor([[ 0.0000,  1.0337,  0.0000,  ...,  0.9928,  1.2118,  0.7652],
        [ 0.6450,  2.3261,  0.2734,  ...,  0.0000,  0.7674,  0.5538],
        [ 0.6450,  2.3261,  0.2734,  ...,  0.0000,  0.7674,  0.5538],
        ...,
        [ 0.2492,  2.4047,  0.0000,  ...,  0.0000,  1.6827,  0.0000],
        [ 0.0000,  1.4471,  0.0000,  ...,  0.0000,  1.6827,  0.0000],
        [ 0.6202,  2.1829,  0.6276,  ...,  0.0000,  1.6827,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([32, 384])
tensor([[ 0.0000,  0.0000,  0.1614,  ...,  1.1499,  0.5115,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1650,  0.2164,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1650,  0.2164,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0423,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0423,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0423,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([32, 384])
tensor([[ 1.3652,  1.0066,  0.0000,  ...,  0.0000,  0.2370,  0.0000],
        [ 0.4496,  1.8176,  0.8496,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.4496,  1.8176,  0.8496,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.1330,  2.0046,  0.2746,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.3009,  0.8889,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.0195,  1.1265,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([32, 384])
tensor([[ 0.1967,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.1191],
        [ 0.5330,  0.5731,  0.0000,  ...,  0.0000,  0.0000,  0.6087],
        [ 0.5330,  0.5731,  0.0000,  ...,  0.0000,  0.0000,  0.6087],
        ...,
        [ 0.9595,  0.6398,  0.0000,  ...,  0.0000,  0.3523,  0.0000],
        [ 0.2534,  0.0000,  0.0000,  ...,  0.0000,  0.3523,  0.0000],
        [ 0.3749,  0.0000,  0.0000,  ...,  0.0000,  0.3523,  0.0000]], device='cuda:0')
Starting epoch 8
cur_t_vecs
torch.Size([231, 384])
tensor([[-1.0082e-01,  2.2633e+00,  1.7217e+00,  ...,  1.5091e+00,
         -5.6648e-01,  1.4384e-01],
        [-1.0082e-01,  2.2633e+00,  1.7217e+00,  ...,  2.3032e+00,
          4.3250e-01,  2.3922e-01],
        [ 2.8432e-02, -1.2143e+00, -1.0876e+00,  ...,  2.3032e+00,
          4.3250e-01,  2.3922e-01],
        ...,
        [-7.1385e-01, -3.5683e+00, -9.5415e-02,  ..., -4.4241e-01,
          8.9342e-01, -9.2249e-01],
        [ 2.6875e+00, -5.6055e-01,  1.8776e+00,  ..., -4.4241e-01,
          8.9342e-01, -9.2249e-01],
        [ 2.8432e-02, -1.2143e+00, -1.0876e+00,  ..., -4.4241e-01,
          8.9342e-01, -9.2249e-01]], device='cuda:0')
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.0913,  2.4557,  0.5452,  ...,  0.0000,  1.8889,  1.6828],
        [ 0.0913,  2.4557,  0.5452,  ...,  0.0000,  1.5763,  1.3613],
        [ 0.0000,  1.4388,  0.0000,  ...,  0.0000,  1.5763,  1.3613],
        ...,
        [ 0.0000,  0.2833,  0.0000,  ...,  0.0000,  1.2871,  0.0000],
        [ 0.4647,  1.6535,  2.6256,  ...,  0.0000,  1.2871,  0.0000],
        [ 0.1982,  0.7845,  0.5993,  ...,  0.0000,  1.2871,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.5879,  0.0080,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.7097,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.7097,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2148,  0.0000],
        [ 0.0000,  0.0000,  0.0354,  ...,  0.0000,  0.2148,  0.0000],
        [ 0.0000,  0.0000,  0.3798,  ...,  0.0000,  0.2148,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.2298,  0.7544,  0.0995,  ...,  0.0000,  0.0832,  0.2282],
        [ 0.2298,  0.7544,  0.0995,  ...,  0.0000,  0.5240,  0.0000],
        [ 0.9051,  0.6738,  0.0000,  ...,  0.0000,  0.5240,  0.0000],
        ...,
        [ 1.5759,  0.8027,  0.0000,  ...,  0.0000,  0.2325,  0.0000],
        [ 0.0000,  0.4166,  0.1144,  ...,  0.0000,  0.2325,  0.0000],
        [ 1.5919,  1.3701,  0.0000,  ...,  0.0000,  0.2325,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([231, 384])
tensor([[ 0.2008,  0.2255,  0.0000,  ...,  0.0000,  0.0000,  0.3674],
        [ 0.2008,  0.2255,  0.0000,  ...,  0.0000,  0.0000,  0.0551],
        [ 0.0742,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0551],
        ...,
        [ 0.5468,  0.0000,  0.0000,  ...,  0.0000,  0.5418,  0.0000],
        [ 0.2821,  0.0000,  0.0000,  ...,  0.0000,  0.5418,  0.0000],
        [ 0.5204,  0.6326,  0.0000,  ...,  0.0000,  0.5418,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[ 2.2041e-01, -1.3413e+00,  1.6091e+00,  ...,  1.5091e+00,
         -5.6650e-01,  1.4385e-01],
        [ 2.8440e-02, -1.2144e+00, -1.0875e+00,  ...,  1.2679e+00,
          1.0757e+00, -8.6615e-01],
        [ 4.6579e-01,  5.1396e-02,  1.4782e+00,  ...,  1.2679e+00,
          1.0757e+00, -8.6615e-01],
        ...,
        [-1.6883e+00,  1.2653e+00, -6.8747e-01,  ..., -4.4240e-01,
          8.9344e-01, -9.2252e-01],
        [ 2.8440e-02, -1.2144e+00, -1.0875e+00,  ..., -4.4240e-01,
          8.9344e-01, -9.2252e-01],
        [ 2.3551e+00, -1.0247e-01,  1.8578e-02,  ..., -4.4240e-01,
          8.9344e-01, -9.2252e-01]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.0000,  0.7334,  0.0695,  ...,  0.0000,  1.0129,  1.5989],
        [ 0.0000,  0.8341,  0.0000,  ...,  0.0000,  1.2992,  0.5291],
        [ 0.1239,  1.4705,  0.8191,  ...,  0.0000,  1.2992,  0.5291],
        ...,
        [ 0.0523,  1.6845,  1.2749,  ...,  0.0000,  1.7910,  0.0000],
        [ 0.2051,  1.5265,  0.0631,  ...,  0.0000,  1.7910,  0.0000],
        [ 0.0000,  0.1932,  0.0000,  ...,  0.0000,  1.7910,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.4473,  0.0719,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.5759,  0.8982,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.5759,  0.8982,  0.0000],
        ...,
        [ 0.0000,  0.1526,  0.0351,  ...,  0.0000,  0.0759,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0759,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0759,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[ 1.0183,  1.1921,  0.0000,  ...,  0.0000,  0.6831,  0.3858],
        [ 0.6388,  0.5073,  0.0000,  ...,  0.0000,  0.6606,  0.0249],
        [ 0.0037,  0.9278,  0.0664,  ...,  0.0000,  0.6606,  0.0249],
        ...,
        [ 0.0000,  1.3213,  0.3247,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.8563,  0.7241,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.8503,  1.8982,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([234, 384])
tensor([[ 0.6002,  0.1784,  0.0000,  ...,  0.0000,  0.0000,  0.4052],
        [ 0.4755,  0.0525,  0.0000,  ...,  0.0000,  0.0000,  0.3671],
        [ 0.4499,  0.3479,  0.0000,  ...,  0.0000,  0.0000,  0.3671],
        ...,
        [ 0.2928,  0.2552,  0.0000,  ...,  0.0000,  0.1397,  0.0000],
        [ 0.1344,  0.0000,  0.0000,  ...,  0.0000,  0.1397,  0.0000],
        [ 0.5683,  0.7102,  0.0000,  ...,  0.0000,  0.1397,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[-0.3283,  0.8449, -0.7888,  ..., -0.6393,  1.4526, -0.9923],
        [ 0.1762,  0.3044, -0.6850,  ...,  1.5091, -0.5665,  0.1439],
        [-0.2334, -0.3901, -0.6316,  ..., -0.6393,  1.4526, -0.9923],
        ...,
        [-1.1434, -0.4297,  0.4859,  ..., -0.4424,  0.8934, -0.9225],
        [ 2.3551, -0.1025,  0.0186,  ..., -0.4424,  0.8934, -0.9225],
        [ 0.1762,  0.3044, -0.6850,  ..., -0.4424,  0.8934, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.0000,  1.6340,  0.2332,  ...,  0.0000,  1.6222,  1.1784],
        [ 0.0000,  0.9119,  0.0083,  ...,  0.0000,  1.5730,  0.6354],
        [ 0.0000,  2.5361,  0.7157,  ...,  0.0000,  1.6222,  1.1784],
        ...,
        [ 0.0000,  1.5390,  0.4201,  ...,  0.0000,  1.8685,  0.0000],
        [ 0.0000,  2.0015,  0.0000,  ...,  0.0000,  1.8685,  0.0000],
        [ 0.9646,  1.7018,  1.1715,  ...,  0.0000,  1.8685,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.2626,  0.7705,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.2255,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.2626,  0.7705,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.7296,  ...,  0.0000,  0.1771,  0.0000],
        [ 0.0000,  0.0000,  0.3044,  ...,  0.0000,  0.1771,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1771,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.3838,  0.7657,  0.0000,  ...,  0.0000,  0.0000,  0.0417],
        [ 0.7700,  0.5080,  0.0000,  ...,  0.0000,  0.2546,  0.0000],
        [ 0.0074,  1.6499,  0.7881,  ...,  0.0000,  0.0000,  0.0417],
        ...,
        [ 1.5503,  0.5276,  0.0000,  ...,  0.0000,  0.2752,  0.0000],
        [ 0.7353,  1.8218,  0.5250,  ...,  0.0000,  0.2752,  0.0000],
        [ 0.0000,  1.4817,  0.1421,  ...,  0.0000,  0.2752,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([242, 384])
tensor([[ 0.4095,  0.2803,  0.0000,  ...,  0.0000,  0.0000,  0.4409],
        [ 0.3064,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.4319,  0.2393,  0.0000,  ...,  0.0000,  0.0000,  0.4409],
        ...,
        [ 0.2658,  0.0000,  0.0000,  ...,  0.0000,  0.3842,  0.0000],
        [ 0.3276,  0.3073,  0.0000,  ...,  0.0000,  0.3842,  0.0000],
        [ 0.0000,  0.3573,  0.0000,  ...,  0.0000,  0.3842,  0.0000]], device='cuda:0')
t = 80 / 1000000
 G [bbox_pred]: 2.0483
 G [g_gan_img_loss]: 0.0081
 G [L1_pixel_loss]: 0.9701
 G [total_loss]: 3.3188
 G [g_gan_obj_loss]: 0.0115
 G [ac_loss]: 0.2808
 D_obj [d_obj_gan_loss]: 0.9471
 D_obj [d_ac_loss_real]: 3.1273
 D_obj [d_ac_loss_fake]: 2.8082
 D_img [d_img_gan_loss]: 1.2102
cur_t_vecs
torch.Size([248, 384])
tensor([[-1.6882,  1.2654, -0.6875,  ..., -1.0085, -1.6076,  0.3996],
        [ 0.0285, -1.2143, -1.0875,  ..., -0.4590,  0.5040, -0.5995],
        [ 0.0285, -1.2143, -1.0875,  ..., -1.0085, -1.6076,  0.3996],
        ...,
        [ 0.1448,  0.3643, -0.5394,  ..., -0.4424,  0.8934, -0.9225],
        [ 0.0285, -1.2143, -1.0875,  ..., -0.4424,  0.8934, -0.9225],
        [ 0.2204, -1.3413,  1.6090,  ..., -0.4424,  0.8934, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.0000,  0.2314,  0.0000,  ...,  0.0000,  1.4036,  0.0000],
        [ 0.0000,  2.4800,  0.2251,  ...,  0.8300,  1.0158,  3.3805],
        [ 0.0000,  2.4800,  0.2251,  ...,  0.0000,  1.4036,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.1485,  ...,  0.0000,  1.0688,  0.0000],
        [ 0.0000,  2.3037,  0.7491,  ...,  0.0000,  1.0688,  0.0000],
        [ 0.0000,  2.0950,  0.3325,  ...,  0.0000,  1.0688,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.8198,  0.5536,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1926,  0.3051,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.8198,  0.5536,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2452,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2452,  0.0000],
        [ 0.0000,  0.6337,  0.0000,  ...,  0.0000,  0.2452,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[ 1.0315,  1.1323,  0.0000,  ...,  0.0000,  0.2100,  0.0000],
        [ 0.2861,  1.1492,  0.6908,  ...,  0.0000,  0.3021,  0.1261],
        [ 0.2861,  1.1492,  0.6908,  ...,  0.0000,  0.2100,  0.0000],
        ...,
        [ 1.4513,  1.2233,  0.0000,  ...,  0.0000,  0.1801,  0.0000],
        [ 0.0963,  1.0165,  0.8095,  ...,  0.0000,  0.1801,  0.0000],
        [ 0.3726,  1.9717,  1.3837,  ...,  0.0000,  0.1801,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([248, 384])
tensor([[ 0.3120,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.3244],
        [ 0.1858,  0.1058,  0.0000,  ...,  0.0000,  0.0000,  0.4916],
        [ 0.1858,  0.1058,  0.0000,  ...,  0.0000,  0.0000,  0.3244],
        ...,
        [ 0.4083,  0.0000,  0.0000,  ...,  0.0000,  0.4268,  0.0000],
        [ 0.2736,  0.2869,  0.0000,  ...,  0.0000,  0.4268,  0.0000],
        [ 0.9849,  0.4467,  0.0000,  ...,  0.0000,  0.4268,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[-0.5026,  1.8694,  1.2334,  ...,  2.3033,  0.4324,  0.2391],
        [ 0.0285, -1.2143, -1.0876,  ...,  0.7602, -1.3396, -1.2994],
        [-0.5026,  1.8694,  1.2334,  ...,  1.5091, -0.5666,  0.1440],
        ...,
        [ 0.1762,  0.3045, -0.6850,  ..., -0.4424,  0.8934, -0.9225],
        [-2.1374,  1.0626,  1.4624,  ..., -0.4424,  0.8934, -0.9225],
        [ 0.4647, -1.0855, -0.2192,  ..., -0.4424,  0.8934, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.0000,  2.2123,  0.0000,  ...,  0.0000,  2.0143,  1.0654],
        [ 0.0000,  1.4602,  0.9101,  ...,  0.0000,  0.4576,  1.0852],
        [ 0.0000,  2.2123,  0.0000,  ...,  0.0000,  2.1931,  1.5667],
        ...,
        [ 0.0000,  1.3815,  0.0000,  ...,  0.0000,  0.9487,  0.0000],
        [ 0.4525,  0.1305,  0.0000,  ...,  0.0000,  0.9487,  0.0000],
        [ 0.4452,  1.2716,  0.0000,  ...,  0.0000,  0.9487,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.6086,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.6120,  0.7474,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1051,  0.2230,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2330,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2330,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2330,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.0000,  1.0670,  0.6184,  ...,  0.0000,  0.1576,  0.0000],
        [ 1.0822,  0.4862,  0.0064,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.0670,  0.6184,  ...,  0.0000,  0.3759,  0.3471],
        ...,
        [ 1.1083,  1.2220,  0.2451,  ...,  0.0000,  0.3021,  0.0000],
        [ 1.5688,  0.4803,  0.0000,  ...,  0.0000,  0.3021,  0.0000],
        [ 0.7973,  0.0000,  0.0000,  ...,  0.0000,  0.3021,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([247, 384])
tensor([[ 0.1969,  0.6752,  0.0000,  ...,  0.0000,  0.0000,  0.5408],
        [ 0.1218,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.1355],
        [ 0.1969,  0.6752,  0.0000,  ...,  0.0000,  0.0000,  0.7257],
        ...,
        [ 0.2174,  0.2525,  0.0000,  ...,  0.0000,  0.6587,  0.0000],
        [ 0.1616,  0.0000,  0.0000,  ...,  0.0000,  0.6587,  0.0000],
        [ 0.0924,  0.0000,  0.0000,  ...,  0.0000,  0.6587,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.5883,  1.0547, -1.0045,  ...,  0.7602, -1.3396, -1.2994],
        [ 0.0285, -1.2143, -1.0876,  ...,  0.7602, -1.3396, -1.2994],
        [-2.1374,  1.0626,  1.4624,  ...,  1.1242,  0.4095, -1.9293],
        ...,
        [ 2.3549, -0.1025,  0.0185,  ..., -0.4424,  0.8934, -0.9225],
        [-2.0049, -1.0813,  0.1134,  ..., -0.4424,  0.8934, -0.9225],
        [ 1.8393, -0.6276,  1.0462,  ..., -0.4424,  0.8934, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.2923,  1.7112,  0.1950,  ...,  0.0000,  0.1896,  1.4982],
        [ 0.0000,  1.1343,  0.9070,  ...,  0.0000,  0.1896,  1.4982],
        [ 0.0000,  0.9954,  0.4347,  ...,  0.0000,  0.9958,  1.5434],
        ...,
        [ 0.0000,  1.1640,  0.0000,  ...,  0.0000,  1.6675,  0.0000],
        [ 0.8506,  1.0103,  0.0000,  ...,  0.0000,  1.6675,  0.0000],
        [ 0.0493,  1.9983,  0.7039,  ...,  0.0000,  1.6675,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.7025,  0.5459,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.7025,  0.5459,  0.0000],
        [ 0.0000,  0.0602,  0.0000,  ...,  1.5025,  0.5057,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3642,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3642,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3642,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.6909,  0.6228,  0.0000,  ...,  0.0000,  0.0889,  0.0000],
        [ 0.8503,  0.6274,  0.0000,  ...,  0.0000,  0.0889,  0.0000],
        [ 0.0779,  1.4064,  0.4778,  ...,  0.0000,  0.1193,  0.4013],
        ...,
        [ 1.2350,  0.5667,  0.0000,  ...,  0.0725,  0.0000,  0.0000],
        [ 0.6913,  0.3560,  0.0000,  ...,  0.0725,  0.0000,  0.0000],
        [ 0.5989,  1.3572,  0.2730,  ...,  0.0725,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.1062,  0.0000,  0.0000,  ...,  0.0000,  0.1181,  0.0000],
        [ 0.1149,  0.0000,  0.0000,  ...,  0.0000,  0.1181,  0.0000],
        [ 0.3821,  0.2449,  0.0000,  ...,  0.0000,  0.0000,  0.4893],
        ...,
        [ 0.1966,  0.0000,  0.0000,  ...,  0.0000,  0.3949,  0.0000],
        [ 0.1037,  0.0000,  0.0000,  ...,  0.0000,  0.3949,  0.0000],
        [ 0.5118,  0.2509,  0.0000,  ...,  0.0000,  0.3949,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[-0.5026,  1.8694,  1.2334,  ..., -2.1902,  0.5801,  0.7231],
        [-0.5026,  1.8694,  1.2334,  ...,  0.3597,  0.5160,  2.6838],
        [-0.5026,  1.8694,  1.2334,  ..., -2.1902,  0.5801,  0.7231],
        ...,
        [ 0.0285, -1.2143, -1.0876,  ..., -0.4424,  0.8935, -0.9225],
        [-2.0049, -1.0813,  0.1134,  ..., -0.4424,  0.8935, -0.9225],
        [-1.9577, -1.4753, -0.9084,  ..., -0.4424,  0.8935, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  1.9830,  0.8346,  ...,  0.6192,  1.3082,  0.5830],
        [ 0.0000,  1.9830,  0.8346,  ...,  0.4097,  0.9540,  1.0472],
        [ 0.0000,  1.9830,  0.8346,  ...,  0.6192,  1.3082,  0.5830],
        ...,
        [ 0.0000,  0.5558,  0.0000,  ...,  0.0000,  1.1952,  0.0000],
        [ 0.1766,  0.6977,  0.0000,  ...,  0.0000,  1.1952,  0.0000],
        [ 0.4083,  0.6841,  0.0105,  ...,  0.0000,  1.1952,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.5861,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.5469,  0.2862,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.5861,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.2844,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.5504,  0.3666,  1.1196,  ...,  0.0000,  0.1213,  0.0000],
        [ 0.5504,  0.3666,  1.1196,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5504,  0.3666,  1.1196,  ...,  0.0000,  0.1213,  0.0000],
        ...,
        [ 0.8023,  0.4265,  0.0000,  ...,  0.0571,  0.0000,  0.0000],
        [ 0.9530,  0.8552,  0.0000,  ...,  0.0571,  0.0000,  0.0000],
        [ 1.1656,  0.5699,  0.0000,  ...,  0.0571,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  0.3755,  0.0000,  ...,  0.0000,  0.3118,  0.2690],
        [ 0.0000,  0.3755,  0.0000,  ...,  0.0000,  0.0000,  0.1688],
        [ 0.0000,  0.3755,  0.0000,  ...,  0.0000,  0.3118,  0.2690],
        ...,
        [ 0.1353,  0.0000,  0.0000,  ...,  0.0000,  0.6746,  0.0000],
        [ 0.1914,  0.4145,  0.0000,  ...,  0.0000,  0.6746,  0.0000],
        [ 0.4588,  0.1695,  0.0000,  ...,  0.0000,  0.6746,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([251, 384])
tensor([[-0.4041, -0.2856, -1.9204,  ..., -0.3605,  0.0779, -1.6636],
        [ 0.0285, -1.2143, -1.0876,  ..., -0.5390,  0.3683,  0.2837],
        [-2.0049, -1.0814,  0.1134,  ...,  1.5090, -0.5667,  0.1440],
        ...,
        [-0.7545,  0.3287, -0.3405,  ..., -0.4424,  0.8935, -0.9225],
        [ 0.0285, -1.2143, -1.0876,  ..., -0.4424,  0.8935, -0.9225],
        [-0.9294,  0.1486,  0.9014,  ..., -0.4424,  0.8935, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([251, 384])
tensor([[ 0.1523,  0.3701,  0.1489,  ...,  0.5289,  1.1218,  2.3658],
        [ 0.2561,  1.3024,  0.0000,  ...,  0.0763,  0.6760,  2.7006],
        [ 0.5326,  1.2535,  0.8287,  ...,  0.0000,  1.2750,  2.0910],
        ...,
        [ 0.0000,  0.1110,  0.0000,  ...,  0.0000,  1.5795,  0.0000],
        [ 0.0000,  0.7507,  0.0417,  ...,  0.0000,  1.5795,  0.0000],
        [ 0.0000,  2.1822,  1.6139,  ...,  0.0000,  1.5795,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([251, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.6480,  0.6226,  0.0000],
        [ 0.0000,  0.0000,  0.0541,  ...,  1.6643,  0.9794,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1784,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0101,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0101,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0101,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([251, 384])
tensor([[ 1.0734,  0.1452,  0.0000,  ...,  0.0000,  0.1646,  0.5474],
        [ 0.6814,  0.7172,  0.0338,  ...,  0.0000,  0.5430,  0.1976],
        [ 0.9995,  1.2647,  0.0000,  ...,  0.0000,  0.4181,  0.4413],
        ...,
        [ 1.9518,  0.8723,  0.0000,  ...,  0.0000,  0.2131,  0.0000],
        [ 1.2479,  0.9782,  0.0000,  ...,  0.0000,  0.2131,  0.0000],
        [ 0.1689,  1.1561,  0.9549,  ...,  0.0000,  0.2131,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([251, 384])
tensor([[ 0.2430,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.2618],
        [ 0.3988,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.7042],
        [ 0.4132,  0.3517,  0.0000,  ...,  0.0000,  0.0000,  0.5343],
        ...,
        [ 0.1858,  0.0000,  0.0000,  ...,  0.0000,  0.8478,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.8478,  0.0000],
        [ 0.7456,  1.0753,  0.0000,  ...,  0.0000,  0.8478,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[-1.9578, -1.4753, -0.9085,  ...,  1.5090, -0.5667,  0.1440],
        [-1.9578, -1.4753, -0.9085,  ...,  1.5090, -0.5667,  0.1440],
        [ 1.9132, -1.1255,  1.9256,  ...,  1.5090, -0.5667,  0.1440],
        ...,
        [-2.0049, -1.0814,  0.1134,  ..., -0.4423,  0.8935, -0.9225],
        [ 0.0284, -1.2144, -1.0875,  ..., -0.4423,  0.8935, -0.9225],
        [ 0.4564,  1.7189,  0.5801,  ..., -0.4423,  0.8935, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.0000,  1.9285,  1.4519,  ...,  0.0000,  0.8209,  0.3764],
        [ 0.0000,  1.9285,  1.4519,  ...,  0.0000,  0.8209,  0.3764],
        [ 0.3918,  1.7091,  1.8437,  ...,  0.0000,  0.8209,  0.3764],
        ...,
        [ 0.4269,  0.7602,  0.0000,  ...,  0.0000,  1.3406,  0.0000],
        [ 0.0000,  1.2607,  0.0000,  ...,  0.0000,  1.3406,  0.0000],
        [ 0.4242,  0.5591,  0.0000,  ...,  0.0000,  1.3406,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.4751,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4751,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4751,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1042,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.3083,  0.9660,  0.5796,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3083,  0.9660,  0.5796,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5683,  1.0181,  0.7692,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 1.3944,  1.1793,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5763,  0.9639,  0.1133,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.8125,  0.1682,  0.0090,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.5666,  0.4512,  0.0000,  ...,  0.0000,  0.1010,  0.1176],
        [ 0.5666,  0.4512,  0.0000,  ...,  0.0000,  0.1010,  0.1176],
        [ 0.8474,  0.4409,  0.0000,  ...,  0.0000,  0.1010,  0.1176],
        ...,
        [ 0.1901,  0.3821,  0.0000,  ...,  0.0000,  0.6390,  0.0000],
        [ 0.1485,  0.1564,  0.0000,  ...,  0.0000,  0.6390,  0.0000],
        [ 0.1428,  0.0000,  0.0000,  ...,  0.0000,  0.6390,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[-2.0049, -1.0814,  0.1134,  ..., -0.4592,  0.5040, -0.5994],
        [ 2.3548, -0.1025,  0.0183,  ...,  1.5090, -0.5667,  0.1440],
        [ 0.0284, -1.2144, -1.0875,  ...,  2.3032,  0.4323,  0.2390],
        ...,
        [ 0.9738,  0.2201,  0.9181,  ..., -0.4423,  0.8935, -0.9226],
        [ 0.4656,  0.0514,  1.4784,  ..., -0.4423,  0.8935, -0.9226],
        [ 0.0284, -1.2144, -1.0875,  ..., -0.4423,  0.8935, -0.9226]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.5055,  1.1628,  0.0000,  ...,  0.7043,  1.0551,  2.2254],
        [ 0.0000,  0.8263,  0.0000,  ...,  0.0000,  1.9130,  2.1024],
        [ 0.0253,  2.1223,  0.0000,  ...,  0.0000,  1.2372,  0.9887],
        ...,
        [ 0.7725,  1.3961,  0.0000,  ...,  0.0000,  1.1893,  0.0000],
        [ 0.0000,  1.0421,  0.6231,  ...,  0.0000,  1.1893,  0.0000],
        [ 0.3438,  1.7220,  0.8959,  ...,  0.0000,  1.1893,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.7366,  0.3407,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.6336,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.9720,  0.1221,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1480,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1480,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1480,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.4555,  0.6960,  0.0000,  ...,  0.0000,  0.0813,  0.1453],
        [ 0.9582,  1.2151,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.9610,  0.4840,  0.0000,  ...,  0.0000,  0.5348,  0.0000],
        ...,
        [ 0.0641,  0.5009,  0.2726,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.8865,  0.4808,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.9833,  0.7149,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([227, 384])
tensor([[ 0.2360,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.8313],
        [ 0.4249,  0.0982,  0.0000,  ...,  0.0000,  0.0000,  0.5930],
        [ 0.3277,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.4650],
        ...,
        [ 0.3724,  0.2264,  0.0000,  ...,  0.0000,  1.0154,  0.0000],
        [ 0.1989,  0.0000,  0.0000,  ...,  0.0000,  1.0154,  0.0000],
        [ 0.1865,  0.0274,  0.0000,  ...,  0.0000,  1.0154,  0.0000]], device='cuda:0')344025a
109568a
390298c
113619d
246099a
96728b
13576e
39716b
43171d
254589a
289100a
500982b
144371b
511143a
126204e
171309a
329151a
134597e
88325e
189033e
131374d
457448d
37291d
142587b
529944e
84896e
323129a
346724d
110777e
22658d
485491e
505642a
150354d
545257e
452459c
577712e
282978b
30958c
438899c
297009a
573149e
195894e
432627d
5383d
84815e
409754e
60378b
359164c
14798d
552461b
238712c
480576d
150594d
576526e
177381e
327813a
126808e
327536c
283809a
322121b
245534b
187803e
127450a
522489d
159199a
426880c
169395c
91263a
49286d
494795d
278899b
135989c
276694e
554319c
279345a
472320a
6075a
163412b
101877c
107108a
146120b
185963c
261664e
84034b
24026a
244122d
349153c
377278b
525273e
308295c
444399d
210266a
66309b
567305a
324611a
320537b
468751d
302397b
493485a
269015d
509267e
2477b
404395b
306127c
557408d
385540c
396369b
353982b
485368b
400850e
237859c
533452e
160152a
515300d
502557d
139789e
197029b
299643b
31442c
478805d
443086d
455902d
364571b
102834e
365027d
183539b
316353e
568677b
23176c
134413c
389772d
454044a
81035b
163829e
485064e
520389c
346915c
103582a
491558e
566547e
441816e
400848e
20087d
189648b
42704a
167126b
242167b
230570b
259853a
21531c
103558b
224629e
288921b
550278a
61202b
274424a
103575d
157356a
101426a
154597e
459110b
104537e
10082e
13595b
581061b
524924d
137339b
466134b
221633e
6710a
132516a
134849b
324740d
531778b
215612c
245242c
509514e
412384d
488980a
174303b
572147e
194050c
248591a
107620e
113019c
488583b
159403e
462929c
459208b
289172d
522235a
47774c
522704b
428304c
404271d
553401b
285651a
518918b
132860e
408946a
213530e
431997e
293576a
207573a
153574c
295850e
28349d
308803a
11690a
6421c
176726c
412992d
310564d
543224b
257713b
119761c
363190c
165299d
295693b
517417b
43742e
189187a
102421d
208267a
277346a
121172a
312359c
188498c
218886e
47909e
52324b
233869d
127750c
560563d
53464b
217720d
10138e
557434a
313608d
26747c
4761e
223420c
392476a
331302b
97170c
208347b
71631c
76802b
170687a
233112e
168417b
388923b
173814c
438267e
327413b
191690d
173565d
217991b
555800d
250724b
367442b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
214873b
330954d
416188a
546261e
4764e
349527d
288313e
397938a
507148b
85549b
96067b
545929c
336854d
75362a
216026b
260109a
71737d
332292c
367605a
167074b
241178a
323479a
90869b
78286b
302576c
257951c
549098e
569174b
477468a
572042e
92107d
152245e
535265c
39360d
217135c
167995e
208585b
310518e
285357c
455877a
457086c
18155c
529352e
393647a
540926b
569602c
570579a
400999a
355175a
340897e
58979c
578119d
521995d
59582d
474105b
295491a
20291d
3001a
354938e
414212a
102609d
463168c
243796d
89707e
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_t_vecs
torch.Size([45, 384])
tensor([[-1.2349, -0.9482,  0.8618,  ..., -3.6209, -0.1095, -0.6588],
        [ 2.3547, -0.1025,  0.0183,  ...,  0.1249, -0.1604,  1.2237],
        [ 2.3547, -0.1025,  0.0183,  ..., -0.6393,  1.4526, -0.9923],
        ...,
        [ 1.8391, -0.6275,  1.0462,  ..., -0.4423,  0.8935, -0.9226],
        [ 2.3547, -0.1025,  0.0183,  ..., -0.4423,  0.8935, -0.9226],
        [ 0.4656,  0.0514,  1.4785,  ..., -0.4423,  0.8935, -0.9226]], device='cuda:0')
cur_t_vecs
torch.Size([45, 384])
tensor([[ 0.0000,  1.7383,  0.4357,  ...,  0.0000,  0.4779,  1.8923],
        [ 0.0000,  1.3423,  0.0000,  ...,  0.0000,  1.0466,  1.1114],
        [ 0.0000,  1.3423,  0.0000,  ...,  0.0000,  1.1925,  1.4313],
        ...,
        [ 0.0000,  2.2915,  1.3996,  ...,  0.0000,  1.8776,  0.0000],
        [ 0.0000,  1.9701,  0.0000,  ...,  0.0000,  1.8776,  0.0000],
        [ 0.2370,  1.0467,  0.9889,  ...,  0.0000,  1.8776,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([45, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.3693,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1286,  ...,  1.5689,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1286,  ...,  1.3242,  0.7029,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2938,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2938,  0.0000],
        [ 0.0000,  0.0000,  0.1819,  ...,  0.0000,  0.2938,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([45, 384])
tensor([[ 0.6238,  0.3301,  0.0000,  ...,  0.0000,  0.1693,  0.0000],
        [ 0.4088,  0.9551,  0.0160,  ...,  0.0000,  0.0273,  0.6789],
        [ 0.4088,  0.9551,  0.0160,  ...,  0.0000,  0.3033,  0.4347],
        ...,
        [ 0.1532,  0.2582,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.1945,  1.6196,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.3485,  0.9905,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([45, 384])
tensor([[ 0.2995,  0.0268,  0.0000,  ...,  0.0000,  0.0000,  0.1068],
        [ 0.3630,  0.1798,  0.0000,  ...,  0.0000,  0.0000,  1.1701],
        [ 0.3630,  0.1798,  0.0000,  ...,  0.0000,  0.0000,  1.0855],
        ...,
        [ 0.2505,  0.0000,  0.0000,  ...,  0.0000,  0.5959,  0.0000],
        [ 0.4359,  0.2395,  0.0000,  ...,  0.0000,  0.5959,  0.0000],
        [ 0.4699,  0.1149,  0.0000,  ...,  0.0000,  0.5959,  0.0000]], device='cuda:0')
Starting epoch 9
cur_t_vecs
torch.Size([235, 384])
tensor([[ 2.3547, -0.1024,  0.0183,  ...,  0.2613,  0.8826, -0.2255],
        [-2.0048, -1.0814,  0.1134,  ...,  2.3032,  0.4322,  0.2390],
        [ 1.8391, -0.6276,  1.0462,  ...,  2.3032,  0.4322,  0.2390],
        ...,
        [ 0.0284, -1.2145, -1.0875,  ..., -0.4424,  0.8935, -0.9226],
        [ 0.2048,  0.2320,  1.2481,  ..., -0.4424,  0.8935, -0.9226],
        [-0.5759,  1.1128, -0.6421,  ..., -0.4424,  0.8935, -0.9226]], device='cuda:0')
cur_t_vecs
torch.Size([235, 384])
tensor([[ 0.0000,  0.4933,  0.0000,  ...,  0.2178,  1.4314,  1.8648],
        [ 1.0645,  2.3202,  1.0822,  ...,  0.0000,  1.6850,  0.7759],
        [ 0.0000,  2.9793,  1.6692,  ...,  0.0000,  1.6850,  0.7759],
        ...,
        [ 0.0000,  0.3311,  0.6912,  ...,  0.0000,  0.5926,  0.0000],
        [ 0.2433,  2.3060,  0.0000,  ...,  0.0000,  0.5926,  0.0000],
        [ 0.4131,  1.1287,  0.2201,  ...,  0.0000,  0.5926,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([235, 384])
tensor([[ 0.0000,  0.0000,  0.1064,  ...,  0.9645,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1225,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1225,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.7713,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0736,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3421,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([235, 384])
tensor([[ 1.9242,  1.0501,  0.0000,  ...,  0.0000,  0.2046,  0.0000],
        [ 0.0000,  1.8737,  0.3946,  ...,  0.0000,  0.5149,  0.0000],
        [ 0.0000,  1.7950,  0.4116,  ...,  0.0000,  0.5149,  0.0000],
        ...,
        [ 1.6166,  0.7450,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3665,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3762,  0.3619,  0.1684,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([235, 384])
tensor([[ 0.2865,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.4788],
        [ 0.6908,  0.0891,  0.0000,  ...,  0.0000,  0.0000,  0.1182],
        [ 1.0015,  0.8292,  0.0000,  ...,  0.0000,  0.0000,  0.1182],
        ...,
        [ 0.3244,  0.0000,  0.0000,  ...,  0.0720,  0.4540,  0.0000],
        [ 0.1065,  0.1954,  0.0000,  ...,  0.0720,  0.4540,  0.0000],
        [ 0.3540,  0.2340,  0.0000,  ...,  0.0720,  0.4540,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.2202, -1.3414,  1.6089,  ...,  0.4920, -1.0651,  1.3776],
        [-1.9578, -1.4752, -0.9086,  ...,  1.2680,  1.0757, -0.8660],
        [-1.3338,  0.8149,  0.6417,  ..., -0.1300,  0.7440, -1.1517],
        ...,
        [ 2.3547, -0.1024,  0.0183,  ..., -0.4424,  0.8935, -0.9226],
        [ 0.0284, -1.2145, -1.0875,  ..., -0.4424,  0.8935, -0.9226],
        [ 2.6874, -0.5605,  1.8779,  ..., -0.4424,  0.8935, -0.9226]], device='cuda:0')
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.0000,  0.2588,  0.0934,  ...,  0.0000,  0.9024,  1.0842],
        [ 0.0000,  1.1314,  0.6494,  ...,  0.2105,  0.8523,  0.8740],
        [ 0.0000,  1.3435,  0.0000,  ...,  0.9666,  0.2228,  0.9795],
        ...,
        [ 0.1211,  0.3112,  0.0000,  ...,  0.0000,  1.6225,  0.0000],
        [ 0.0000,  1.1112,  0.0000,  ...,  0.0000,  1.6225,  0.0000],
        [ 0.0000,  1.3576,  0.8146,  ...,  0.0000,  1.6225,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.9349,  0.2450,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1338,  0.2004,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.2815,  0.1420,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1552,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([249, 384])
tensor([[ 1.0493,  1.1096,  0.0000,  ...,  0.0000,  0.7453,  0.6697],
        [ 1.2896,  0.7473,  0.0000,  ...,  0.0000,  0.3818,  0.0000],
        [ 0.5521,  0.1302,  0.0000,  ...,  0.0000,  0.2471,  0.2437],
        ...,
        [ 0.4963,  0.7979,  0.0000,  ...,  0.0632,  0.0000,  0.0000],
        [ 1.0187,  0.9417,  0.0000,  ...,  0.0632,  0.0000,  0.0000],
        [ 0.5867,  0.2668,  0.0000,  ...,  0.0632,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([249, 384])
tensor([[ 0.5149,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  1.0607],
        [ 0.5826,  0.1629,  0.0000,  ...,  0.0000,  0.0000,  0.5533],
        [ 0.3914,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.6542],
        ...,
        [ 0.2092,  0.2364,  0.0000,  ...,  0.0000,  0.3358,  0.0000],
        [ 0.1942,  0.2557,  0.0000,  ...,  0.0000,  0.3358,  0.0000],
        [ 0.2534,  0.0000,  0.0000,  ...,  0.0000,  0.3358,  0.0000]], device='cuda:0')
t = 90 / 1000000
 G [bbox_pred]: 2.2009
 G [g_gan_img_loss]: 0.0079
 G [L1_pixel_loss]: 0.9302
 G [total_loss]: 3.4053
 G [g_gan_obj_loss]: 0.0101
 G [ac_loss]: 0.2561
 D_obj [d_obj_gan_loss]: 1.0889
 D_obj [d_ac_loss_real]: 2.7950
 D_obj [d_ac_loss_fake]: 2.5614
 D_img [d_img_gan_loss]: 1.2310
cur_t_vecs
torch.Size([225, 384])
tensor([[ 1.8390e+00, -6.2769e-01,  1.0462e+00,  ..., -4.5934e-01,
          5.0397e-01, -5.9938e-01],
        [-1.6880e+00,  1.2661e+00, -6.8750e-01,  ...,  2.3032e+00,
          4.3214e-01,  2.3889e-01],
        [ 1.8390e+00, -6.2769e-01,  1.0462e+00,  ..., -4.5934e-01,
          5.0397e-01, -5.9938e-01],
        ...,
        [-9.2932e-01,  1.4902e-01,  9.0148e-01,  ..., -4.4236e-01,
          8.9349e-01, -9.2255e-01],
        [ 2.8333e-02, -1.2145e+00, -1.0875e+00,  ..., -4.4236e-01,
          8.9349e-01, -9.2255e-01],
        [-3.7320e-01, -6.8556e-01, -6.3821e-01,  ..., -4.4236e-01,
          8.9349e-01, -9.2255e-01]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.0000,  1.7352,  0.9424,  ...,  0.4364,  1.6222,  1.6177],
        [ 0.1036,  0.5137,  0.0000,  ...,  0.0000,  1.1872,  0.6439],
        [ 0.0000,  1.7352,  0.9424,  ...,  0.4364,  1.6222,  1.6177],
        ...,
        [ 0.0000,  1.1009,  0.0000,  ...,  0.0000,  1.2765,  0.0000],
        [ 0.0053,  1.7385,  0.0000,  ...,  0.0000,  1.2765,  0.0000],
        [ 0.0000,  0.9530,  0.3445,  ...,  0.0000,  1.2765,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.5742,  0.4685,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.3087,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.5742,  0.4685,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0454,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0454,  0.0000],
        [ 0.0588,  0.0000,  0.0000,  ...,  0.0000,  0.0454,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.9129,  1.5512,  0.0663,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.0315,  0.0000,  0.0000,  ...,  0.0000,  0.4522,  0.0000],
        [ 0.9129,  1.5512,  0.0663,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 1.8367,  0.2807,  0.0000,  ...,  0.0000,  0.3539,  0.0000],
        [ 0.1643,  0.6672,  0.4802,  ...,  0.0000,  0.3539,  0.0000],
        [ 1.7542,  1.3013,  0.0000,  ...,  0.0000,  0.3539,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([225, 384])
tensor([[ 0.5064,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.5587],
        [ 0.3418,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0894],
        [ 0.5064,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.5587],
        ...,
        [ 0.3559,  0.0000,  0.0000,  ...,  0.0000,  0.4608,  0.0000],
        [ 0.5878,  0.1881,  0.0000,  ...,  0.0000,  0.4608,  0.0000],
        [ 0.4060,  0.0000,  0.0000,  ...,  0.0000,  0.4608,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([239, 384])
tensor([[ 2.3546, -0.1024,  0.0184,  ...,  2.2862,  1.6538,  0.2402],
        [ 2.3546, -0.1024,  0.0184,  ..., -0.4952,  1.5479, -0.4587],
        [ 2.3546, -0.1024,  0.0184,  ..., -0.4952,  1.5479, -0.4587],
        ...,
        [ 1.8390, -0.6277,  1.0462,  ..., -0.4424,  0.8935, -0.9225],
        [ 0.0283, -1.2145, -1.0875,  ..., -0.4424,  0.8935, -0.9225],
        [ 1.9133, -1.1254,  1.9257,  ..., -0.4424,  0.8935, -0.9225]], device='cuda:0')
cur_t_vecs
torch.Size([239, 384])
tensor([[ 0.0000,  2.6912,  0.0000,  ...,  0.0000,  1.0853,  0.9181],
        [ 0.0000,  2.6912,  0.0000,  ...,  0.0000,  0.0496,  1.1537],
        [ 0.0000,  2.6912,  0.0000,  ...,  0.0000,  0.0496,  1.1537],
        ...,
        [ 0.0000,  1.4983,  1.7112,  ...,  0.0000,  0.6561,  0.0000],
        [ 0.1301,  0.6630,  0.0000,  ...,  0.0000,  0.6561,  0.0000],
        [ 0.0000,  0.9928,  0.3070,  ...,  0.0000,  0.6561,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([239, 384])
tensor([[ 0.0000,  0.0000,  0.0428,  ...,  1.2595,  0.8617,  0.0000],
        [ 0.0000,  0.0000,  0.0428,  ...,  1.5480,  0.3135,  0.0000],
        [ 0.0000,  0.0000,  0.0428,  ...,  1.5480,  0.3135,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.4207,  0.0000],
        [ 0.0000,  0.0000,  0.1562,  ...,  0.0000,  0.4207,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.4207,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([239, 384])
tensor([[ 0.0000,  2.1380,  0.1829,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.1380,  0.1829,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.1380,  0.1829,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0354,  0.4614,  0.3431,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.4794,  0.6438,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.7962,  0.6176,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([239, 384])
tensor([[ 0.9648,  0.3982,  0.0000,  ...,  0.0000,  0.0000,  0.9633],
        [ 0.9648,  0.3982,  0.0000,  ...,  0.0000,  0.0000,  0.2056],
        [ 0.9648,  0.3982,  0.0000,  ...,  0.0000,  0.0000,  0.2056],
        ...,
        [ 0.7153,  0.3685,  0.0000,  ...,  0.0000,  0.4101,  0.0000],
        [ 0.4607,  0.0000,  0.0000,  ...,  0.0000,  0.4101,  0.0000],
        [ 0.5463,  0.3187,  0.0000,  ...,  0.0000,  0.4101,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 2.8276e-02, -1.2145e+00, -1.0875e+00,  ..., -3.7910e-01,
         -1.2019e-03,  8.4633e-02],
        [-7.9885e-01,  6.8207e-01, -1.1344e+00,  ...,  2.2862e+00,
          1.6538e+00,  2.4028e-01],
        [-7.9885e-01,  6.8207e-01, -1.1344e+00,  ...,  1.5088e+00,
         -5.6671e-01,  1.4406e-01],
        ...,
        [-5.0236e-01,  1.8693e+00,  1.2334e+00,  ..., -4.4239e-01,
          8.9348e-01, -9.2255e-01],
        [ 2.5566e-01, -2.6826e-01, -3.3726e-01,  ..., -4.4239e-01,
          8.9348e-01, -9.2255e-01],
        [ 2.8276e-02, -1.2145e+00, -1.0875e+00,  ..., -4.4239e-01,
          8.9348e-01, -9.2255e-01]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  1.0648,  0.0000,  ...,  0.0614,  1.6323,  1.6131],
        [ 0.0000,  0.1480,  0.0000,  ...,  0.4121,  1.1763,  0.4138],
        [ 0.0000,  0.1480,  0.0000,  ...,  0.0000,  1.5337,  1.5003],
        ...,
        [ 0.0000,  1.3476,  0.0972,  ...,  0.0000,  1.0138,  0.0000],
        [ 0.0000,  0.9179,  0.5855,  ...,  0.0000,  1.0138,  0.0000],
        [ 0.1856,  1.7877,  0.6991,  ...,  0.0000,  1.0138,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.4292,  0.9401,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.0984,  0.3450,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4739,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2756,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2756,  0.0000],
        [ 0.0000,  0.1710,  0.0000,  ...,  0.0000,  0.2756,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.5685,  1.0849,  0.0000,  ...,  0.0000,  0.5352,  0.5191],
        [ 0.9434,  0.4164,  0.0345,  ...,  0.0000,  0.1730,  0.0000],
        [ 0.9434,  0.4164,  0.0345,  ...,  0.0000,  0.4281,  0.5364],
        ...,
        [ 0.5507,  0.6048,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.8282,  0.2611,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.8522,  0.9579,  0.1455,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([236, 384])
tensor([[ 0.2336,  0.0172,  0.0000,  ...,  0.0000,  0.0000,  0.9092],
        [ 0.3964,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.1762],
        [ 0.3964,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.8809],
        ...,
        [ 0.3531,  0.0000,  0.0000,  ...,  0.0000,  0.3612,  0.0000],
        [ 0.2937,  0.0000,  0.0000,  ...,  0.0000,  0.3612,  0.0000],
        [ 0.3594,  0.0802,  0.0000,  ...,  0.0000,  0.3612,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[-0.5761,  1.1131, -0.6418,  ..., -0.8472, -2.3653,  0.0449],
        [-0.2333, -0.3903, -0.6317,  ..., -0.5782,  1.3130, -0.8317],
        [-0.5761,  1.1131, -0.6418,  ..., -0.5782,  1.3130, -0.8317],
        ...,
        [ 0.5584, -0.6394, -2.2309,  ..., -0.4424,  0.8935, -0.9226],
        [ 0.0178,  1.0068,  0.6491,  ..., -0.4424,  0.8935, -0.9226],
        [-1.4573, -0.2711, -0.3470,  ..., -0.4424,  0.8935, -0.9226]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.5229,  2.0780,  0.7358,  ...,  0.0000,  1.1168,  1.7037],
        [ 0.0000,  1.6799,  0.2607,  ...,  0.0000,  0.3148,  0.9881],
        [ 0.5229,  2.0780,  0.7358,  ...,  0.0000,  0.3148,  0.9881],
        ...,
        [ 0.0000,  0.4553,  0.0000,  ...,  0.0000,  1.1940,  0.0000],
        [ 1.9474,  2.1851,  0.6733,  ...,  0.0000,  1.1940,  0.0000],
        [ 1.0216,  1.9711,  0.6606,  ...,  0.0000,  1.1940,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.0497,  0.0000,  ...,  1.4597,  0.3129,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.7111,  0.1280,  0.0000],
        [ 0.0000,  0.0497,  0.0000,  ...,  0.7111,  0.1280,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.2150,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0000,  0.5164,  0.3498,  ...,  0.0000,  0.4226,  0.2812],
        [ 0.7179,  0.5374,  0.0000,  ...,  0.0000,  0.0199,  0.0000],
        [ 0.0000,  0.5164,  0.3498,  ...,  0.0000,  0.0199,  0.0000],
        ...,
        [ 2.1481,  0.6788,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1722,  0.7783,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.6810,  0.3599,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([232, 384])
tensor([[ 0.0267,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.3704],
        [ 0.0653,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0394],
        [ 0.0267,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0394],
        ...,
        [ 0.0541,  0.1683,  0.0000,  ...,  0.0000,  0.7614,  0.0000],
        [ 0.8426,  0.4537,  0.0000,  ...,  0.0000,  0.7614,  0.0000],
        [ 0.6205,  0.0000,  0.0000,  ...,  0.0000,  0.7614,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([223, 384])
tensor([[-7.5428e-01,  3.2838e-01, -3.4090e-01,  ..., -4.9505e-01,
          1.5479e+00, -4.5869e-01],
        [-7.5428e-01,  3.2838e-01, -3.4090e-01,  ...,  1.5087e+00,
         -5.6674e-01,  1.4408e-01],
        [ 2.8206e-02, -1.2145e+00, -1.0875e+00,  ..., -4.9505e-01,
          1.5479e+00, -4.5869e-01],
        ...,
        [-1.4573e+00, -2.7108e-01, -3.4703e-01,  ..., -4.4249e-01,
          8.9346e-01, -9.2257e-01],
        [-1.0165e+00, -8.8036e-01,  2.0807e+00,  ..., -4.4249e-01,
          8.9346e-01, -9.2257e-01],
        [ 1.8389e+00, -6.2786e-01,  1.0462e+00,  ..., -4.4249e-01,
          8.9346e-01, -9.2257e-01]], device='cuda:0')
cur_t_vecs
torch.Size([223, 384])
tensor([[ 0.1291,  1.5536,  1.5610,  ...,  0.2686,  0.4318,  0.4973],
        [ 0.1291,  1.5536,  1.5610,  ...,  0.0000,  1.4252,  1.3217],
        [ 0.0000,  1.4686,  0.0573,  ...,  0.2686,  0.4318,  0.4973],
        ...,
        [ 0.0230,  0.3454,  0.0000,  ...,  0.0000,  1.0949,  0.0000],
        [ 0.0000,  1.6888,  0.7307,  ...,  0.0000,  1.0949,  0.0000],
        [ 0.0816,  2.0795,  1.2952,  ...,  0.0000,  1.0949,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([223, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.4708,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1822,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4708,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2907,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2907,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2907,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([223, 384])
tensor([[ 0.0000,  0.1310,  0.4185,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1310,  0.4185,  ...,  0.0000,  0.3404,  0.4169],
        [ 1.4162,  0.3873,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 1.5381,  0.3855,  0.0000,  ...,  0.0000,  0.0791,  0.0000],
        [ 1.0530,  0.0000,  0.0000,  ...,  0.0000,  0.0791,  0.0000],
        [ 0.0000,  0.4559,  0.3606,  ...,  0.0000,  0.0791,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([223, 384])
tensor([[ 0.0764,  0.5709,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0764,  0.5709,  0.0000,  ...,  0.0000,  0.0000,  0.7707],
        [ 0.1601,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.3775,  0.0616,  0.0000,  ...,  0.0000,  0.5407,  0.0000],
        [ 0.0896,  0.0000,  0.0000,  ...,  0.0000,  0.5407,  0.0000],
        [ 0.4912,  0.3156,  0.0000,  ...,  0.0000,  0.5407,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 3.7239e-01, -7.3906e-01, -2.8165e-01,  ...,  1.5087e+00,
         -5.6677e-01,  1.4408e-01],
        [ 1.5820e+00, -1.2387e+00,  1.1574e-01,  ...,  2.5384e-01,
         -1.2010e+00, -1.3308e+00],
        [ 1.5820e+00, -1.2387e+00,  1.1574e-01,  ...,  1.5087e+00,
         -5.6677e-01,  1.4408e-01],
        ...,
        [ 2.3544e+00, -1.0233e-01,  1.8349e-02,  ..., -4.4255e-01,
          8.9345e-01, -9.2258e-01],
        [ 2.8172e-02, -1.2145e+00, -1.0875e+00,  ..., -4.4255e-01,
          8.9345e-01, -9.2258e-01],
        [ 1.7581e-01,  3.0426e-01, -6.8520e-01,  ..., -4.4255e-01,
          8.9345e-01, -9.2258e-01]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.0000,  1.0711,  0.3922,  ...,  0.0000,  0.4599,  1.4413],
        [ 0.0000,  1.0624,  0.4685,  ...,  0.1508,  0.0000,  2.0669],
        [ 0.0000,  1.0624,  0.4685,  ...,  0.0000,  0.4599,  1.4413],
        ...,
        [ 0.0000,  1.1262,  0.0000,  ...,  0.0000,  1.3882,  0.0000],
        [ 0.0000,  0.6970,  0.0000,  ...,  0.0000,  1.3882,  0.0000],
        [ 0.2603,  0.8871,  0.0000,  ...,  0.0000,  1.3882,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.8637,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.5253,  1.3303,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.8637,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3185,  0.0000],
        [ 0.0000,  0.0000,  0.3428,  ...,  0.0000,  0.3185,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3185,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.6548,  0.8750,  0.0000,  ...,  0.0000,  0.1723,  0.0000],
        [ 0.0000,  0.3932,  0.0000,  ...,  0.0000,  0.0000,  0.2796],
        [ 0.0000,  0.3932,  0.0000,  ...,  0.0000,  0.1723,  0.0000],
        ...,
        [ 0.6884,  0.3963,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.8485,  0.5686,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5902,  0.3385,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([245, 384])
tensor([[ 0.4013,  0.0396,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1125,  0.0337,  0.0000,  ...,  0.0000,  0.0000,  0.3050],
        [ 0.1125,  0.0337,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0847,  0.0000,  0.0000,  ...,  0.0000,  0.2548,  0.0000],
        [ 0.2103,  0.0782,  0.0000,  ...,  0.0000,  0.2548,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2548,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([261, 384])
tensor([[ 2.0891e+00,  1.7876e+00, -1.4887e+00,  ...,  1.5087e+00,
         -5.6678e-01,  1.4408e-01],
        [ 1.8389e+00, -6.2789e-01,  1.0462e+00,  ...,  1.5087e+00,
         -5.6678e-01,  1.4408e-01],
        [ 2.8156e-02, -1.2145e+00, -1.0875e+00,  ..., -2.1902e+00,
          5.8027e-01,  7.2285e-01],
        ...,
        [-9.9632e-01, -1.1142e+00, -9.0958e-03,  ..., -4.4261e-01,
          8.9344e-01, -9.2259e-01],
        [-9.9632e-01, -1.1142e+00, -9.0958e-03,  ..., -4.4261e-01,
          8.9344e-01, -9.2259e-01],
        [ 2.8156e-02, -1.2145e+00, -1.0875e+00,  ..., -4.4261e-01,
          8.9344e-01, -9.2259e-01]], device='cuda:0')
cur_t_vecs
torch.Size([261, 384])
tensor([[ 0.3754,  0.9373,  0.0000,  ...,  0.0000,  1.4036,  1.1721],
        [ 0.1032,  2.1165,  1.7359,  ...,  0.0000,  1.4036,  1.1721],
        [ 0.0000,  0.8154,  0.1365,  ...,  0.3573,  0.2732,  1.8397],
        ...,
        [ 0.0000,  1.7935,  0.0000,  ...,  0.0000,  0.9023,  0.0000],
        [ 0.0000,  0.5271,  0.0529,  ...,  0.0000,  0.9023,  0.0000],
        [ 0.0000,  1.4215,  0.0000,  ...,  0.0000,  0.9023,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([261, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.9584,  0.0480,  0.0000],
        [ 0.0000,  0.3297,  0.0000,  ...,  0.9584,  0.0480,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.4320,  1.0769,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0710,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0710,  0.0000],
        [ 0.0000,  0.0000,  0.3787,  ...,  0.0000,  0.0710,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([261, 384])
tensor([[ 0.6681,  0.5474,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.1324,  0.3866,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.4624,  0.7127,  0.0000,  ...,  0.0000,  0.1304,  0.3988],
        ...,
        [ 0.0874,  0.6603,  0.3117,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.2147,  0.7154,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 2.2175,  0.6809,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([261, 384])
tensor([[ 0.2114,  0.1906,  0.0000,  ...,  0.0000,  0.0000,  0.4353],
        [ 0.3389,  0.3047,  0.0000,  ...,  0.0000,  0.0000,  0.4353],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.4562],
        ...,
        [ 0.4546,  0.2773,  0.0000,  ...,  0.0000,  0.3339,  0.0000],
        [ 0.1303,  0.0000,  0.0000,  ...,  0.0000,  0.3339,  0.0000],
        [ 0.0202,  0.0000,  0.0000,  ...,  0.0000,  0.3339,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([233, 384])
tensor([[-5.0228e-01,  1.8694e+00,  1.2333e+00,  ...,  4.9177e-01,
         -1.0654e+00,  1.3782e+00],
        [-5.0228e-01,  1.8694e+00,  1.2333e+00,  ...,  7.6019e-01,
         -1.3391e+00, -1.2991e+00],
        [-5.0228e-01,  1.8694e+00,  1.2333e+00,  ...,  1.5086e+00,
         -5.6680e-01,  1.4408e-01],
        ...,
        [-1.1751e+00,  9.9200e-01, -1.4828e-01,  ..., -4.4265e-01,
          8.9343e-01, -9.2260e-01],
        [ 2.8152e-02, -1.2145e+00, -1.0875e+00,  ..., -4.4265e-01,
          8.9343e-01, -9.2260e-01],
        [ 2.9538e-01, -9.8707e-01,  6.1586e-01,  ..., -4.4265e-01,
          8.9343e-01, -9.2260e-01]], device='cuda:0')
cur_t_vecs
torch.Size([233, 384])
tensor([[ 0.0000,  1.6933,  0.5211,  ...,  0.3896,  1.1782,  0.9465],
        [ 0.0000,  1.6933,  0.5211,  ...,  0.0000,  0.2877,  1.6367],
        [ 0.0000,  1.6933,  0.5211,  ...,  0.0000,  1.3242,  1.0315],
        ...,
        [ 0.0000,  2.0042,  0.7613,  ...,  0.0000,  1.2688,  0.0000],
        [ 0.2781,  0.0120,  0.0000,  ...,  0.0000,  1.2688,  0.0000],
        [ 1.4126,  0.5547,  0.0000,  ...,  0.0000,  1.2688,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([233, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.6241,  0.1703,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.3788,  0.9630,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.2969,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([233, 384])
tensor([[ 0.2203,  0.9277,  0.0394,  ...,  0.0000,  0.1552,  0.0000],
        [ 0.2203,  0.9277,  0.0394,  ...,  0.0000,  0.0762,  0.0660],
        [ 0.2203,  0.9277,  0.0394,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.4978,  0.1884,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5792,  1.0506,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.8905,  1.2908,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')444399d
113619d
103575d
96067b
359164c
207573a
244122d
438899c
331302b
518918b
43171d
6421c
134597e
293576a
295693b
288313e
58979c
4761e
189033e
355175a
157356a
18155c
208267a
367605a
545257e
412992d
152245e
404271d
246099a
346915c
324740d
288921b
52324b
189187a
432627d
306127c
282978b
408946a
557434a
269015d
289100a
66309b
216026b
354938e
389772d
132860e
396369b
92107d
459110b
515300d
285357c
327536c
261664e
102609d
28349d
505642a
101426a
452459c
525273e
540926b
47909e
194050c
549098e
455877a
230570b
144371b
322121b
285651a
297009a
160152a
159199a
88325e
20291d
167995e
96728b
509514e
49286d
10138e
250724b
364571b
327813a
468751d
241178a
463168c
324611a
302397b
555800d
529944e
101877c
365027d
310564d
257951c
217991b
344025a
127450a
557408d
102421d
210266a
279345a
121172a
567305a
23176c
531778b
509267e
215612c
4764e
581061b
71631c
176726c
522704b
426880c
177381e
233869d
400848e
109568a
431997e
529352e
76802b
329151a
474105b
488583b
466134b
174303b
477468a
521995d
167074b
472320a
310518e
142587b
511143a
522489d
560563d
412384d
363190c
570579a
393647a
438267e
577712e
238712c
457448d
169395c
554319c
13595b
367442b
237859c
11690a
134849b
171309a
2477b
197029b
260109a
159403e
377278b
295850e
221633e
110777e
277346a
173814c
520389c
283809a
248591a
455902d
462929c
414212a
39716b
336854d
274424a
218886e
167126b
90869b
546261e
213530e
522235a
400999a
346724d
533452e
308295c
81035b
233112e
299643b
113019c
308803a
320537b
84815e
53464b
61202b
488980a
131374d
43742e
5383d
550278a
459208b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
572147e
85549b
187803e
573149e
568677b
42704a
132516a
75362a
254589a
257713b
10082e
217720d
330954d
154597e
428304c
103582a
397938a
84034b
163412b
127750c
494795d
119761c
126808e
242167b
276694e
278899b
104537e
60378b
576526e
223420c
569174b
208585b
89707e
126204e
385540c
552461b
502557d
441816e
185963c
97170c
323479a
507148b
135989c
457086c
146120b
340897e
6710a
349527d
3001a
543224b
168417b
517417b
21531c
323129a
480576d
30958c
22658d
47774c
289172d
454044a
524924d
478805d
103558b
392476a
195894e
493485a
6075a
137339b
24026a
208347b
150594d
107620e
91263a
107108a
163829e
535265c
37291d
224629e
191690d
189648b
183539b
545929c
20087d
349153c
400850e
243796d
245534b
78286b
39360d
13576e
388923b
553401b
217135c
71737d
245242c
332292c
491558e
259853a
14798d
409754e
313608d
188498c
302576c
312359c
316353e
139789e
353982b
566547e
485064e
416188a
102834e
569602c
150354d
173565d
327413b
59582d
26747c
485491e
165299d
31442c
404395b
134413c
485368b
572042e
84896e
295491a
578119d
170687a
443086d
390298c
214873b
153574c
500982b
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

cur_t_vecs
torch.Size([233, 384])
tensor([[ 0.3601,  0.3410,  0.0000,  ...,  0.0000,  0.0000,  0.4036],
        [ 0.3601,  0.3410,  0.0000,  ...,  0.0000,  0.0000,  0.5709],
        [ 0.3601,  0.3410,  0.0000,  ...,  0.0000,  0.0000,  0.4049],
        ...,
        [ 0.3203,  0.2161,  0.0000,  ...,  0.0000,  0.5620,  0.0000],
        [ 0.3333,  0.0905,  0.0000,  ...,  0.0000,  0.5620,  0.0000],
        [ 0.5703,  0.0956,  0.0000,  ...,  0.0000,  0.5620,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([32, 384])
tensor([[ 1.8388e+00, -6.2793e-01,  1.0461e+00,  ..., -1.2982e-01,
          7.4388e-01, -1.1519e+00],
        [-1.0165e+00, -8.8056e-01,  2.0807e+00,  ...,  7.6017e-01,
         -1.3391e+00, -1.2991e+00],
        [-1.0165e+00, -8.8056e-01,  2.0807e+00,  ...,  7.6017e-01,
         -1.3391e+00, -1.2991e+00],
        ...,
        [ 2.6870e+00, -5.6034e-01,  1.8779e+00,  ..., -4.4270e-01,
          8.9343e-01, -9.2261e-01],
        [ 2.3543e+00, -1.0229e-01,  1.8368e-02,  ..., -4.4270e-01,
          8.9343e-01, -9.2261e-01],
        [ 2.8154e-02, -1.2145e+00, -1.0875e+00,  ..., -4.4270e-01,
          8.9343e-01, -9.2261e-01]], device='cuda:0')
cur_t_vecs
torch.Size([32, 384])
tensor([[ 0.0000,  0.9916,  0.1351,  ...,  0.7432,  0.6446,  0.9911],
        [ 0.1513,  1.1228,  1.3496,  ...,  0.0000,  0.0000,  2.6351],
        [ 0.1513,  1.1228,  1.3496,  ...,  0.0000,  0.0000,  2.6351],
        ...,
        [ 0.0000,  1.2277,  0.0000,  ...,  0.0000,  1.6101,  0.0000],
        [ 0.0000,  1.2897,  0.2709,  ...,  0.0000,  1.6101,  0.0000],
        [ 0.5207,  2.1258,  0.2293,  ...,  0.0000,  1.6101,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([32, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.8798,  0.1730,  0.0000],
        [ 0.0000,  0.0000,  0.5279,  ...,  0.7182,  0.6470,  0.0000],
        [ 0.0000,  0.0000,  0.5279,  ...,  0.7182,  0.6470,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([32, 384])
tensor([[ 0.5599,  1.3430,  0.0000,  ...,  0.0000,  0.2269,  0.0000],
        [ 0.0962,  0.5234,  0.4401,  ...,  0.0000,  0.5608,  0.5033],
        [ 0.0962,  0.5234,  0.4401,  ...,  0.0000,  0.5608,  0.5033],
        ...,
        [ 1.4102,  0.5904,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.3817,  1.5174,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0897,  0.5402,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([32, 384])
tensor([[ 0.2853,  0.0103,  0.0000,  ...,  0.0000,  0.0000,  0.6205],
        [ 0.0791,  0.2120,  0.0000,  ...,  0.0000,  0.0000,  0.3388],
        [ 0.0791,  0.2120,  0.0000,  ...,  0.0000,  0.0000,  0.3388],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3572,  0.0000],
        [ 0.1232,  0.2480,  0.0000,  ...,  0.0000,  0.3572,  0.0000],
        [ 0.0000,  0.6522,  0.0000,  ...,  0.0000,  0.3572,  0.0000]], device='cuda:0')
Starting epoch 10
cur_t_vecs
torch.Size([222, 384])
tensor([[ 2.3543e+00, -1.0227e-01,  1.8377e-02,  ...,  1.5711e+00,
          3.6137e-01,  8.2592e-01],
        [-9.3502e-01,  1.3468e+00,  1.5359e+00,  ..., -1.1280e+00,
         -2.8844e-01, -1.1599e+00],
        [-1.1427e+00, -4.2935e-01,  4.8538e-01,  ...,  2.3032e+00,
          4.3212e-01,  2.3872e-01],
        ...,
        [-2.1372e+00,  1.0627e+00,  1.4627e+00,  ..., -4.4275e-01,
          8.9344e-01, -9.2261e-01],
        [-2.0048e+00, -1.0814e+00,  1.1331e-01,  ..., -4.4275e-01,
          8.9344e-01, -9.2261e-01],
        [ 4.6568e-01,  5.1864e-02,  1.4791e+00,  ..., -4.4275e-01,
          8.9344e-01, -9.2261e-01]], device='cuda:0')
cur_t_vecs
torch.Size([222, 384])
tensor([[ 0.0679,  0.0000,  0.0000,  ...,  1.1971,  1.3127,  1.3271],
        [ 0.0000,  1.1325,  0.3464,  ...,  0.0000,  1.1131,  1.2062],
        [ 0.0000,  1.3831,  0.1811,  ...,  0.0000,  1.9560,  1.0456],
        ...,
        [ 0.5804,  0.7394,  1.2783,  ...,  0.0000,  1.1821,  0.0000],
        [ 1.0936,  1.6921,  0.6662,  ...,  0.0000,  1.1821,  0.0000],
        [ 0.6558,  0.6983,  0.0000,  ...,  0.0000,  1.1821,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([222, 384])
tensor([[ 0.0000,  0.0000,  0.2821,  ...,  1.9665,  0.5305,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.4508,  0.7069,  0.0000],
        [ 0.0000,  0.0000,  0.2183,  ...,  0.8868,  0.0074,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1168,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1168,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1168,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([222, 384])
tensor([[ 0.7964,  1.4347,  0.0000,  ...,  0.0000,  0.0000,  0.5254],
        [ 0.2543,  0.5711,  0.0000,  ...,  0.0000,  0.0000,  0.0708],
        [ 0.1843,  0.0000,  0.0000,  ...,  0.0000,  0.4274,  0.1624],
        ...,
        [ 0.0000,  0.0000,  0.0786,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.2932,  0.2428,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.0066,  0.6192,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([222, 384])
tensor([[ 0.2478,  0.4343,  0.0000,  ...,  0.0000,  0.0000,  0.7260],
        [ 0.0136,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.4330],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.1534],
        ...,
        [ 0.0607,  0.3952,  0.0000,  ...,  0.0000,  0.1445,  0.0000],
        [ 0.0997,  0.0000,  0.0000,  ...,  0.0000,  0.1445,  0.0000],
        [ 0.2320,  0.0000,  0.0000,  ...,  0.0000,  0.1445,  0.0000]], device='cuda:0')
t = 100 / 1000000
 G [bbox_pred]: 2.1261
 G [g_gan_img_loss]: 0.0075
 G [L1_pixel_loss]: 0.9361
 G [total_loss]: 3.3266
 G [g_gan_obj_loss]: 0.0103
 G [ac_loss]: 0.2465
 D_obj [d_obj_gan_loss]: 1.1250
 D_obj [d_ac_loss_real]: 2.8007
 D_obj [d_ac_loss_fake]: 2.4652
 D_img [d_img_gan_loss]: 1.3006
cur_t_vecs
torch.Size([264, 384])
tensor([[-1.0164e+00, -8.8058e-01,  2.0807e+00,  ..., -3.7881e-01,
         -1.0228e-03,  8.4434e-02],
        [-1.0164e+00, -8.8058e-01,  2.0807e+00,  ..., -3.7881e-01,
         -1.0228e-03,  8.4434e-02],
        [-7.9903e-01,  6.8200e-01, -1.1341e+00,  ...,  1.5085e+00,
         -5.6684e-01,  1.4403e-01],
        ...,
        [-3.2853e-01,  8.4464e-01, -7.8824e-01,  ..., -4.4280e-01,
          8.9345e-01, -9.2261e-01],
        [ 1.7575e-01,  3.0428e-01, -6.8527e-01,  ..., -4.4280e-01,
          8.9345e-01, -9.2261e-01],
        [ 2.8193e-02, -1.2145e+00, -1.0875e+00,  ..., -4.4280e-01,
          8.9345e-01, -9.2261e-01]], device='cuda:0')
cur_t_vecs
torch.Size([264, 384])
tensor([[ 0.4157,  1.8650,  0.8033,  ...,  1.1894,  0.8827,  0.4363],
        [ 0.4157,  1.8650,  0.8033,  ...,  1.1894,  0.8827,  0.4363],
        [ 0.2028,  0.0718,  0.5397,  ...,  0.0267,  1.2028,  0.5129],
        ...,
        [ 0.0000,  2.4391,  0.5741,  ...,  0.0000,  1.2522,  0.0000],
        [ 0.2732,  1.0740,  0.0000,  ...,  0.0000,  1.2522,  0.0000],
        [ 0.0000,  2.0376,  0.0000,  ...,  0.0000,  1.2522,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([264, 384])
tensor([[ 0.0000,  0.0000,  0.0415,  ...,  0.9446,  0.2987,  0.0000],
        [ 0.0000,  0.0000,  0.0415,  ...,  0.9446,  0.2987,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0671,  0.0258,  0.0000],
        ...,
        [ 0.0000,  0.1682,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([264, 384])
tensor([[ 0.1980,  0.3499,  0.1749,  ...,  0.0000,  0.0662,  0.0666],
        [ 0.1980,  0.3499,  0.1749,  ...,  0.0000,  0.0662,  0.0666],
        [ 1.4575,  0.9561,  0.0000,  ...,  0.0000,  0.3354,  0.0000],
        ...,
        [ 0.2193,  1.8243,  0.5625,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.2177,  1.0283,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0385,  0.3564,  0.0658,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([264, 384])
tensor([[ 0.5247,  0.4757,  0.0000,  ...,  0.0000,  0.0000,  0.7453],
        [ 0.5247,  0.4757,  0.0000,  ...,  0.0000,  0.0000,  0.7453],
        [ 0.0000,  0.1901,  0.0000,  ...,  0.0000,  0.0000,  0.1240],
        ...,
        [ 0.6100,  0.7571,  0.0000,  ...,  0.0000,  0.2339,  0.0000],
        [ 0.0598,  0.0000,  0.0000,  ...,  0.0000,  0.2339,  0.0000],
        [ 0.0000,  0.0115,  0.0000,  ...,  0.0000,  0.2339,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([254, 384])
tensor([[ 1.8388e+00, -6.2784e-01,  1.0461e+00,  ...,  1.5085e+00,
         -5.6685e-01,  1.4401e-01],
        [ 5.8841e-01,  1.0549e+00, -1.0035e+00,  ...,  1.5085e+00,
         -5.6685e-01,  1.4401e-01],
        [ 1.8388e+00, -6.2784e-01,  1.0461e+00,  ...,  1.1238e+00,
          4.0950e-01, -1.9292e+00],
        ...,
        [ 3.4030e-01, -1.1260e+00, -5.0915e-01,  ..., -4.4284e-01,
          8.9346e-01, -9.2262e-01],
        [-1.1223e+00,  1.2723e+00,  8.3436e-02,  ..., -4.4284e-01,
          8.9346e-01, -9.2262e-01],
        [ 2.8210e-02, -1.2145e+00, -1.0875e+00,  ..., -4.4284e-01,
          8.9346e-01, -9.2262e-01]], device='cuda:0')
cur_t_vecs
torch.Size([254, 384])
tensor([[ 0.4910,  1.8193,  1.4924,  ...,  0.0000,  0.5931,  0.4441],
        [ 0.0000,  0.9972,  0.0000,  ...,  0.0000,  0.5931,  0.4441],
        [ 0.4910,  1.8193,  1.4924,  ...,  0.0568,  0.3179,  0.1059],
        ...,
        [ 0.2685,  1.5991,  0.0000,  ...,  0.0000,  0.8913,  0.0000],
        [ 0.0000,  0.2654,  0.0000,  ...,  0.0000,  0.8913,  0.0000],
        [ 0.0000,  1.4508,  0.0000,  ...,  0.0000,  0.8913,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([254, 384])
tensor([[ 0.0000,  0.0555,  0.0000,  ...,  0.7330,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1037,  ...,  0.7330,  0.0000,  0.0000],
        [ 0.0000,  0.0555,  0.0000,  ...,  1.3041,  0.4859,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0641,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0641,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0641,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([254, 384])
tensor([[ 0.0029,  0.7499,  0.1600,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.1501,  0.2563,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0029,  0.7499,  0.1600,  ...,  0.0000,  0.3412,  0.5098],
        ...,
        [ 1.3263,  0.9350,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.8051,  0.6427,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1178,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([254, 384])
tensor([[ 0.3217,  0.3193,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3217,  0.3193,  0.0000,  ...,  0.0000,  0.0000,  0.6806],
        ...,
        [ 0.1500,  0.0000,  0.0000,  ...,  0.0000,  0.0934,  0.0000],
        [ 0.3821,  0.0493,  0.0000,  ...,  0.0000,  0.0934,  0.0000],
        [ 0.0742,  0.3101,  0.0000,  ...,  0.0000,  0.0934,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([229, 384])/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [320,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [321,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [322,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [323,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [324,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [325,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [326,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [327,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [328,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [329,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [330,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [331,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [332,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [333,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [334,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [335,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [336,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [337,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [338,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [339,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [340,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [341,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [342,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [343,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [344,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [345,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [346,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [347,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [348,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [349,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [350,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [351,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [352,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [353,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [354,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [355,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [356,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [357,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [358,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [359,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [360,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [361,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [362,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [363,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [364,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [365,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [366,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [367,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [368,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [369,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [370,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [371,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [372,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [373,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [374,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [375,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [376,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [377,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [378,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [379,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [380,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [381,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [382,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [383,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [448,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [449,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [450,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [451,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [452,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [453,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [454,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [455,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [456,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [457,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [458,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [459,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [460,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [461,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [462,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [463,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [464,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [465,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [466,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [467,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [468,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [469,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [470,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [471,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [472,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [473,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [474,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [475,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [476,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [477,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [478,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [479,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [480,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [481,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [482,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [483,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [484,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [485,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [486,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [487,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [488,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [489,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [490,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [491,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [492,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [493,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [494,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [495,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [496,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [497,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [498,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [499,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [500,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [501,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [502,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [503,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [504,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [505,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [506,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [507,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [508,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [509,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [510,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [511,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [288,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [289,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [290,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [291,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [292,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [293,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [294,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [295,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [296,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [297,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [298,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [299,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [300,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [301,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [302,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [303,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [304,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [305,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [306,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [307,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [308,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [309,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [310,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [311,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [312,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [313,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [314,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [315,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [316,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [317,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [318,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [319,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [256,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [257,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [258,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [259,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [260,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [261,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [262,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [263,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [264,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [265,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [266,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [267,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [268,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [269,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [270,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [271,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [272,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [273,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [274,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [275,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [276,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [277,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [278,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [279,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [280,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [281,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [282,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [283,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [284,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [285,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [286,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [287,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [416,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [417,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [418,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [419,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [420,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [421,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [422,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [423,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [424,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [425,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [426,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [427,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [428,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [429,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [430,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [431,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [432,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [433,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [434,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [435,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [436,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [437,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [438,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [439,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [440,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [441,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [442,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [443,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [444,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [445,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [446,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [447,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [384,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [385,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [386,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [387,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [388,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [389,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [390,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [391,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [392,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [393,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [394,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [395,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [396,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [397,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [398,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [399,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [400,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [401,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [402,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [403,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [404,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [405,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [406,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [407,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [408,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [409,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [410,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [411,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [412,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [413,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [414,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
/pytorch/aten/src/THC/THCTensorIndex.cu:447: IndexType indexToOffset(const TensorInfo<T, IndexType> &, long, IndexType) [with Dims = -2, T = float, IndexType = int]: block: [58,0,0], thread: [415,0,0] Assertion `linearIndex < size && linearIndex >= -size` failed.
THCudaCheck FAIL file=/pytorch/aten/src/THC/generic/THCTensorCopy.c line=70 error=59 : device-side assert triggered
218886e
517417b
146120b
443086d
344025a
101426a
557434a
150354d
385540c
566547e
21531c
197029b
127750c
288921b
165299d
327813a
346724d
367605a
404271d
26747c
217135c
103575d
90869b
432627d
71737d
167126b
531778b
103558b
30958c
188498c
14798d
569602c
76802b
208347b
102609d
359164c
520389c
285651a
96067b
66309b
400850e
485491e
568677b
163412b
463168c
552461b
107108a
260109a
159403e
581061b
297009a
545929c
71631c
189033e
189187a
494795d
61202b
515300d
454044a
525273e
554319c
289172d
150594d
567305a
233869d
183539b
173814c
452459c
159199a
20087d
324611a
215612c
377278b
223420c
572147e
139789e
485368b
208585b
259853a
144371b
438899c
217720d
416188a
540926b
10138e
97170c
254589a
160152a
283809a
459208b
257951c
5383d
455902d
96728b
349527d
543224b
52324b
560563d
327413b
137339b
507148b
570579a
269015d
477468a
109568a
331302b
18155c
241178a
468751d
177381e
522704b
485064e
242167b
20291d
126808e
167995e
191690d
488583b
569174b
134849b
521995d
299643b
2477b
154597e
522235a
216026b
336854d
472320a
173565d
363190c
92107d
493485a
207573a
312359c
288313e
474105b
522489d
346915c
168417b
230570b
11690a
364571b
529352e
277346a
549098e
408946a
388923b
75362a
127450a
320537b
4761e
308803a
459110b
409754e
103582a
529944e
431997e
332292c
194050c
121172a
502557d
6075a
261664e
285357c
119761c
163829e
428304c
142587b
152245e
126204e
28349d
400999a
414212a
535265c
289100a
392476a
24026a
58979c
113619d
491558e
308295c
455877a
37291d
457086c
546261e
349153c
84034b
518918b
250724b
578119d
49286d
101877c
23176c
246099a
78286b
557408d
295693b
354938e
509267e
4764e
6710a
102421d
257713b
88325e
43171d
438267e
500982b
509514e
243796d
217991b
353982b
577712e
323479a
104537e
462929c
329151a
533452e
444399d
340897e
404395b
237859c
84896e
389772d
47909e
466134b
43742e
244122d
214873b
13576e
457448d
31442c
157356a
393647a
576526e
131374d
555800d
134597e
174303b
426880c
89707e
545257e
132860e
441816e
505642a
59582d
6421c
53464b
113019c
42704a
176726c
110777e
524924d
13595b
245534b
245242c
302576c
210266a
135989c
365027d
276694e
293576a
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
22658d
390298c
327536c
511143a
573149e
248591a
400848e
208267a
102834e
295850e
412992d
213530e
553401b
233112e
397938a
169395c
81035b
238712c
306127c
316353e
91263a
221633e
39716b
279345a
153574c
323129a
185963c
324740d
310518e
488980a
195894e
39360d
396369b
330954d
84815e
10082e
480576d
572042e
189648b
282978b
313608d
3001a
85549b
367442b
278899b
107620e
478805d
302397b
322121b
187803e
171309a
170687a
60378b
167074b
550278a
355175a
134413c
224629e
47774c
274424a
412384d
132516a
310564d
295491a
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "
/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/skimage/transform/_warps.py:110: UserWarning: Anti-aliasing will be enabled by default in skimage 0.15 to avoid aliasing artifacts when down-sampling images.
  warn("Anti-aliasing will be enabled by default in skimage 0.15 to "

tensor([[-0.6064,  0.3922,  0.6042,  ...,  1.5085, -0.5669,  0.1440],
        [ 0.9736,  0.2196,  0.9177,  ...,  0.3824,  0.1924,  1.1722],
        [ 0.9736,  0.2196,  0.9177,  ...,  1.5085, -0.5669,  0.1440],
        ...,
        [ 0.0282, -1.2145, -1.0875,  ..., -0.4429,  0.8935, -0.9226],
        [ 0.9736,  0.2196,  0.9177,  ..., -0.4429,  0.8935, -0.9226],
        [ 0.1448,  0.3640, -0.5392,  ..., -0.4429,  0.8935, -0.9226]], device='cuda:0')
cur_t_vecs
torch.Size([229, 384])
tensor([[ 0.0000,  1.3299,  0.1806,  ...,  0.0000,  0.6722,  1.0017],
        [ 0.4110,  1.2819,  0.0623,  ...,  0.0000,  0.4807,  0.9209],
        [ 0.4110,  1.2819,  0.0623,  ...,  0.0000,  0.6722,  1.0017],
        ...,
        [ 0.0000,  1.1714,  0.8051,  ...,  0.0000,  1.0652,  0.0000],
        [ 0.0000,  0.3973,  0.2444,  ...,  0.0000,  1.0652,  0.0000],
        [ 0.0079,  1.2250,  1.8940,  ...,  0.0000,  1.0652,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([229, 384])
tensor([[ 0.0000,  0.2776,  0.0000,  ...,  0.8965,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1336,  1.0485,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.8965,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.6094,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.6094,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.6094,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([229, 384])
tensor([[ 1.0011,  0.2743,  0.0000,  ...,  0.0000,  0.2130,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2968,  0.3731],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2130,  0.0000],
        ...,
        [ 0.8522,  0.9768,  0.2931,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.9971,  0.3374,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.5528,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([229, 384])
tensor([[ 0.1373,  0.1347,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3203,  0.0000,  ...,  0.0000,  0.0000,  0.4671],
        [ 0.0000,  0.3203,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0087,  0.0000,  ...,  0.0000,  0.0711,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0711,  0.0000],
        [ 0.0953,  0.0000,  0.0000,  ...,  0.0000,  0.0711,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.4656,  0.0519,  1.4792,  ...,  0.7600, -1.3391, -1.2990],
        [-2.0048, -1.0812,  0.1134,  ...,  2.3032,  0.4320,  0.2385],
        [ 2.3541, -0.1022,  0.0184,  ...,  0.2609,  0.8817, -0.2256],
        ...,
        [ 0.0282, -1.2145, -1.0875,  ..., -0.4430,  0.8935, -0.9226],
        [ 0.4656,  0.0519,  1.4792,  ..., -0.4430,  0.8935, -0.9226],
        [-1.1751,  0.9918, -0.1483,  ..., -0.4430,  0.8935, -0.9226]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.0000,  1.4286,  1.1946,  ...,  0.0000,  0.3041,  1.0930],
        [ 1.2704,  1.9142,  0.2760,  ...,  0.0000,  1.0902,  1.4678],
        [ 0.1754,  0.9794,  0.0000,  ...,  0.0000,  0.0000,  1.7047],
        ...,
        [ 0.2813,  1.1853,  0.0000,  ...,  0.0000,  1.4739,  0.0000],
        [ 0.0000,  1.4148,  0.6384,  ...,  0.0000,  1.4739,  0.0000],
        [ 0.0000,  1.2852,  0.6268,  ...,  0.0000,  1.4739,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.5726,  0.4871,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.4931,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.9051,  0.3341,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.1261,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.0094,  0.0000,  ...,  0.0000,  1.0134,  0.7391],
        [ 0.2316,  1.6762,  0.0000,  ...,  0.0000,  0.2564,  0.7808],
        ...,
        [ 0.3077,  0.2127,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.2648,  0.3533,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.6322,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([224, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0164,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.6050],
        [ 0.0671,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.8057],
        ...,
        [ 0.2736,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.1890,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[-1.2350, -0.9484,  0.8619,  ..., -3.6208, -0.1089, -0.6585],
        [ 2.3541, -0.1022,  0.0185,  ...,  0.1242, -0.1605,  1.2240],
        [ 2.3541, -0.1022,  0.0185,  ..., -0.6396,  1.4524, -0.9919],
        ...,
        [-0.9966, -1.1144, -0.0091,  ..., -0.4430,  0.8935, -0.9227],
        [ 0.0283, -1.2145, -1.0875,  ..., -0.4430,  0.8935, -0.9227],
        [ 0.3724, -0.7392, -0.2816,  ..., -0.4430,  0.8935, -0.9227]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  0.9900,  0.3014,  ...,  0.0000,  0.0000,  1.7241],
        [ 0.0000,  1.0799,  0.0000,  ...,  0.0000,  0.3899,  0.4187],
        [ 0.0000,  1.0799,  0.0000,  ...,  0.0209,  1.2890,  1.4945],
        ...,
        [ 0.4065,  1.7650,  1.2659,  ...,  0.0000,  0.7776,  0.0000],
        [ 0.0000,  1.3581,  0.5515,  ...,  0.0000,  0.7776,  0.0000],
        [ 0.0000,  0.3892,  0.1238,  ...,  0.0000,  0.7776,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  1.4668,  0.6135,  0.0000],
        [ 0.0000,  0.0000,  0.3489,  ...,  0.9429,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3489,  ...,  0.9027,  0.9131,  0.0000],
        ...,
        [ 0.0000,  0.0209,  0.0000,  ...,  0.0000,  0.4892,  0.0000],
        [ 0.0000,  0.0020,  0.0684,  ...,  0.0000,  0.4892,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.4892,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.8503,  0.3173,  0.0000,  ...,  0.0000,  0.4383,  0.3044],
        [ 0.4939,  0.6126,  0.0604,  ...,  0.0000,  0.0000,  0.3218],
        [ 0.4939,  0.6126,  0.0604,  ...,  0.0000,  0.0696,  0.2213],
        ...,
        [ 0.0706,  0.5756,  0.1862,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.1528,  0.2973,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.7721,  0.2630,  0.0000,  ...,  0.0000,  0.0000,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([240, 384])
tensor([[ 0.0982,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.6725],
        [ 0.2384,  0.2465,  0.0000,  ...,  0.0000,  0.0000,  0.7852],
        [ 0.2384,  0.2465,  0.0000,  ...,  0.0000,  0.0000,  0.6410],
        ...,
        [ 0.0010,  0.0952,  0.0000,  ...,  0.0000,  0.1121,  0.0000],
        [ 0.0156,  0.0000,  0.0000,  ...,  0.0000,  0.1121,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1121,  0.0000]], device='cuda:0')
cur_t_vecs
torch.Size([251, 384])
Traceback (most recent call last):
  File "train.py", line 718, in <module>
    main(args)
  File "train.py", line 580, in main
    boxes_gt=model_boxes, masks_gt=model_masks)
  File "/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/torch/nn/modules/module.py", line 491, in __call__
    result = self.forward(*input, **kwargs)
  File "/data/home/cs224n/sg2im/sg2im/model.py", line 145, in forward
    obj_vecs, pred_vecs = self.gconv(obj_vecs, pred_vecs, edges)
  File "/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/torch/nn/modules/module.py", line 491, in __call__
    result = self.forward(*input, **kwargs)
  File "/data/home/cs224n/sg2im/sg2im/graph.py", line 85, in forward
    print(cur_t_vecs)
  File "/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/torch/tensor.py", line 57, in __repr__
    return torch._tensor_str._str(self)
  File "/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/torch/_tensor_str.py", line 218, in _str
    fmt, scale, sz = _number_format(self)
  File "/data/home/cs224n/sg2im/env/lib/python3.5/site-packages/torch/_tensor_str.py", line 79, in _number_format
    tensor = torch.DoubleTensor(tensor.size()).copy_(tensor).abs_().view(tensor.nelement())
RuntimeError: cuda runtime error (59) : device-side assert triggered at /pytorch/aten/src/THC/generic/THCTensorCopy.c:70
